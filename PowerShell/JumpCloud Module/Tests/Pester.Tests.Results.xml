<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="881" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2020-05-18" time="17:55:01">
  <environment nunit-version="2.5.8.0" os-version="10.0.14393" user-domain="fv-az314" cwd="D:\a\1\s" machine-name="fv-az314" clr-version="Unknown" user="VssAdministrator" platform="Microsoft Windows Server 2016 Datacenter|C:\windows|\Device\Harddisk0\Partition2" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="16.8844" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1" executed="True" result="Success" success="True" time="15.3057" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Function Format Tests" executed="True" result="Success" success="True" time="15.2558" asserts="0" description="Function Format Tests">
            <results>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.3091" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCAssociation&quot; equal Function &quot;Add-JCAssociation&quot; for file &quot;Add-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCAssociation&quot; equal Function &quot;Add-JCAssociation&quot; for file &quot;Add-JCAssociation.ps1&quot;" time="0.0596" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCAssociation&quot; equal MatchValue &quot;Add-JCAssociation&quot; for file &quot;Add-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCAssociation&quot; equal MatchValue &quot;Add-JCAssociation&quot; for file &quot;Add-JCAssociation.ps1&quot;" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0358" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCAssociation.ps1&quot; does not contain any functions" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.052" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCAssociation.ps1&quot; has exactly 1 function" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0325" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Copy-JCAssociation&quot; equal Function &quot;Copy-JCAssociation&quot; for file &quot;Copy-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Copy-JCAssociation&quot; equal Function &quot;Copy-JCAssociation&quot; for file &quot;Copy-JCAssociation.ps1&quot;" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Copy-JCAssociation&quot; equal MatchValue &quot;Copy-JCAssociation&quot; for file &quot;Copy-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Copy-JCAssociation&quot; equal MatchValue &quot;Copy-JCAssociation&quot; for file &quot;Copy-JCAssociation.ps1&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0348" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Copy-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Copy-JCAssociation.ps1&quot; does not contain any functions" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.033" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Copy-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Copy-JCAssociation.ps1&quot; has exactly 1 function" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0282" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Copy-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Copy-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0621" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCAssociation&quot; equal Function &quot;Get-JCAssociation&quot; for file &quot;Get-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCAssociation&quot; equal Function &quot;Get-JCAssociation&quot; for file &quot;Get-JCAssociation.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCAssociation&quot; equal MatchValue &quot;Get-JCAssociation&quot; for file &quot;Get-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCAssociation&quot; equal MatchValue &quot;Get-JCAssociation&quot; for file &quot;Get-JCAssociation.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0291" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCAssociation.ps1&quot; does not contain any functions" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0305" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCAssociation.ps1&quot; has exactly 1 function" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0291" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0552" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCAssociation&quot; equal Function &quot;Remove-JCAssociation&quot; for file &quot;Remove-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCAssociation&quot; equal Function &quot;Remove-JCAssociation&quot; for file &quot;Remove-JCAssociation.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCAssociation&quot; equal MatchValue &quot;Remove-JCAssociation&quot; for file &quot;Remove-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCAssociation&quot; equal MatchValue &quot;Remove-JCAssociation&quot; for file &quot;Remove-JCAssociation.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCAssociation.ps1&quot; does not contain any functions" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0314" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCAssociation.ps1&quot; has exactly 1 function" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0397" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Connect-JCOnline&quot; equal Function &quot;Connect-JCOnline&quot; for file &quot;Connect-JCOnline.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Connect-JCOnline&quot; equal Function &quot;Connect-JCOnline&quot; for file &quot;Connect-JCOnline.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Connect-JCOnline&quot; equal MatchValue &quot;Connect-JCOnline&quot; for file &quot;Connect-JCOnline.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Connect-JCOnline&quot; equal MatchValue &quot;Connect-JCOnline&quot; for file &quot;Connect-JCOnline.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0306" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Connect-JCOnline.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Connect-JCOnline.ps1&quot; does not contain any functions" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Connect-JCOnline.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Connect-JCOnline.ps1&quot; has exactly 1 function" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0297" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Connect-JCOnline.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Connect-JCOnline.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0331" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCOrganization&quot; equal Function &quot;Get-JCOrganization&quot; for file &quot;Get-JCOrganization.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCOrganization&quot; equal Function &quot;Get-JCOrganization&quot; for file &quot;Get-JCOrganization.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCOrganization&quot; equal MatchValue &quot;Get-JCOrganization&quot; for file &quot;Get-JCOrganization.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCOrganization&quot; equal MatchValue &quot;Get-JCOrganization&quot; for file &quot;Get-JCOrganization.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.053" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCOrganization.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCOrganization.ps1&quot; does not contain any functions" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0339" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCOrganization.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCOrganization.ps1&quot; has exactly 1 function" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0356" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCOrganization.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCOrganization.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0431" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCOrganization&quot; equal Function &quot;Set-JCOrganization&quot; for file &quot;Set-JCOrganization.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCOrganization&quot; equal Function &quot;Set-JCOrganization&quot; for file &quot;Set-JCOrganization.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCOrganization&quot; equal MatchValue &quot;Set-JCOrganization&quot; for file &quot;Set-JCOrganization.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCOrganization&quot; equal MatchValue &quot;Set-JCOrganization&quot; for file &quot;Set-JCOrganization.ps1&quot;" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0561" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCOrganization.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCOrganization.ps1&quot; does not contain any functions" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.1127" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCOrganization.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCOrganization.ps1&quot; has exactly 1 function" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0337" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCOrganization.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCOrganization.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0381" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Update-JCModule&quot; equal Function &quot;Update-JCModule&quot; for file &quot;Update-JCModule.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Update-JCModule&quot; equal Function &quot;Update-JCModule&quot; for file &quot;Update-JCModule.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Update-JCModule&quot; equal MatchValue &quot;Update-JCModule&quot; for file &quot;Update-JCModule.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Update-JCModule&quot; equal MatchValue &quot;Update-JCModule&quot; for file &quot;Update-JCModule.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0283" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Update-JCModule.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Update-JCModule.ps1&quot; does not contain any functions" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0285" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Update-JCModule.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Update-JCModule.ps1&quot; has exactly 1 function" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.04" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCCommand&quot; equal Function &quot;Get-JCCommand&quot; for file &quot;Get-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommand&quot; equal Function &quot;Get-JCCommand&quot; for file &quot;Get-JCCommand.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCCommand&quot; equal MatchValue &quot;Get-JCCommand&quot; for file &quot;Get-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommand&quot; equal MatchValue &quot;Get-JCCommand&quot; for file &quot;Get-JCCommand.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0271" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCCommand.ps1&quot; does not contain any functions" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0287" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCCommand.ps1&quot; has exactly 1 function" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0757" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Import-JCCommand&quot; equal Function &quot;Import-JCCommand&quot; for file &quot;Import-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Import-JCCommand&quot; equal Function &quot;Import-JCCommand&quot; for file &quot;Import-JCCommand.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Import-JCCommand&quot; equal MatchValue &quot;Import-JCCommand&quot; for file &quot;Import-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Import-JCCommand&quot; equal MatchValue &quot;Import-JCCommand&quot; for file &quot;Import-JCCommand.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0278" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Import-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Import-JCCommand.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0377" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Import-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Import-JCCommand.ps1&quot; has exactly 1 function" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.027" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Import-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Import-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0318" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Invoke-JCCommand&quot; equal Function &quot;Invoke-JCCommand&quot; for file &quot;Invoke-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCCommand&quot; equal Function &quot;Invoke-JCCommand&quot; for file &quot;Invoke-JCCommand.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Invoke-JCCommand&quot; equal MatchValue &quot;Invoke-JCCommand&quot; for file &quot;Invoke-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCCommand&quot; equal MatchValue &quot;Invoke-JCCommand&quot; for file &quot;Invoke-JCCommand.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0317" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Invoke-JCCommand.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.1015" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Invoke-JCCommand.ps1&quot; has exactly 1 function" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0353" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Invoke-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0346" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Invoke-JCDeployment&quot; equal Function &quot;Invoke-JCDeployment&quot; for file &quot;Invoke-JCDeployment.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCDeployment&quot; equal Function &quot;Invoke-JCDeployment&quot; for file &quot;Invoke-JCDeployment.ps1&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Invoke-JCDeployment&quot; equal MatchValue &quot;Invoke-JCDeployment&quot; for file &quot;Invoke-JCDeployment.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCDeployment&quot; equal MatchValue &quot;Invoke-JCDeployment&quot; for file &quot;Invoke-JCDeployment.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0384" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCDeployment.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Invoke-JCDeployment.ps1&quot; does not contain any functions" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0304" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCDeployment.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Invoke-JCDeployment.ps1&quot; has exactly 1 function" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0286" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCDeployment.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Invoke-JCDeployment.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCCommand&quot; equal Function &quot;New-JCCommand&quot; for file &quot;New-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCCommand&quot; equal Function &quot;New-JCCommand&quot; for file &quot;New-JCCommand.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCCommand&quot; equal MatchValue &quot;New-JCCommand&quot; for file &quot;New-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCCommand&quot; equal MatchValue &quot;New-JCCommand&quot; for file &quot;New-JCCommand.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0286" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCCommand.ps1&quot; does not contain any functions" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0284" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCCommand.ps1&quot; has exactly 1 function" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0271" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0308" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCDeploymentTemplate&quot; equal Function &quot;New-JCDeploymentTemplate&quot; for file &quot;New-JCDeploymentTemplate.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCDeploymentTemplate&quot; equal Function &quot;New-JCDeploymentTemplate&quot; for file &quot;New-JCDeploymentTemplate.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCDeploymentTemplate&quot; equal MatchValue &quot;New-JCDeploymentTemplate&quot; for file &quot;New-JCDeploymentTemplate.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCDeploymentTemplate&quot; equal MatchValue &quot;New-JCDeploymentTemplate&quot; for file &quot;New-JCDeploymentTemplate.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCDeploymentTemplate.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCDeploymentTemplate.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0286" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCDeploymentTemplate.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCDeploymentTemplate.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0385" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCCommand&quot; equal Function &quot;Remove-JCCommand&quot; for file &quot;Remove-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommand&quot; equal Function &quot;Remove-JCCommand&quot; for file &quot;Remove-JCCommand.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCCommand&quot; equal MatchValue &quot;Remove-JCCommand&quot; for file &quot;Remove-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommand&quot; equal MatchValue &quot;Remove-JCCommand&quot; for file &quot;Remove-JCCommand.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.026" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCCommand.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.027" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCCommand.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0317" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCCommand&quot; equal Function &quot;Set-JCCommand&quot; for file &quot;Set-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCCommand&quot; equal Function &quot;Set-JCCommand&quot; for file &quot;Set-JCCommand.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCCommand&quot; equal MatchValue &quot;Set-JCCommand&quot; for file &quot;Set-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCCommand&quot; equal MatchValue &quot;Set-JCCommand&quot; for file &quot;Set-JCCommand.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0268" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCCommand.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0284" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCCommand.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0286" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCCommandResult&quot; equal Function &quot;Get-JCCommandResult&quot; for file &quot;Get-JCCommandResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommandResult&quot; equal Function &quot;Get-JCCommandResult&quot; for file &quot;Get-JCCommandResult.ps1&quot;" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCCommandResult&quot; equal MatchValue &quot;Get-JCCommandResult&quot; for file &quot;Get-JCCommandResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommandResult&quot; equal MatchValue &quot;Get-JCCommandResult&quot; for file &quot;Get-JCCommandResult.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0268" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandResult.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCCommandResult.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.031" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandResult.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCCommandResult.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCCommandResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCCommandResult&quot; equal Function &quot;Remove-JCCommandResult&quot; for file &quot;Remove-JCCommandResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommandResult&quot; equal Function &quot;Remove-JCCommandResult&quot; for file &quot;Remove-JCCommandResult.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCCommandResult&quot; equal MatchValue &quot;Remove-JCCommandResult&quot; for file &quot;Remove-JCCommandResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommandResult&quot; equal MatchValue &quot;Remove-JCCommandResult&quot; for file &quot;Remove-JCCommandResult.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandResult.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCCommandResult.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0295" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandResult.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCCommandResult.ps1&quot; has exactly 1 function" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.029" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCCommandResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0316" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCCommandTarget&quot; equal Function &quot;Add-JCCommandTarget&quot; for file &quot;Add-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCCommandTarget&quot; equal Function &quot;Add-JCCommandTarget&quot; for file &quot;Add-JCCommandTarget.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCCommandTarget&quot; equal MatchValue &quot;Add-JCCommandTarget&quot; for file &quot;Add-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCCommandTarget&quot; equal MatchValue &quot;Add-JCCommandTarget&quot; for file &quot;Add-JCCommandTarget.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0288" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCCommandTarget.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCCommandTarget.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0308" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCCommandTarget.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCCommandTarget.ps1&quot; has exactly 1 function" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0276" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0402" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCCommandTarget&quot; equal Function &quot;Get-JCCommandTarget&quot; for file &quot;Get-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommandTarget&quot; equal Function &quot;Get-JCCommandTarget&quot; for file &quot;Get-JCCommandTarget.ps1&quot;" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCCommandTarget&quot; equal MatchValue &quot;Get-JCCommandTarget&quot; for file &quot;Get-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommandTarget&quot; equal MatchValue &quot;Get-JCCommandTarget&quot; for file &quot;Get-JCCommandTarget.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0265" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandTarget.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCCommandTarget.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0277" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandTarget.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCCommandTarget.ps1&quot; has exactly 1 function" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0317" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0321" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCCommandTarget&quot; equal Function &quot;Remove-JCCommandTarget&quot; for file &quot;Remove-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommandTarget&quot; equal Function &quot;Remove-JCCommandTarget&quot; for file &quot;Remove-JCCommandTarget.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCCommandTarget&quot; equal MatchValue &quot;Remove-JCCommandTarget&quot; for file &quot;Remove-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommandTarget&quot; equal MatchValue &quot;Remove-JCCommandTarget&quot; for file &quot;Remove-JCCommandTarget.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0259" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandTarget.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCCommandTarget.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0277" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandTarget.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCCommandTarget.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0317" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0309" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCEvent&quot; equal Function &quot;Get-JCEvent&quot; for file &quot;Get-JCEvent.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCEvent&quot; equal Function &quot;Get-JCEvent&quot; for file &quot;Get-JCEvent.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCEvent&quot; equal MatchValue &quot;Get-JCEvent&quot; for file &quot;Get-JCEvent.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCEvent&quot; equal MatchValue &quot;Get-JCEvent&quot; for file &quot;Get-JCEvent.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0266" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCEvent.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCEvent.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0327" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCEvent.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCEvent.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0273" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCEvent.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCEvent.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0322" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCGroup&quot; equal Function &quot;Get-JCGroup&quot; for file &quot;Get-JCGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCGroup&quot; equal Function &quot;Get-JCGroup&quot; for file &quot;Get-JCGroup.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCGroup&quot; equal MatchValue &quot;Get-JCGroup&quot; for file &quot;Get-JCGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCGroup&quot; equal MatchValue &quot;Get-JCGroup&quot; for file &quot;Get-JCGroup.ps1&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0298" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCGroup.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCGroup.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0267" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.031" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCSystemGroupMember&quot; equal Function &quot;Add-JCSystemGroupMember&quot; for file &quot;Add-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCSystemGroupMember&quot; equal Function &quot;Add-JCSystemGroupMember&quot; for file &quot;Add-JCSystemGroupMember.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCSystemGroupMember&quot; equal MatchValue &quot;Add-JCSystemGroupMember&quot; for file &quot;Add-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCSystemGroupMember&quot; equal MatchValue &quot;Add-JCSystemGroupMember&quot; for file &quot;Add-JCSystemGroupMember.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0321" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCSystemGroupMember.ps1&quot; does not contain any functions" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0295" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCSystemGroupMember.ps1&quot; has exactly 1 function" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0273" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0346" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCSystemGroupMember&quot; equal Function &quot;Get-JCSystemGroupMember&quot; for file &quot;Get-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemGroupMember&quot; equal Function &quot;Get-JCSystemGroupMember&quot; for file &quot;Get-JCSystemGroupMember.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCSystemGroupMember&quot; equal MatchValue &quot;Get-JCSystemGroupMember&quot; for file &quot;Get-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemGroupMember&quot; equal MatchValue &quot;Get-JCSystemGroupMember&quot; for file &quot;Get-JCSystemGroupMember.ps1&quot;" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0263" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCSystemGroupMember.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0267" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCSystemGroupMember.ps1&quot; has exactly 1 function" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0258" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0309" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCSystemGroup&quot; equal Function &quot;New-JCSystemGroup&quot; for file &quot;New-JCSystemGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCSystemGroup&quot; equal Function &quot;New-JCSystemGroup&quot; for file &quot;New-JCSystemGroup.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCSystemGroup&quot; equal MatchValue &quot;New-JCSystemGroup&quot; for file &quot;New-JCSystemGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCSystemGroup&quot; equal MatchValue &quot;New-JCSystemGroup&quot; for file &quot;New-JCSystemGroup.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0259" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCSystemGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCSystemGroup.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0267" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCSystemGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCSystemGroup.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0274" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCSystemGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCSystemGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0305" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCSystemGroup&quot; equal Function &quot;Remove-JCSystemGroup&quot; for file &quot;Remove-JCSystemGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemGroup&quot; equal Function &quot;Remove-JCSystemGroup&quot; for file &quot;Remove-JCSystemGroup.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCSystemGroup&quot; equal MatchValue &quot;Remove-JCSystemGroup&quot; for file &quot;Remove-JCSystemGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemGroup&quot; equal MatchValue &quot;Remove-JCSystemGroup&quot; for file &quot;Remove-JCSystemGroup.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0268" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCSystemGroup.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0337" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCSystemGroup.ps1&quot; has exactly 1 function" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0256" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCSystemGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.029" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCSystemGroupMember&quot; equal Function &quot;Remove-JCSystemGroupMember&quot; for file &quot;Remove-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemGroupMember&quot; equal Function &quot;Remove-JCSystemGroupMember&quot; for file &quot;Remove-JCSystemGroupMember.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCSystemGroupMember&quot; equal MatchValue &quot;Remove-JCSystemGroupMember&quot; for file &quot;Remove-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemGroupMember&quot; equal MatchValue &quot;Remove-JCSystemGroupMember&quot; for file &quot;Remove-JCSystemGroupMember.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0243" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0296" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; has exactly 1 function" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0297" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0337" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCUserGroupMember&quot; equal Function &quot;Add-JCUserGroupMember&quot; for file &quot;Add-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCUserGroupMember&quot; equal Function &quot;Add-JCUserGroupMember&quot; for file &quot;Add-JCUserGroupMember.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCUserGroupMember&quot; equal MatchValue &quot;Add-JCUserGroupMember&quot; for file &quot;Add-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCUserGroupMember&quot; equal MatchValue &quot;Add-JCUserGroupMember&quot; for file &quot;Add-JCUserGroupMember.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0297" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCUserGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCUserGroupMember.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCUserGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCUserGroupMember.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0273" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.035" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCUserGroupMember&quot; equal Function &quot;Get-JCUserGroupMember&quot; for file &quot;Get-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUserGroupMember&quot; equal Function &quot;Get-JCUserGroupMember&quot; for file &quot;Get-JCUserGroupMember.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCUserGroupMember&quot; equal MatchValue &quot;Get-JCUserGroupMember&quot; for file &quot;Get-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUserGroupMember&quot; equal MatchValue &quot;Get-JCUserGroupMember&quot; for file &quot;Get-JCUserGroupMember.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0248" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCUserGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCUserGroupMember.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0263" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCUserGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCUserGroupMember.ps1&quot; has exactly 1 function" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0259" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCUserGroup&quot; equal Function &quot;New-JCUserGroup&quot; for file &quot;New-JCUserGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCUserGroup&quot; equal Function &quot;New-JCUserGroup&quot; for file &quot;New-JCUserGroup.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCUserGroup&quot; equal MatchValue &quot;New-JCUserGroup&quot; for file &quot;New-JCUserGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCUserGroup&quot; equal MatchValue &quot;New-JCUserGroup&quot; for file &quot;New-JCUserGroup.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0251" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCUserGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCUserGroup.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0264" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCUserGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCUserGroup.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.029" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCUserGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCUserGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0302" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCUserGroup&quot; equal Function &quot;Remove-JCUserGroup&quot; for file &quot;Remove-JCUserGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUserGroup&quot; equal Function &quot;Remove-JCUserGroup&quot; for file &quot;Remove-JCUserGroup.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCUserGroup&quot; equal MatchValue &quot;Remove-JCUserGroup&quot; for file &quot;Remove-JCUserGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUserGroup&quot; equal MatchValue &quot;Remove-JCUserGroup&quot; for file &quot;Remove-JCUserGroup.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0254" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCUserGroup.ps1&quot; does not contain any functions" time="0.0013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.031" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCUserGroup.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0289" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCUserGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCUserGroupMember&quot; equal Function &quot;Remove-JCUserGroupMember&quot; for file &quot;Remove-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUserGroupMember&quot; equal Function &quot;Remove-JCUserGroupMember&quot; for file &quot;Remove-JCUserGroupMember.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCUserGroupMember&quot; equal MatchValue &quot;Remove-JCUserGroupMember&quot; for file &quot;Remove-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUserGroupMember&quot; equal MatchValue &quot;Remove-JCUserGroupMember&quot; for file &quot;Remove-JCUserGroupMember.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCUserGroupMember.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.031" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCUserGroupMember.ps1&quot; has exactly 1 function" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0272" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0308" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCUserGroupLDAP&quot; equal Function &quot;Set-JCUserGroupLDAP&quot; for file &quot;Set-JCUserGroupLDAP.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCUserGroupLDAP&quot; equal Function &quot;Set-JCUserGroupLDAP&quot; for file &quot;Set-JCUserGroupLDAP.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCUserGroupLDAP&quot; equal MatchValue &quot;Set-JCUserGroupLDAP&quot; for file &quot;Set-JCUserGroupLDAP.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCUserGroupLDAP&quot; equal MatchValue &quot;Set-JCUserGroupLDAP&quot; for file &quot;Set-JCUserGroupLDAP.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0296" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; does not contain any functions" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0278" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; has exactly 1 function" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0264" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCPolicy&quot; equal Function &quot;Get-JCPolicy&quot; for file &quot;Get-JCPolicy.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicy&quot; equal Function &quot;Get-JCPolicy&quot; for file &quot;Get-JCPolicy.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCPolicy&quot; equal MatchValue &quot;Get-JCPolicy&quot; for file &quot;Get-JCPolicy.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicy&quot; equal MatchValue &quot;Get-JCPolicy&quot; for file &quot;Get-JCPolicy.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicy.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCPolicy.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0275" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicy.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCPolicy.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicy.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCPolicy.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.035" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCPolicyResult&quot; equal Function &quot;Get-JCPolicyResult&quot; for file &quot;Get-JCPolicyResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyResult&quot; equal Function &quot;Get-JCPolicyResult&quot; for file &quot;Get-JCPolicyResult.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCPolicyResult&quot; equal MatchValue &quot;Get-JCPolicyResult&quot; for file &quot;Get-JCPolicyResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyResult&quot; equal MatchValue &quot;Get-JCPolicyResult&quot; for file &quot;Get-JCPolicyResult.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyResult.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCPolicyResult.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0277" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyResult.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCPolicyResult.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0304" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCPolicyResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0321" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCPolicyTargetGroup&quot; equal Function &quot;Get-JCPolicyTargetGroup&quot; for file &quot;Get-JCPolicyTargetGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyTargetGroup&quot; equal Function &quot;Get-JCPolicyTargetGroup&quot; for file &quot;Get-JCPolicyTargetGroup.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCPolicyTargetGroup&quot; equal MatchValue &quot;Get-JCPolicyTargetGroup&quot; for file &quot;Get-JCPolicyTargetGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyTargetGroup&quot; equal MatchValue &quot;Get-JCPolicyTargetGroup&quot; for file &quot;Get-JCPolicyTargetGroup.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0268" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0331" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; has exactly 1 function" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0261" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0314" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCPolicyTargetSystem&quot; equal Function &quot;Get-JCPolicyTargetSystem&quot; for file &quot;Get-JCPolicyTargetSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyTargetSystem&quot; equal Function &quot;Get-JCPolicyTargetSystem&quot; for file &quot;Get-JCPolicyTargetSystem.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCPolicyTargetSystem&quot; equal MatchValue &quot;Get-JCPolicyTargetSystem&quot; for file &quot;Get-JCPolicyTargetSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyTargetSystem&quot; equal MatchValue &quot;Get-JCPolicyTargetSystem&quot; for file &quot;Get-JCPolicyTargetSystem.ps1&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0261" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0299" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0258" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.03" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCRadiusReplyAttribute&quot; equal Function &quot;Add-JCRadiusReplyAttribute&quot; for file &quot;Add-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCRadiusReplyAttribute&quot; equal Function &quot;Add-JCRadiusReplyAttribute&quot; for file &quot;Add-JCRadiusReplyAttribute.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Add-JCRadiusReplyAttribute&quot; for file &quot;Add-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Add-JCRadiusReplyAttribute&quot; for file &quot;Add-JCRadiusReplyAttribute.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.029" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0273" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0269" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0335" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCRadiusReplyAttribute&quot; equal Function &quot;Get-JCRadiusReplyAttribute&quot; for file &quot;Get-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCRadiusReplyAttribute&quot; equal Function &quot;Get-JCRadiusReplyAttribute&quot; for file &quot;Get-JCRadiusReplyAttribute.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Get-JCRadiusReplyAttribute&quot; for file &quot;Get-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Get-JCRadiusReplyAttribute&quot; for file &quot;Get-JCRadiusReplyAttribute.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0255" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" time="0.0013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0279" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0269" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0343" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCRadiusServer&quot; equal Function &quot;Get-JCRadiusServer&quot; for file &quot;Get-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCRadiusServer&quot; equal Function &quot;Get-JCRadiusServer&quot; for file &quot;Get-JCRadiusServer.ps1&quot;" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCRadiusServer&quot; equal MatchValue &quot;Get-JCRadiusServer&quot; for file &quot;Get-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCRadiusServer&quot; equal MatchValue &quot;Get-JCRadiusServer&quot; for file &quot;Get-JCRadiusServer.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0253" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCRadiusServer.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0266" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCRadiusServer.ps1&quot; has exactly 1 function" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0288" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0312" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCRadiusServer&quot; equal Function &quot;New-JCRadiusServer&quot; for file &quot;New-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCRadiusServer&quot; equal Function &quot;New-JCRadiusServer&quot; for file &quot;New-JCRadiusServer.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCRadiusServer&quot; equal MatchValue &quot;New-JCRadiusServer&quot; for file &quot;New-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCRadiusServer&quot; equal MatchValue &quot;New-JCRadiusServer&quot; for file &quot;New-JCRadiusServer.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCRadiusServer.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.028" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCRadiusServer.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.029" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0312" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCRadiusReplyAttribute&quot; equal Function &quot;Remove-JCRadiusReplyAttribute&quot; for file &quot;Remove-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCRadiusReplyAttribute&quot; equal Function &quot;Remove-JCRadiusReplyAttribute&quot; for file &quot;Remove-JCRadiusReplyAttribute.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Remove-JCRadiusReplyAttribute&quot; for file &quot;Remove-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Remove-JCRadiusReplyAttribute&quot; for file &quot;Remove-JCRadiusReplyAttribute.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0256" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0311" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0276" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0323" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCRadiusServer&quot; equal Function &quot;Remove-JCRadiusServer&quot; for file &quot;Remove-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCRadiusServer&quot; equal Function &quot;Remove-JCRadiusServer&quot; for file &quot;Remove-JCRadiusServer.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCRadiusServer&quot; equal MatchValue &quot;Remove-JCRadiusServer&quot; for file &quot;Remove-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCRadiusServer&quot; equal MatchValue &quot;Remove-JCRadiusServer&quot; for file &quot;Remove-JCRadiusServer.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0283" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCRadiusServer.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.033" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCRadiusServer.ps1&quot; has exactly 1 function" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0269" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCRadiusReplyAttribute&quot; equal Function &quot;Set-JCRadiusReplyAttribute&quot; for file &quot;Set-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCRadiusReplyAttribute&quot; equal Function &quot;Set-JCRadiusReplyAttribute&quot; for file &quot;Set-JCRadiusReplyAttribute.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Set-JCRadiusReplyAttribute&quot; for file &quot;Set-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Set-JCRadiusReplyAttribute&quot; for file &quot;Set-JCRadiusReplyAttribute.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.034" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" time="0.0013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0271" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0263" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCRadiusServer&quot; equal Function &quot;Set-JCRadiusServer&quot; for file &quot;Set-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCRadiusServer&quot; equal Function &quot;Set-JCRadiusServer&quot; for file &quot;Set-JCRadiusServer.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCRadiusServer&quot; equal MatchValue &quot;Set-JCRadiusServer&quot; for file &quot;Set-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCRadiusServer&quot; equal MatchValue &quot;Set-JCRadiusServer&quot; for file &quot;Set-JCRadiusServer.ps1&quot;" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCRadiusServer.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0273" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCRadiusServer.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0252" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0322" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCSystem&quot; equal Function &quot;Get-JCSystem&quot; for file &quot;Get-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystem&quot; equal Function &quot;Get-JCSystem&quot; for file &quot;Get-JCSystem.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCSystem&quot; equal MatchValue &quot;Get-JCSystem&quot; for file &quot;Get-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystem&quot; equal MatchValue &quot;Get-JCSystem&quot; for file &quot;Get-JCSystem.ps1&quot;" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.027" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystem.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCSystem.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0266" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystem.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCSystem.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCSystemInsights&quot; equal Function &quot;Get-JCSystemInsights&quot; for file &quot;Get-JCSystemInsights.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemInsights&quot; equal Function &quot;Get-JCSystemInsights&quot; for file &quot;Get-JCSystemInsights.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCSystemInsights&quot; equal MatchValue &quot;Get-JCSystemInsights&quot; for file &quot;Get-JCSystemInsights.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemInsights&quot; equal MatchValue &quot;Get-JCSystemInsights&quot; for file &quot;Get-JCSystemInsights.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.026" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemInsights.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCSystemInsights.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0324" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemInsights.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCSystemInsights.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0267" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemInsights.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCSystemInsights.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0325" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCSystem&quot; equal Function &quot;Remove-JCSystem&quot; for file &quot;Remove-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystem&quot; equal Function &quot;Remove-JCSystem&quot; for file &quot;Remove-JCSystem.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCSystem&quot; equal MatchValue &quot;Remove-JCSystem&quot; for file &quot;Remove-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystem&quot; equal MatchValue &quot;Remove-JCSystem&quot; for file &quot;Remove-JCSystem.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0253" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystem.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCSystem.ps1&quot; does not contain any functions" time="0.0013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0278" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystem.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCSystem.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0264" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.031" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCSystem&quot; equal Function &quot;Set-JCSystem&quot; for file &quot;Set-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCSystem&quot; equal Function &quot;Set-JCSystem&quot; for file &quot;Set-JCSystem.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCSystem&quot; equal MatchValue &quot;Set-JCSystem&quot; for file &quot;Set-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCSystem&quot; equal MatchValue &quot;Set-JCSystem&quot; for file &quot;Set-JCSystem.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystem.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCSystem.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0292" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystem.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCSystem.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0276" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0357" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCSystemUser&quot; equal Function &quot;Add-JCSystemUser&quot; for file &quot;Add-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCSystemUser&quot; equal Function &quot;Add-JCSystemUser&quot; for file &quot;Add-JCSystemUser.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCSystemUser&quot; equal MatchValue &quot;Add-JCSystemUser&quot; for file &quot;Add-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCSystemUser&quot; equal MatchValue &quot;Add-JCSystemUser&quot; for file &quot;Add-JCSystemUser.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0256" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCSystemUser.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0277" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCSystemUser.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0263" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0352" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCSystemUser&quot; equal Function &quot;Get-JCSystemUser&quot; for file &quot;Get-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemUser&quot; equal Function &quot;Get-JCSystemUser&quot; for file &quot;Get-JCSystemUser.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCSystemUser&quot; equal MatchValue &quot;Get-JCSystemUser&quot; for file &quot;Get-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemUser&quot; equal MatchValue &quot;Get-JCSystemUser&quot; for file &quot;Get-JCSystemUser.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0251" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCSystemUser.ps1&quot; does not contain any functions" time="0.0013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0267" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCSystemUser.ps1&quot; has exactly 1 function" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0311" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCSystemUser&quot; equal Function &quot;Remove-JCSystemUser&quot; for file &quot;Remove-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemUser&quot; equal Function &quot;Remove-JCSystemUser&quot; for file &quot;Remove-JCSystemUser.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCSystemUser&quot; equal MatchValue &quot;Remove-JCSystemUser&quot; for file &quot;Remove-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemUser&quot; equal MatchValue &quot;Remove-JCSystemUser&quot; for file &quot;Remove-JCSystemUser.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0254" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCSystemUser.ps1&quot; does not contain any functions" time="0.0012" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCSystemUser.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCSystemUser&quot; equal Function &quot;Set-JCSystemUser&quot; for file &quot;Set-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCSystemUser&quot; equal Function &quot;Set-JCSystemUser&quot; for file &quot;Set-JCSystemUser.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCSystemUser&quot; equal MatchValue &quot;Set-JCSystemUser&quot; for file &quot;Set-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCSystemUser&quot; equal MatchValue &quot;Set-JCSystemUser&quot; for file &quot;Set-JCSystemUser.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0249" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystemUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCSystemUser.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0315" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystemUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCSystemUser.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0289" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.031" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCUser&quot; equal Function &quot;Get-JCUser&quot; for file &quot;Get-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUser&quot; equal Function &quot;Get-JCUser&quot; for file &quot;Get-JCUser.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCUser&quot; equal MatchValue &quot;Get-JCUser&quot; for file &quot;Get-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUser&quot; equal MatchValue &quot;Get-JCUser&quot; for file &quot;Get-JCUser.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.03" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCUser.ps1&quot; does not contain any functions" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0271" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCUser.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0271" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0349" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCUser&quot; equal Function &quot;New-JCUser&quot; for file &quot;New-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCUser&quot; equal Function &quot;New-JCUser&quot; for file &quot;New-JCUser.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCUser&quot; equal MatchValue &quot;New-JCUser&quot; for file &quot;New-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCUser&quot; equal MatchValue &quot;New-JCUser&quot; for file &quot;New-JCUser.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.025" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCUser.ps1&quot; does not contain any functions" time="0.0013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0276" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCUser.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.027" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0364" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCUser&quot; equal Function &quot;Remove-JCUser&quot; for file &quot;Remove-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUser&quot; equal Function &quot;Remove-JCUser&quot; for file &quot;Remove-JCUser.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCUser&quot; equal MatchValue &quot;Remove-JCUser&quot; for file &quot;Remove-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUser&quot; equal MatchValue &quot;Remove-JCUser&quot; for file &quot;Remove-JCUser.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0253" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCUser.ps1&quot; does not contain any functions" time="0.0013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCUser.ps1&quot; has exactly 1 function" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0314" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.03" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCUser&quot; equal Function &quot;Set-JCUser&quot; for file &quot;Set-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCUser&quot; equal Function &quot;Set-JCUser&quot; for file &quot;Set-JCUser.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCUser&quot; equal MatchValue &quot;Set-JCUser&quot; for file &quot;Set-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCUser&quot; equal MatchValue &quot;Set-JCUser&quot; for file &quot;Set-JCUser.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0261" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCUser.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0322" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCUser.ps1&quot; has exactly 1 function" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0302" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0307" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCBackup&quot; equal Function &quot;Get-JCBackup&quot; for file &quot;Get-JCBackup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCBackup&quot; equal Function &quot;Get-JCBackup&quot; for file &quot;Get-JCBackup.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCBackup&quot; equal MatchValue &quot;Get-JCBackup&quot; for file &quot;Get-JCBackup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCBackup&quot; equal MatchValue &quot;Get-JCBackup&quot; for file &quot;Get-JCBackup.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0268" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCBackup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCBackup.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0312" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCBackup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCBackup.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCBackup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCBackup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0348" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Send-JCPasswordReset&quot; equal Function &quot;Send-JCPasswordReset&quot; for file &quot;Send-JCPasswordReset.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Send-JCPasswordReset&quot; equal Function &quot;Send-JCPasswordReset&quot; for file &quot;Send-JCPasswordReset.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Send-JCPasswordReset&quot; equal MatchValue &quot;Send-JCPasswordReset&quot; for file &quot;Send-JCPasswordReset.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Send-JCPasswordReset&quot; equal MatchValue &quot;Send-JCPasswordReset&quot; for file &quot;Send-JCPasswordReset.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0305" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Send-JCPasswordReset.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Send-JCPasswordReset.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0269" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Send-JCPasswordReset.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Send-JCPasswordReset.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0276" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Send-JCPasswordReset.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Send-JCPasswordReset.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0369" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Import-JCUsersFromCSV&quot; equal Function &quot;Import-JCUsersFromCSV&quot; for file &quot;Import-JCUsersFromCSV.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Import-JCUsersFromCSV&quot; equal Function &quot;Import-JCUsersFromCSV&quot; for file &quot;Import-JCUsersFromCSV.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Import-JCUsersFromCSV&quot; equal MatchValue &quot;Import-JCUsersFromCSV&quot; for file &quot;Import-JCUsersFromCSV.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Import-JCUsersFromCSV&quot; equal MatchValue &quot;Import-JCUsersFromCSV&quot; for file &quot;Import-JCUsersFromCSV.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.028" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Import-JCUsersFromCSV.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Import-JCUsersFromCSV.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0307" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Import-JCUsersFromCSV.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Import-JCUsersFromCSV.ps1&quot; has exactly 1 function" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0306" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Import-JCUsersFromCSV.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Import-JCUsersFromCSV.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0356" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCImportTemplate&quot; equal Function &quot;New-JCImportTemplate&quot; for file &quot;New-JCImportTemplate.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCImportTemplate&quot; equal Function &quot;New-JCImportTemplate&quot; for file &quot;New-JCImportTemplate.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCImportTemplate&quot; equal MatchValue &quot;New-JCImportTemplate&quot; for file &quot;New-JCImportTemplate.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCImportTemplate&quot; equal MatchValue &quot;New-JCImportTemplate&quot; for file &quot;New-JCImportTemplate.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0273" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCImportTemplate.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCImportTemplate.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0275" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCImportTemplate.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCImportTemplate.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0318" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCImportTemplate.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCImportTemplate.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0318" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Update-JCUsersFromCSV&quot; equal Function &quot;Update-JCUsersFromCSV&quot; for file &quot;Update-JCUsersFromCSV.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Update-JCUsersFromCSV&quot; equal Function &quot;Update-JCUsersFromCSV&quot; for file &quot;Update-JCUsersFromCSV.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Update-JCUsersFromCSV&quot; equal MatchValue &quot;Update-JCUsersFromCSV&quot; for file &quot;Update-JCUsersFromCSV.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Update-JCUsersFromCSV&quot; equal MatchValue &quot;Update-JCUsersFromCSV&quot; for file &quot;Update-JCUsersFromCSV.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Update-JCUsersFromCSV.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Update-JCUsersFromCSV.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0337" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Update-JCUsersFromCSV.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Update-JCUsersFromCSV.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.0312" asserts="0" description="Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Update-JCUsersFromCSV.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Update-JCUsersFromCSV.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0349" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Format-JCAssociation&quot; equal Function &quot;Format-JCAssociation&quot; for file &quot;Format-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Format-JCAssociation&quot; equal Function &quot;Format-JCAssociation&quot; for file &quot;Format-JCAssociation.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Format-JCAssociation&quot; equal MatchValue &quot;Format-JCAssociation&quot; for file &quot;Format-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Format-JCAssociation&quot; equal MatchValue &quot;Format-JCAssociation&quot; for file &quot;Format-JCAssociation.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0323" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Format-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Format-JCAssociation.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Format-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Format-JCAssociation.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0311" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-DynamicParamAssociation&quot; equal Function &quot;Get-DynamicParamAssociation&quot; for file &quot;Get-DynamicParamAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-DynamicParamAssociation&quot; equal Function &quot;Get-DynamicParamAssociation&quot; for file &quot;Get-DynamicParamAssociation.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-DynamicParamAssociation&quot; equal MatchValue &quot;Get-DynamicParamAssociation&quot; for file &quot;Get-DynamicParamAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-DynamicParamAssociation&quot; equal MatchValue &quot;Get-DynamicParamAssociation&quot; for file &quot;Get-DynamicParamAssociation.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0249" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-DynamicParamAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-DynamicParamAssociation.ps1&quot; does not contain any functions" time="0.0013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0307" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-DynamicParamAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-DynamicParamAssociation.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0305" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Invoke-JCAssociation&quot; equal Function &quot;Invoke-JCAssociation&quot; for file &quot;Invoke-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCAssociation&quot; equal Function &quot;Invoke-JCAssociation&quot; for file &quot;Invoke-JCAssociation.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Invoke-JCAssociation&quot; equal MatchValue &quot;Invoke-JCAssociation&quot; for file &quot;Invoke-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCAssociation&quot; equal MatchValue &quot;Invoke-JCAssociation&quot; for file &quot;Invoke-JCAssociation.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0287" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Invoke-JCAssociation.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Invoke-JCAssociation.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0309" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-ModuleBanner&quot; equal Function &quot;Get-ModuleBanner&quot; for file &quot;Get-ModuleBanner.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-ModuleBanner&quot; equal Function &quot;Get-ModuleBanner&quot; for file &quot;Get-ModuleBanner.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-ModuleBanner&quot; equal MatchValue &quot;Get-ModuleBanner&quot; for file &quot;Get-ModuleBanner.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-ModuleBanner&quot; equal MatchValue &quot;Get-ModuleBanner&quot; for file &quot;Get-ModuleBanner.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0261" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-ModuleBanner.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-ModuleBanner.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-ModuleBanner.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-ModuleBanner.ps1&quot; has exactly 1 function" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0307" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-ModuleChangeLog&quot; equal Function &quot;Get-ModuleChangeLog&quot; for file &quot;Get-ModuleChangeLog.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-ModuleChangeLog&quot; equal Function &quot;Get-ModuleChangeLog&quot; for file &quot;Get-ModuleChangeLog.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-ModuleChangeLog&quot; equal MatchValue &quot;Get-ModuleChangeLog&quot; for file &quot;Get-ModuleChangeLog.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-ModuleChangeLog&quot; equal MatchValue &quot;Get-ModuleChangeLog&quot; for file &quot;Get-ModuleChangeLog.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-ModuleChangeLog.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-ModuleChangeLog.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0308" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-ModuleChangeLog.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-ModuleChangeLog.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0347" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCCommonParameters&quot; equal Function &quot;Get-JCCommonParameters&quot; for file &quot;Get-JCCommonParameters.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommonParameters&quot; equal Function &quot;Get-JCCommonParameters&quot; for file &quot;Get-JCCommonParameters.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCCommonParameters&quot; equal MatchValue &quot;Get-JCCommonParameters&quot; for file &quot;Get-JCCommonParameters.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommonParameters&quot; equal MatchValue &quot;Get-JCCommonParameters&quot; for file &quot;Get-JCCommonParameters.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0259" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommonParameters.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCCommonParameters.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0272" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommonParameters.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCCommonParameters.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0352" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Name&quot; equal Function &quot;Get-Hash_CommandID_Name&quot; for file &quot;Get-Hash_CommandID_Name.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Name&quot; equal Function &quot;Get-Hash_CommandID_Name&quot; for file &quot;Get-Hash_CommandID_Name.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Name&quot; equal MatchValue &quot;Get-Hash_CommandID_Name&quot; for file &quot;Get-Hash_CommandID_Name.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Name&quot; equal MatchValue &quot;Get-Hash_CommandID_Name&quot; for file &quot;Get-Hash_CommandID_Name.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0255" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Name.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_CommandID_Name.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Name.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_CommandID_Name.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0341" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Trigger&quot; equal Function &quot;Get-Hash_CommandID_Trigger&quot; for file &quot;Get-Hash_CommandID_Trigger.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Trigger&quot; equal Function &quot;Get-Hash_CommandID_Trigger&quot; for file &quot;Get-Hash_CommandID_Trigger.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Trigger&quot; equal MatchValue &quot;Get-Hash_CommandID_Trigger&quot; for file &quot;Get-Hash_CommandID_Trigger.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Trigger&quot; equal MatchValue &quot;Get-Hash_CommandID_Trigger&quot; for file &quot;Get-Hash_CommandID_Trigger.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0261" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Trigger.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_CommandID_Trigger.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0301" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Trigger.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_CommandID_Trigger.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0336" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Type&quot; equal Function &quot;Get-Hash_CommandID_Type&quot; for file &quot;Get-Hash_CommandID_Type.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Type&quot; equal Function &quot;Get-Hash_CommandID_Type&quot; for file &quot;Get-Hash_CommandID_Type.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Type&quot; equal MatchValue &quot;Get-Hash_CommandID_Type&quot; for file &quot;Get-Hash_CommandID_Type.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Type&quot; equal MatchValue &quot;Get-Hash_CommandID_Type&quot; for file &quot;Get-Hash_CommandID_Type.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0311" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Type.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_CommandID_Type.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0306" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Type.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_CommandID_Type.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0304" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_Email_ID&quot; equal Function &quot;Get-Hash_Email_ID&quot; for file &quot;Get-Hash_Email_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_Email_ID&quot; equal Function &quot;Get-Hash_Email_ID&quot; for file &quot;Get-Hash_Email_ID.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_Email_ID&quot; equal MatchValue &quot;Get-Hash_Email_ID&quot; for file &quot;Get-Hash_Email_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_Email_ID&quot; equal MatchValue &quot;Get-Hash_Email_ID&quot; for file &quot;Get-Hash_Email_ID.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0301" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_Email_ID.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_Email_ID.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0282" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_Email_ID.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_Email_ID.ps1&quot; has exactly 1 function" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0334" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_Email_Username&quot; equal Function &quot;Get-Hash_Email_Username&quot; for file &quot;Get-Hash_Email_Username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_Email_Username&quot; equal Function &quot;Get-Hash_Email_Username&quot; for file &quot;Get-Hash_Email_Username.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_Email_Username&quot; equal MatchValue &quot;Get-Hash_Email_Username&quot; for file &quot;Get-Hash_Email_Username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_Email_Username&quot; equal MatchValue &quot;Get-Hash_Email_Username&quot; for file &quot;Get-Hash_Email_Username.ps1&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.031" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_Email_Username.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_Email_Username.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0298" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_Email_Username.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_Email_Username.ps1&quot; has exactly 1 function" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0315" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_employeeIdentifier_username&quot; equal Function &quot;Get-Hash_employeeIdentifier_username&quot; for file &quot;Get-Hash_employeeIdentifier_username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_employeeIdentifier_username&quot; equal Function &quot;Get-Hash_employeeIdentifier_username&quot; for file &quot;Get-Hash_employeeIdentifier_username.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_employeeIdentifier_username&quot; equal MatchValue &quot;Get-Hash_employeeIdentifier_username&quot; for file &quot;Get-Hash_employeeIdentifier_username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_employeeIdentifier_username&quot; equal MatchValue &quot;Get-Hash_employeeIdentifier_username&quot; for file &quot;Get-Hash_employeeIdentifier_username.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0343" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_employeeIdentifier_username.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_employeeIdentifier_username.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.032" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_employeeIdentifier_username.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_employeeIdentifier_username.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0301" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_CommandName&quot; equal Function &quot;Get-Hash_ID_CommandName&quot; for file &quot;Get-Hash_ID_CommandName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_CommandName&quot; equal Function &quot;Get-Hash_ID_CommandName&quot; for file &quot;Get-Hash_ID_CommandName.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_CommandName&quot; equal MatchValue &quot;Get-Hash_ID_CommandName&quot; for file &quot;Get-Hash_ID_CommandName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_CommandName&quot; equal MatchValue &quot;Get-Hash_ID_CommandName&quot; for file &quot;Get-Hash_ID_CommandName.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0248" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_CommandName.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_ID_CommandName.ps1&quot; does not contain any functions" time="0.0013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0316" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_CommandName.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_ID_CommandName.ps1&quot; has exactly 1 function" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0302" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_Sudo&quot; equal Function &quot;Get-Hash_ID_Sudo&quot; for file &quot;Get-Hash_ID_Sudo.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_Sudo&quot; equal Function &quot;Get-Hash_ID_Sudo&quot; for file &quot;Get-Hash_ID_Sudo.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_Sudo&quot; equal MatchValue &quot;Get-Hash_ID_Sudo&quot; for file &quot;Get-Hash_ID_Sudo.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_Sudo&quot; equal MatchValue &quot;Get-Hash_ID_Sudo&quot; for file &quot;Get-Hash_ID_Sudo.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0296" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_Sudo.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_ID_Sudo.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0327" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_Sudo.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_ID_Sudo.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0311" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_SystemGroupName&quot; equal Function &quot;Get-Hash_ID_SystemGroupName&quot; for file &quot;Get-Hash_ID_SystemGroupName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_SystemGroupName&quot; equal Function &quot;Get-Hash_ID_SystemGroupName&quot; for file &quot;Get-Hash_ID_SystemGroupName.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_SystemGroupName&quot; equal MatchValue &quot;Get-Hash_ID_SystemGroupName&quot; for file &quot;Get-Hash_ID_SystemGroupName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_SystemGroupName&quot; equal MatchValue &quot;Get-Hash_ID_SystemGroupName&quot; for file &quot;Get-Hash_ID_SystemGroupName.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0309" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_SystemGroupName.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_ID_SystemGroupName.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0293" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_SystemGroupName.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_ID_SystemGroupName.ps1&quot; has exactly 1 function" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0363" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_Username&quot; equal Function &quot;Get-Hash_ID_Username&quot; for file &quot;Get-Hash_ID_Username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_Username&quot; equal Function &quot;Get-Hash_ID_Username&quot; for file &quot;Get-Hash_ID_Username.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_Username&quot; equal MatchValue &quot;Get-Hash_ID_Username&quot; for file &quot;Get-Hash_ID_Username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_Username&quot; equal MatchValue &quot;Get-Hash_ID_Username&quot; for file &quot;Get-Hash_ID_Username.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_Username.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_ID_Username.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0333" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_Username.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_ID_Username.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0427" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemGroupName_ID&quot; equal Function &quot;Get-Hash_SystemGroupName_ID&quot; for file &quot;Get-Hash_SystemGroupName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemGroupName_ID&quot; equal Function &quot;Get-Hash_SystemGroupName_ID&quot; for file &quot;Get-Hash_SystemGroupName_ID.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemGroupName_ID&quot; equal MatchValue &quot;Get-Hash_SystemGroupName_ID&quot; for file &quot;Get-Hash_SystemGroupName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemGroupName_ID&quot; equal MatchValue &quot;Get-Hash_SystemGroupName_ID&quot; for file &quot;Get-Hash_SystemGroupName_ID.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0263" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemGroupName_ID.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_SystemGroupName_ID.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemGroupName_ID.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_SystemGroupName_ID.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0358" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_DisplayName&quot; equal Function &quot;Get-Hash_SystemID_DisplayName&quot; for file &quot;Get-Hash_SystemID_DisplayName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_DisplayName&quot; equal Function &quot;Get-Hash_SystemID_DisplayName&quot; for file &quot;Get-Hash_SystemID_DisplayName.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_DisplayName&quot; equal MatchValue &quot;Get-Hash_SystemID_DisplayName&quot; for file &quot;Get-Hash_SystemID_DisplayName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_DisplayName&quot; equal MatchValue &quot;Get-Hash_SystemID_DisplayName&quot; for file &quot;Get-Hash_SystemID_DisplayName.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0279" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_DisplayName.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_SystemID_DisplayName.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0254" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_DisplayName.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_SystemID_DisplayName.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0362" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_HostName&quot; equal Function &quot;Get-Hash_SystemID_HostName&quot; for file &quot;Get-Hash_SystemID_HostName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_HostName&quot; equal Function &quot;Get-Hash_SystemID_HostName&quot; for file &quot;Get-Hash_SystemID_HostName.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_HostName&quot; equal MatchValue &quot;Get-Hash_SystemID_HostName&quot; for file &quot;Get-Hash_SystemID_HostName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_HostName&quot; equal MatchValue &quot;Get-Hash_SystemID_HostName&quot; for file &quot;Get-Hash_SystemID_HostName.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0247" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_HostName.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_SystemID_HostName.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0273" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_HostName.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_SystemID_HostName.ps1&quot; has exactly 1 function" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_OS&quot; equal Function &quot;Get-Hash_SystemID_OS&quot; for file &quot;Get-Hash_SystemID_OS.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_OS&quot; equal Function &quot;Get-Hash_SystemID_OS&quot; for file &quot;Get-Hash_SystemID_OS.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_OS&quot; equal MatchValue &quot;Get-Hash_SystemID_OS&quot; for file &quot;Get-Hash_SystemID_OS.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_OS&quot; equal MatchValue &quot;Get-Hash_SystemID_OS&quot; for file &quot;Get-Hash_SystemID_OS.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0288" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_OS.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_SystemID_OS.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0286" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_OS.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_SystemID_OS.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0301" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_UserGroupName_ID&quot; equal Function &quot;Get-Hash_UserGroupName_ID&quot; for file &quot;Get-Hash_UserGroupName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_UserGroupName_ID&quot; equal Function &quot;Get-Hash_UserGroupName_ID&quot; for file &quot;Get-Hash_UserGroupName_ID.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_UserGroupName_ID&quot; equal MatchValue &quot;Get-Hash_UserGroupName_ID&quot; for file &quot;Get-Hash_UserGroupName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_UserGroupName_ID&quot; equal MatchValue &quot;Get-Hash_UserGroupName_ID&quot; for file &quot;Get-Hash_UserGroupName_ID.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0297" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_UserGroupName_ID.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_UserGroupName_ID.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0273" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_UserGroupName_ID.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_UserGroupName_ID.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0345" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_UserName_ID&quot; equal Function &quot;Get-Hash_UserName_ID&quot; for file &quot;Get-Hash_UserName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_UserName_ID&quot; equal Function &quot;Get-Hash_UserName_ID&quot; for file &quot;Get-Hash_UserName_ID.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_UserName_ID&quot; equal MatchValue &quot;Get-Hash_UserName_ID&quot; for file &quot;Get-Hash_UserName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_UserName_ID&quot; equal MatchValue &quot;Get-Hash_UserName_ID&quot; for file &quot;Get-Hash_UserName_ID.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_UserName_ID.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_UserName_ID.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0299" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_UserName_ID.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_UserName_ID.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0311" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCHash&quot; equal Function &quot;Get-JCHash&quot; for file &quot;Get-JCHash.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCHash&quot; equal Function &quot;Get-JCHash&quot; for file &quot;Get-JCHash.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCHash&quot; equal MatchValue &quot;Get-JCHash&quot; for file &quot;Get-JCHash.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCHash&quot; equal MatchValue &quot;Get-JCHash&quot; for file &quot;Get-JCHash.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0253" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCHash.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCHash.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0307" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCHash.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCHash.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0309" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-FunctionReport&quot; equal Function &quot;Get-FunctionReport&quot; for file &quot;Get-FunctionReport.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-FunctionReport&quot; equal Function &quot;Get-FunctionReport&quot; for file &quot;Get-FunctionReport.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-FunctionReport&quot; equal MatchValue &quot;Get-FunctionReport&quot; for file &quot;Get-FunctionReport.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-FunctionReport&quot; equal MatchValue &quot;Get-FunctionReport&quot; for file &quot;Get-FunctionReport.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0266" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-FunctionReport.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-FunctionReport.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0327" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-FunctionReport.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-FunctionReport.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCColorConfig&quot; equal Function &quot;Get-JCColorConfig&quot; for file &quot;Get-JCColorConfig.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCColorConfig&quot; equal Function &quot;Get-JCColorConfig&quot; for file &quot;Get-JCColorConfig.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCColorConfig&quot; equal MatchValue &quot;Get-JCColorConfig&quot; for file &quot;Get-JCColorConfig.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCColorConfig&quot; equal MatchValue &quot;Get-JCColorConfig&quot; for file &quot;Get-JCColorConfig.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0259" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCColorConfig.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCColorConfig.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0282" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCColorConfig.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCColorConfig.ps1&quot; has exactly 1 function" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0317" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCObject&quot; equal Function &quot;Get-JCObject&quot; for file &quot;Get-JCObject.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCObject&quot; equal Function &quot;Get-JCObject&quot; for file &quot;Get-JCObject.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCObject&quot; equal MatchValue &quot;Get-JCObject&quot; for file &quot;Get-JCObject.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCObject&quot; equal MatchValue &quot;Get-JCObject&quot; for file &quot;Get-JCObject.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCObject.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCObject.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.033" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCObject.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCObject.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0342" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCType&quot; equal Function &quot;Get-JCType&quot; for file &quot;Get-JCType.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCType&quot; equal Function &quot;Get-JCType&quot; for file &quot;Get-JCType.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCType&quot; equal MatchValue &quot;Get-JCType&quot; for file &quot;Get-JCType.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCType&quot; equal MatchValue &quot;Get-JCType&quot; for file &quot;Get-JCType.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCType.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCType.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.028" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCType.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCType.ps1&quot; has exactly 1 function" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0349" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCUserAgent&quot; equal Function &quot;Get-JCUserAgent&quot; for file &quot;Get-JCUserAgent.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUserAgent&quot; equal Function &quot;Get-JCUserAgent&quot; for file &quot;Get-JCUserAgent.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCUserAgent&quot; equal MatchValue &quot;Get-JCUserAgent&quot; for file &quot;Get-JCUserAgent.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUserAgent&quot; equal MatchValue &quot;Get-JCUserAgent&quot; for file &quot;Get-JCUserAgent.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0257" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCUserAgent.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCUserAgent.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0274" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCUserAgent.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCUserAgent.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.034" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Hide-ObjectProperty&quot; equal Function &quot;Hide-ObjectProperty&quot; for file &quot;Hide-ObjectProperty.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Hide-ObjectProperty&quot; equal Function &quot;Hide-ObjectProperty&quot; for file &quot;Hide-ObjectProperty.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Hide-ObjectProperty&quot; equal MatchValue &quot;Hide-ObjectProperty&quot; for file &quot;Hide-ObjectProperty.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Hide-ObjectProperty&quot; equal MatchValue &quot;Hide-ObjectProperty&quot; for file &quot;Hide-ObjectProperty.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0259" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Hide-ObjectProperty.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Hide-ObjectProperty.ps1&quot; does not contain any functions" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0273" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Hide-ObjectProperty.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Hide-ObjectProperty.ps1&quot; has exactly 1 function" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0305" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Invoke-JCApi&quot; equal Function &quot;Invoke-JCApi&quot; for file &quot;Invoke-JCApi.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCApi&quot; equal Function &quot;Invoke-JCApi&quot; for file &quot;Invoke-JCApi.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Invoke-JCApi&quot; equal MatchValue &quot;Invoke-JCApi&quot; for file &quot;Invoke-JCApi.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCApi&quot; equal MatchValue &quot;Invoke-JCApi&quot; for file &quot;Invoke-JCApi.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0301" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCApi.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Invoke-JCApi.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0281" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCApi.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Invoke-JCApi.ps1&quot; has exactly 1 function" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0315" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-DynamicParameter&quot; equal Function &quot;New-DynamicParameter&quot; for file &quot;New-DynamicParameter.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-DynamicParameter&quot; equal Function &quot;New-DynamicParameter&quot; for file &quot;New-DynamicParameter.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-DynamicParameter&quot; equal MatchValue &quot;New-DynamicParameter&quot; for file &quot;New-DynamicParameter.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-DynamicParameter&quot; equal MatchValue &quot;New-DynamicParameter&quot; for file &quot;New-DynamicParameter.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-DynamicParameter.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-DynamicParameter.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0287" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-DynamicParameter.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-DynamicParameter.ps1&quot; has exactly 1 function" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0318" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCCommandFromURL&quot; equal Function &quot;New-JCCommandFromURL&quot; for file &quot;New-JCCommandFromURL.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCCommandFromURL&quot; equal Function &quot;New-JCCommandFromURL&quot; for file &quot;New-JCCommandFromURL.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCCommandFromURL&quot; equal MatchValue &quot;New-JCCommandFromURL&quot; for file &quot;New-JCCommandFromURL.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCCommandFromURL&quot; equal MatchValue &quot;New-JCCommandFromURL&quot; for file &quot;New-JCCommandFromURL.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0309" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCCommandFromURL.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCCommandFromURL.ps1&quot; does not contain any functions" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0284" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCCommandFromURL.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCCommandFromURL.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0312" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Out-DebugParameter&quot; equal Function &quot;Out-DebugParameter&quot; for file &quot;Out-DebugParameter.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Out-DebugParameter&quot; equal Function &quot;Out-DebugParameter&quot; for file &quot;Out-DebugParameter.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Out-DebugParameter&quot; equal MatchValue &quot;Out-DebugParameter&quot; for file &quot;Out-DebugParameter.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Out-DebugParameter&quot; equal MatchValue &quot;Out-DebugParameter&quot; for file &quot;Out-DebugParameter.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0273" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Out-DebugParameter.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Out-DebugParameter.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0349" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Out-DebugParameter.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Out-DebugParameter.ps1&quot; has exactly 1 function" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0313" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Write-Rainbow&quot; equal Function &quot;Write-Rainbow&quot; for file &quot;Write-Rainbow.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Write-Rainbow&quot; equal Function &quot;Write-Rainbow&quot; for file &quot;Write-Rainbow.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Write-Rainbow&quot; equal MatchValue &quot;Write-Rainbow&quot; for file &quot;Write-Rainbow.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Write-Rainbow&quot; equal MatchValue &quot;Write-Rainbow&quot; for file &quot;Write-Rainbow.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0267" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Write-Rainbow.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Write-Rainbow.ps1&quot; does not contain any functions" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0339" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Write-Rainbow.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Write-Rainbow.ps1&quot; has exactly 1 function" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0326" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-DynamicParamRadiusServer&quot; equal Function &quot;Get-DynamicParamRadiusServer&quot; for file &quot;Get-DynamicParamRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-DynamicParamRadiusServer&quot; equal Function &quot;Get-DynamicParamRadiusServer&quot; for file &quot;Get-DynamicParamRadiusServer.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-DynamicParamRadiusServer&quot; equal MatchValue &quot;Get-DynamicParamRadiusServer&quot; for file &quot;Get-DynamicParamRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-DynamicParamRadiusServer&quot; equal MatchValue &quot;Get-DynamicParamRadiusServer&quot; for file &quot;Get-DynamicParamRadiusServer.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0262" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-DynamicParamRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-DynamicParamRadiusServer.ps1&quot; does not contain any functions" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0324" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-DynamicParamRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-DynamicParamRadiusServer.ps1&quot; has exactly 1 function" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.0318" asserts="0" description="Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Invoke-JCRadiusServer&quot; equal Function &quot;Invoke-JCRadiusServer&quot; for file &quot;Invoke-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCRadiusServer&quot; equal Function &quot;Invoke-JCRadiusServer&quot; for file &quot;Invoke-JCRadiusServer.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Invoke-JCRadiusServer&quot; equal MatchValue &quot;Invoke-JCRadiusServer&quot; for file &quot;Invoke-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCRadiusServer&quot; equal MatchValue &quot;Invoke-JCRadiusServer&quot; for file &quot;Invoke-JCRadiusServer.ps1&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for missing information" executed="True" result="Success" success="True" time="0.0488" asserts="0" description="Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Invoke-JCRadiusServer.ps1&quot; does not contain any functions" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for multiple functions per file" executed="True" result="Success" success="True" time="0.0324" asserts="0" description="Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Invoke-JCRadiusServer.ps1&quot; has exactly 1 function" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Test for duplicate functions" executed="True" result="Success" success="True" time="1.466" asserts="0" description="Test for duplicate functions">
                <results>
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCAssociation&quot;" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCCommandTarget&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCSystemGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCSystemUser&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCUserGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Connect-JCOnline&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Copy-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Copy-JCAssociation&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Format-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Format-JCAssociation&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-DynamicParamAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-DynamicParamAssociation&quot;" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-FunctionReport&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-FunctionReport&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_Email_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_Email_ID&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_Email_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_Email_Username&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_ID_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_ID_Username&quot;" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_UserName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_UserName_ID&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCAssociation&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCBackup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCBackup&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCColorConfig&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCColorConfig&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCCommandResult&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCCommandTarget&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCCommonParameters&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCCommonParameters&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCEvent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCEvent&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCGroup&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCHash&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCHash&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCObject&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCObject&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCOrganization&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCPolicy&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCPolicy&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCPolicyResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCPolicyResult&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCSystem&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCSystemGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCSystemInsights&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCSystemInsights&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCSystemUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCType&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCType&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCUserAgent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCUserAgent&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCUserGroupMember&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-ModuleBanner&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-ModuleBanner&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Get-ModuleChangeLog&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-ModuleChangeLog&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Hide-ObjectProperty&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Hide-ObjectProperty&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Import-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Import-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Import-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Import-JCUsersFromCSV&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Invoke-JCApi&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Invoke-JCApi&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Invoke-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Invoke-JCAssociation&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Invoke-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Invoke-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Invoke-JCDeployment&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Invoke-JCDeployment&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Invoke-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Invoke-JCRadiusServer&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;New-DynamicParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-DynamicParameter&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;New-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;New-JCCommandFromURL&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCCommandFromURL&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;New-JCDeploymentTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCDeploymentTemplate&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;New-JCImportTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCImportTemplate&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;New-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCRadiusServer&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;New-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCSystemGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;New-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCUser&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;New-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCUserGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Out-DebugParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Out-DebugParameter&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCAssociation&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCCommand&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCCommandResult&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCCommandTarget&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCRadiusServer&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCSystem&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCSystemGroup&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCSystemUser&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCUserGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCUserGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Send-JCPasswordReset&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Send-JCPasswordReset&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCCommand&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCOrganization&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCRadiusServer&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCSystem&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCSystemUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCUser&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Update-JCModule&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Update-JCModule&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Update-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Update-JCUsersFromCSV&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple files with the same name exist for &quot;Write-Rainbow&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Write-Rainbow&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCAssociation&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCCommandTarget&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCSystemGroupMember&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCSystemUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCUserGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Connect-JCOnline&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Copy-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Copy-JCAssociation&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Format-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Format-JCAssociation&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-DynamicParamAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-DynamicParamAssociation&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-FunctionReport&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-FunctionReport&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_Email_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_Email_ID&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_Email_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_Email_Username&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_ID_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_ID_Username&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_UserName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_UserName_ID&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCAssociation&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCBackup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCBackup&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCColorConfig&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCColorConfig&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCCommand&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCCommandResult&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCCommandTarget&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCCommonParameters&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCCommonParameters&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCEvent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCEvent&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCGroup&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCHash&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCHash&quot;" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCObject&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCObject&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCOrganization&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCPolicy&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCPolicy&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCPolicyResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCPolicyResult&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCSystem&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCSystemGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCSystemInsights&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCSystemInsights&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCSystemUser&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCType&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCType&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCUserAgent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCUserAgent&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCUserGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-ModuleBanner&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-ModuleBanner&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Get-ModuleChangeLog&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-ModuleChangeLog&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Hide-ObjectProperty&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Hide-ObjectProperty&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Import-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Import-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Import-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Import-JCUsersFromCSV&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Invoke-JCApi&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Invoke-JCApi&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Invoke-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Invoke-JCAssociation&quot;" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Invoke-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Invoke-JCCommand&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Invoke-JCDeployment&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Invoke-JCDeployment&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Invoke-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Invoke-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;New-DynamicParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-DynamicParameter&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCCommandFromURL&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCCommandFromURL&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCDeploymentTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCDeploymentTemplate&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCImportTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCImportTemplate&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCSystemGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCUserGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Out-DebugParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Out-DebugParameter&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCAssociation&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCCommand&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCCommandResult&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCCommandTarget&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCSystem&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCSystemGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCSystemUser&quot;" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCUserGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCUserGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Send-JCPasswordReset&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Send-JCPasswordReset&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCOrganization&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCSystem&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCSystemUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCUser&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Update-JCModule&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Update-JCModule&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Update-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Update-JCUsersFromCSV&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple functions with the same name exist for &quot;Write-Rainbow&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Write-Rainbow&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCAssociation&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCCommandTarget&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCSystemGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCSystemUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCUserGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Connect-JCOnline&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Copy-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Copy-JCAssociation&quot;" time="0.0051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Format-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Format-JCAssociation&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-DynamicParamAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-DynamicParamAssociation&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-FunctionReport&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-FunctionReport&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_Email_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_Email_ID&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_Email_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_Email_Username&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" time="0.0014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" time="0.0013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_Username&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_UserName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_UserName_ID&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCAssociation&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCBackup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCBackup&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCColorConfig&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCColorConfig&quot;" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommandResult&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommandTarget&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommonParameters&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommonParameters&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCEvent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCEvent&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCHash&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCHash&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCObject&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCObject&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCOrganization&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicy&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicy&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyResult&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystem&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemGroupMember&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemInsights&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemInsights&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCType&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCType&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCUser&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCUserAgent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCUserAgent&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCUserGroupMember&quot;" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-ModuleBanner&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-ModuleBanner&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-ModuleChangeLog&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-ModuleChangeLog&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Hide-ObjectProperty&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Hide-ObjectProperty&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Import-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Import-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Import-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Import-JCUsersFromCSV&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCApi&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCApi&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCAssociation&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCDeployment&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCDeployment&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-DynamicParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-DynamicParameter&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCCommandFromURL&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCCommandFromURL&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCDeploymentTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCDeploymentTemplate&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCImportTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCImportTemplate&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCSystemGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCUserGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Out-DebugParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Out-DebugParameter&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCAssociation&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommand&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommandResult&quot;" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommandTarget&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystem&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemGroup&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUserGroup&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUserGroupMember&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Send-JCPasswordReset&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Send-JCPasswordReset&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCCommand&quot;" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCOrganization&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCRadiusServer&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCSystem&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCSystemUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCUser&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Update-JCModule&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Update-JCModule&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Update-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Update-JCUsersFromCSV&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Write-Rainbow&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Write-Rainbow&quot;" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\HelpFiles.Tests.ps1" executed="True" result="Success" success="True" time="0.1047" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\HelpFiles.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Help File Tests" executed="True" result="Success" success="True" time="0.0977" asserts="0" description="Help File Tests">
            <results>
              <test-suite type="TestFixture" name="Validating help file fields have been populated" executed="True" result="Success" success="True" time="0.0357" asserts="0" description="Validating help file fields have been populated">
                <results />
              </test-suite>
              <test-suite type="TestFixture" name="Validating that the ModuleBanner and ModuleChangelog fields have been populated" executed="True" result="Success" success="True" time="0.0322" asserts="0" description="Validating that the ModuleBanner and ModuleChangelog fields have been populated">
                <results />
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\moduleValidation.tests.ps1" executed="True" result="Success" success="True" time="0.169" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\moduleValidation.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module Manifest Tests" executed="True" result="Success" success="True" time="0.1624" asserts="0" description="Module Manifest Tests">
            <results>
              <test-case description="Passes Test-ModuleManifest" name="Module Manifest Tests.Passes Test-ModuleManifest" time="0.1385" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1" executed="True" result="Success" success="True" time="0.7743" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Pester Files Tests" executed="True" result="Success" success="True" time="0.7613" asserts="0" description="Pester Files Tests">
            <results>
              <test-suite type="TestFixture" name="Pester Test Files Validation" executed="True" result="Success" success="True" time="0.7363" asserts="0" description="Pester Test Files Validation">
                <results>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Add-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Add-JCAssociation.Tests.ps1&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Add-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Add-JCAssociation.Tests.ps1&quot;" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Copy-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Copy-JCAssociation.Tests.ps1&quot;" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Copy-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Copy-JCAssociation.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Get-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Get-JCAssociation.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Get-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Get-JCAssociation.Tests.ps1&quot;" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Remove-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Remove-JCAssociation.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Remove-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Remove-JCAssociation.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Connect-JCOnline.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Connect-JCOnline.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Connect-JCOnline.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Connect-JCOnline.Tests.ps1&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Get-JCOrganization.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Get-JCOrganization.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Get-JCOrganization.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Get-JCOrganization.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Set-JCOrganization.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Set-JCOrganization.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Set-JCOrganization.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Set-JCOrganization.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Update-JCModule.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Update-JCModule.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Update-JCModule.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Update-JCModule.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Get-JCCommandResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Get-JCCommandResult.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Get-JCCommandResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Get-JCCommandResult.Tests.ps1&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Remove-JCCommandResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Remove-JCCommandResult.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Remove-JCCommandResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Remove-JCCommandResult.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.Tests.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.Tests.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Get-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Get-JCCommand.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Get-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Get-JCCommand.Tests.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Import-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Import-JCCommand.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Import-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Import-JCCommand.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCCommand.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCCommand.Tests.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCDeployment.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCDeployment.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCDeployment.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCDeployment.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCCommand.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCCommand.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCDeploymentTemplate.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCDeploymentTemplate.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCDeploymentTemplate.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCDeploymentTemplate.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Remove-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Remove-JCCommand.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Remove-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Remove-JCCommand.Tests.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Set-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Set-JCCommand.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Set-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Set-JCCommand.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\New-JCSystemGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\New-JCSystemGroup.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\New-JCSystemGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\New-JCSystemGroup.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.Tests.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.Tests.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.Tests.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\New-JCUserGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\New-JCUserGroup.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\New-JCUserGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\New-JCUserGroup.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroup.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroup.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.Tests.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\Get-JCGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\Get-JCGroup.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\Get-JCGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\Get-JCGroup.Tests.ps1&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\Get-JCPolicy.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\Get-JCPolicy.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\Get-JCPolicy.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\Get-JCPolicy.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1&quot;" time="0.0022" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystem.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystem.Tests.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1&quot;" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Remove-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Remove-JCSystem.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Remove-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Remove-JCSystem.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Set-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Set-JCSystem.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Set-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Set-JCSystem.Tests.ps1&quot;" time="0.006" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Add-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Add-JCSystemUser.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Add-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Add-JCSystemUser.Tests.ps1&quot;" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Get-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Get-JCSystemUser.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Get-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Get-JCSystemUser.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Remove-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Remove-JCSystemUser.Tests.ps1&quot;" time="0.0017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Remove-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Remove-JCSystemUser.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Set-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Set-JCSystemUser.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Set-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Set-JCSystemUser.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Get-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Get-JCUser.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Get-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Get-JCUser.Tests.ps1&quot;" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\New-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\New-JCUser.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\New-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\New-JCUser.Tests.ps1&quot;" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Remove-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Remove-JCUser.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Remove-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Remove-JCUser.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Set-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Set-JCUser.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Set-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Set-JCUser.Tests.ps1&quot;" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.Tests.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.Tests.ps1&quot;" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.Tests.ps1&quot;" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Get-JCBackup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Get-JCBackup.Tests.ps1&quot;" time="0.0019" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Get-JCBackup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Get-JCBackup.Tests.ps1&quot;" time="0.0021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Send-JCPasswordReset.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Send-JCPasswordReset.Tests.ps1&quot;" time="0.0018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Send-JCPasswordReset.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Send-JCPasswordReset.Tests.ps1&quot;" time="0.002" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Copy-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0031" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Copy-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Format-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0034" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Format-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Get-DynamicParamAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0036" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Get-DynamicParamAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Invoke-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0034" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Invoke-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\Invoke-JCAssociation.tests.ps1" executed="True" result="Success" success="True" time="0.0039" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\Invoke-JCAssociation.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\New-JCAssociation.tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\New-JCAssociation.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\Remove-JCAssociation.tests.ps1" executed="True" result="Success" success="True" time="0.0021" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\Remove-JCAssociation.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-GitHubModuleInfo.Tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-GitHubModuleInfo.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-ModuleBanner.Tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-ModuleBanner.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-ModuleChangeLog.Tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-ModuleChangeLog.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\DynamicParameters\Get-JCCommonParameters.Tests.ps1" executed="True" result="Success" success="True" time="0.011" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\DynamicParameters\Get-JCCommonParameters.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Name.tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Name.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Trigger.tests.ps1" executed="True" result="Success" success="True" time="0.003" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Trigger.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Type.tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Type.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_Email_ID.tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_Email_ID.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_Email_Username.tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_Email_Username.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_employeeIdentifier_ID.tests.ps1" executed="True" result="Success" success="True" time="0.0021" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_employeeIdentifier_ID.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_employeeIdentifier_username.Tests.ps1" executed="True" result="Success" success="True" time="0.0021" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_employeeIdentifier_username.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_CommandName.tests.ps1" executed="True" result="Success" success="True" time="0.0021" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_CommandName.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_Sudo.tests.ps1" executed="True" result="Success" success="True" time="0.0021" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_Sudo.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_SystemGroupName.tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_SystemGroupName.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_Username.tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_Username.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemGroupName_ID.tests.ps1" executed="True" result="Success" success="True" time="0.0021" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemGroupName_ID.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_DisplayName.tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_DisplayName.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_HostName.tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_HostName.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_OS.tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_OS.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_UserGroupName_ID.tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_UserGroupName_ID.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_UserName_ID.tests.ps1" executed="True" result="Success" success="True" time="0.0035" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_UserName_ID.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-JCHash.tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-JCHash.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-FunctionReport.Tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-FunctionReport.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCColorConfig.Tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCColorConfig.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCObject.tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCObject.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCObjectType.tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCObjectType.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCType.Tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCType.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCUserAgent.Tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCUserAgent.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Hide-ObjectProperty.Tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Hide-ObjectProperty.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-GetJCOrganization.tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-GetJCOrganization.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-JCApi.tests.ps1" executed="True" result="Success" success="True" time="0.0028" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-JCApi.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-SetJCOrganization.Tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-SetJCOrganization.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-SetJCOrganizations.tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-SetJCOrganizations.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\New-DynamicParameter.tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\New-DynamicParameter.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\New-JCCommandFromURL.tests.ps1" executed="True" result="Success" success="True" time="0.003" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\New-JCCommandFromURL.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Out-DebugParameter.Tests.ps1" executed="True" result="Success" success="True" time="0.0042" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Out-DebugParameter.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Test-MultiTenant.tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Test-MultiTenant.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Write-Rainbow.Tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Write-Rainbow.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\RadiusServer\Get-DynamicParamRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\RadiusServer\Get-DynamicParamRadiusServer.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\RadiusServer\Invoke-JCRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\RadiusServer\Invoke-JCRadiusServer.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_DefaultDebugMessageBegin.Tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_DefaultDebugMessageBegin.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_DefaultDynamicParamProcess.Tests.ps1" executed="True" result="Success" success="True" time="0.0031" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_DefaultDynamicParamProcess.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_Example.Tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_Example.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_TryCatchError.Tests.ps1" executed="True" result="Success" success="True" time="0.0028" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_TryCatchError.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Add-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0032" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Add-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Copy-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.004" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Copy-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Get-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0087" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Get-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Remove-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0135" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Remove-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Connect-JCOnline.tests.ps1" executed="True" result="Success" success="True" time="0.0051" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Connect-JCOnline.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Get-JCOrganization.tests.ps1" executed="True" result="Success" success="True" time="0.0041" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Get-JCOrganization.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Set-JCOrganization.tests.ps1" executed="True" result="Success" success="True" time="0.0047" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Set-JCOrganization.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Update-JCModule.Tests.ps1" executed="True" result="Success" success="True" time="0.0032" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Update-JCModule.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandResults\Get-JCCommandResult.tests.ps1" executed="True" result="Success" success="True" time="0.0079" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandResults\Get-JCCommandResult.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandResults\Remove-JCCommandResult.tests.ps1" executed="True" result="Success" success="True" time="0.0042" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandResults\Remove-JCCommandResult.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.tests.ps1" executed="True" result="Success" success="True" time="0.005" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.tests.ps1" executed="True" result="Success" success="True" time="0.0041" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.tests.ps1" executed="True" result="Success" success="True" time="0.0043" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Get-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.0046" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Get-JCCommand.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Import-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.0039" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Import-JCCommand.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Invoke-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.0053" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Invoke-JCCommand.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Invoke-JCDeployment.tests.ps1" executed="True" result="Success" success="True" time="0.0043" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Invoke-JCDeployment.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\New-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.0042" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\New-JCCommand.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\New-JCDeploymentTemplate.tests.ps1" executed="True" result="Success" success="True" time="0.0032" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\New-JCDeploymentTemplate.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Remove-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.0039" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Remove-JCCommand.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Set-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.0042" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Set-JCCommand.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1" executed="True" result="Success" success="True" time="0.005" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.0044" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.0045" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\New-JCSystemGroup.tests.ps1" executed="True" result="Success" success="True" time="0.0042" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\New-JCSystemGroup.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.tests.ps1" executed="True" result="Success" success="True" time="0.0042" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.0045" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.0044" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.0098" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\New-JCUserGroup.tests.ps1" executed="True" result="Success" success="True" time="0.0037" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\New-JCUserGroup.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Remove-JCUserGroup.tests.ps1" executed="True" result="Success" success="True" time="0.0039" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Remove-JCUserGroup.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.0046" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.tests.ps1" executed="True" result="Success" success="True" time="0.0048" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\Get-JCGroup.tests.ps1" executed="True" result="Success" success="True" time="0.0164" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\Get-JCGroup.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.tests.ps1" executed="True" result="Success" success="True" time="0.005" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.tests.ps1" executed="True" result="Success" success="True" time="0.0055" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.tests.ps1" executed="True" result="Success" success="True" time="0.0062" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\Get-JCPolicy.tests.ps1" executed="True" result="Success" success="True" time="0.0046" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\Get-JCPolicy.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.tests.ps1" executed="True" result="Success" success="True" time="0.0059" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.tests.ps1" executed="True" result="Success" success="True" time="0.0074" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="0.0052" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="0.0032" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.tests.ps1" executed="True" result="Success" success="True" time="0.0046" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.tests.ps1" executed="True" result="Success" success="True" time="0.005" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="0.0045" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Get-JCSystem.tests.ps1" executed="True" result="Success" success="True" time="0.0082" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Get-JCSystem.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1" executed="True" result="Success" success="True" time="0.0067" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Remove-JCSystem.tests.ps1" executed="True" result="Success" success="True" time="0.0031" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Remove-JCSystem.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Set-JCSystem.tests.ps1" executed="True" result="Success" success="True" time="0.005" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Set-JCSystem.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Add-JCSystemUser.tests.ps1" executed="True" result="Success" success="True" time="0.0056" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Add-JCSystemUser.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Get-JCSystemUser.tests.ps1" executed="True" result="Success" success="True" time="0.0036" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Get-JCSystemUser.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Remove-JCSystemUser.tests.ps1" executed="True" result="Success" success="True" time="0.0039" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Remove-JCSystemUser.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Set-JCSystemUser.tests.ps1" executed="True" result="Success" success="True" time="0.0046" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Set-JCSystemUser.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Get-JCUser.tests.ps1" executed="True" result="Success" success="True" time="0.0095" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Get-JCUser.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\New-JCUser.tests.ps1" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\New-JCUser.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Remove-JCUser.tests.ps1" executed="True" result="Success" success="True" time="0.0046" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Remove-JCUser.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Set-JCUser.tests.ps1" executed="True" result="Success" success="True" time="0.0255" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Set-JCUser.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.tests.ps1" executed="True" result="Success" success="True" time="0.009" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.tests.ps1" executed="True" result="Success" success="True" time="0.0092" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\Get-JCBackup.tests.ps1" executed="True" result="Success" success="True" time="0.0044" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\Get-JCBackup.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\Send-JCPasswordReset.tests.ps1" executed="True" result="Success" success="True" time="0.0046" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\Send-JCPasswordReset.tests.ps1">
        <results />
      </test-suite>
    </results>
  </test-suite>
</test-results>