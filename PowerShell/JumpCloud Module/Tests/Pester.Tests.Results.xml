<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="887" errors="0" failures="628" not-run="1938" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2020-06-04" time="21:37:46">
  <environment machine-name="fv-az393" clr-version="Unknown" os-version="10.0.14393" nunit-version="2.5.8.0" user-domain="fv-az393" cwd="D:\a\1\s" user="VssAdministrator" platform="Microsoft Windows Server 2016 Datacenter|C:\windows|\Device\Harddisk0\Partition2" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="399.7297" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1" executed="True" result="Failure" success="False" time="19.5109" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Function Format Tests" executed="True" result="Failure" success="False" time="17.0428" asserts="0" description="Function Format Tests">
            <results>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.3234" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCAssociation&quot; equal Function &quot;Add-JCAssociation&quot; for file &quot;Add-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCAssociation&quot; equal Function &quot;Add-JCAssociation&quot; for file &quot;Add-JCAssociation.ps1&quot;" time="0.1171" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCAssociation&quot; equal MatchValue &quot;Add-JCAssociation&quot; for file &quot;Add-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCAssociation&quot; equal MatchValue &quot;Add-JCAssociation&quot; for file &quot;Add-JCAssociation.ps1&quot;" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="0.426" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCAssociation.ps1&quot; does not contain any functions" time="0.0718" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="0.4902" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCAssociation.ps1&quot; has exactly 1 function" time="0.0224" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.5238" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.5646" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Copy-JCAssociation&quot; equal Function &quot;Copy-JCAssociation&quot; for file &quot;Copy-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Copy-JCAssociation&quot; equal Function &quot;Copy-JCAssociation&quot; for file &quot;Copy-JCAssociation.ps1&quot;" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Copy-JCAssociation&quot; equal MatchValue &quot;Copy-JCAssociation&quot; for file &quot;Copy-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Copy-JCAssociation&quot; equal MatchValue &quot;Copy-JCAssociation&quot; for file &quot;Copy-JCAssociation.ps1&quot;" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="0.6065" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Copy-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Copy-JCAssociation.ps1&quot; does not contain any functions" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="0.6463" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Copy-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Copy-JCAssociation.ps1&quot; has exactly 1 function" time="0.0098" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.7061" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Copy-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Copy-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0263" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.7526" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCAssociation&quot; equal Function &quot;Get-JCAssociation&quot; for file &quot;Get-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCAssociation&quot; equal Function &quot;Get-JCAssociation&quot; for file &quot;Get-JCAssociation.ps1&quot;" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCAssociation&quot; equal MatchValue &quot;Get-JCAssociation&quot; for file &quot;Get-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCAssociation&quot; equal MatchValue &quot;Get-JCAssociation&quot; for file &quot;Get-JCAssociation.ps1&quot;" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="0.8004" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCAssociation.ps1&quot; does not contain any functions" time="0.0091" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="0.8504" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCAssociation.ps1&quot; has exactly 1 function" time="0.012" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="0.8837" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="0.9398" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCAssociation&quot; equal Function &quot;Remove-JCAssociation&quot; for file &quot;Remove-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCAssociation&quot; equal Function &quot;Remove-JCAssociation&quot; for file &quot;Remove-JCAssociation.ps1&quot;" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCAssociation&quot; equal MatchValue &quot;Remove-JCAssociation&quot; for file &quot;Remove-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCAssociation&quot; equal MatchValue &quot;Remove-JCAssociation&quot; for file &quot;Remove-JCAssociation.ps1&quot;" time="0.0123" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="0.9856" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCAssociation.ps1&quot; does not contain any functions" time="0.0106" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="1.0377" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCAssociation.ps1&quot; has exactly 1 function" time="0.0123" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="1.0759" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCAssociation.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="1.1163" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Connect-JCOnline&quot; equal Function &quot;Connect-JCOnline&quot; for file &quot;Connect-JCOnline.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Connect-JCOnline&quot; equal Function &quot;Connect-JCOnline&quot; for file &quot;Connect-JCOnline.ps1&quot;" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Connect-JCOnline&quot; equal MatchValue &quot;Connect-JCOnline&quot; for file &quot;Connect-JCOnline.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Connect-JCOnline&quot; equal MatchValue &quot;Connect-JCOnline&quot; for file &quot;Connect-JCOnline.ps1&quot;" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="1.1638" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Connect-JCOnline.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Connect-JCOnline.ps1&quot; does not contain any functions" time="0.0092" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="1.2042" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Connect-JCOnline.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Connect-JCOnline.ps1&quot; has exactly 1 function" time="0.0096" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="1.2457" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Connect-JCOnline.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Connect-JCOnline.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="1.2904" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCOrganization&quot; equal Function &quot;Get-JCOrganization&quot; for file &quot;Get-JCOrganization.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCOrganization&quot; equal Function &quot;Get-JCOrganization&quot; for file &quot;Get-JCOrganization.ps1&quot;" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCOrganization&quot; equal MatchValue &quot;Get-JCOrganization&quot; for file &quot;Get-JCOrganization.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCOrganization&quot; equal MatchValue &quot;Get-JCOrganization&quot; for file &quot;Get-JCOrganization.ps1&quot;" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="1.3347" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCOrganization.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCOrganization.ps1&quot; does not contain any functions" time="0.0098" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="1.3838" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCOrganization.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCOrganization.ps1&quot; has exactly 1 function" time="0.0154" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="1.423" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCOrganization.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCOrganization.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="1.4685" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCOrganization&quot; equal Function &quot;Set-JCOrganization&quot; for file &quot;Set-JCOrganization.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCOrganization&quot; equal Function &quot;Set-JCOrganization&quot; for file &quot;Set-JCOrganization.ps1&quot;" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCOrganization&quot; equal MatchValue &quot;Set-JCOrganization&quot; for file &quot;Set-JCOrganization.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCOrganization&quot; equal MatchValue &quot;Set-JCOrganization&quot; for file &quot;Set-JCOrganization.ps1&quot;" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="1.5105" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCOrganization.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCOrganization.ps1&quot; does not contain any functions" time="0.0088" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="1.5534" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCOrganization.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCOrganization.ps1&quot; has exactly 1 function" time="0.0107" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="1.5895" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCOrganization.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCOrganization.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="1.6266" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Update-JCModule&quot; equal Function &quot;Update-JCModule&quot; for file &quot;Update-JCModule.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Update-JCModule&quot; equal Function &quot;Update-JCModule&quot; for file &quot;Update-JCModule.ps1&quot;" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Update-JCModule&quot; equal MatchValue &quot;Update-JCModule&quot; for file &quot;Update-JCModule.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Update-JCModule&quot; equal MatchValue &quot;Update-JCModule&quot; for file &quot;Update-JCModule.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="1.6668" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Update-JCModule.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Update-JCModule.ps1&quot; does not contain any functions" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="1.7047" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Update-JCModule.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Update-JCModule.ps1&quot; has exactly 1 function" time="0.0095" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="1.7408" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCCommand&quot; equal Function &quot;Get-JCCommand&quot; for file &quot;Get-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommand&quot; equal Function &quot;Get-JCCommand&quot; for file &quot;Get-JCCommand.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCCommand&quot; equal MatchValue &quot;Get-JCCommand&quot; for file &quot;Get-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommand&quot; equal MatchValue &quot;Get-JCCommand&quot; for file &quot;Get-JCCommand.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="1.7818" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCCommand.ps1&quot; does not contain any functions" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="1.8212" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCCommand.ps1&quot; has exactly 1 function" time="0.0093" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="1.8631" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="1.9025" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Import-JCCommand&quot; equal Function &quot;Import-JCCommand&quot; for file &quot;Import-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Import-JCCommand&quot; equal Function &quot;Import-JCCommand&quot; for file &quot;Import-JCCommand.ps1&quot;" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Import-JCCommand&quot; equal MatchValue &quot;Import-JCCommand&quot; for file &quot;Import-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Import-JCCommand&quot; equal MatchValue &quot;Import-JCCommand&quot; for file &quot;Import-JCCommand.ps1&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="1.9439" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Import-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Import-JCCommand.ps1&quot; does not contain any functions" time="0.009" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="1.9874" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Import-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Import-JCCommand.ps1&quot; has exactly 1 function" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="2.0231" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Import-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Import-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="2.0705" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Invoke-JCCommand&quot; equal Function &quot;Invoke-JCCommand&quot; for file &quot;Invoke-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCCommand&quot; equal Function &quot;Invoke-JCCommand&quot; for file &quot;Invoke-JCCommand.ps1&quot;" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Invoke-JCCommand&quot; equal MatchValue &quot;Invoke-JCCommand&quot; for file &quot;Invoke-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCCommand&quot; equal MatchValue &quot;Invoke-JCCommand&quot; for file &quot;Invoke-JCCommand.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="2.1254" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Invoke-JCCommand.ps1&quot; does not contain any functions" time="0.0236" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="2.1656" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Invoke-JCCommand.ps1&quot; has exactly 1 function" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="2.2393" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Invoke-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="2.2801" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Invoke-JCDeployment&quot; equal Function &quot;Invoke-JCDeployment&quot; for file &quot;Invoke-JCDeployment.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCDeployment&quot; equal Function &quot;Invoke-JCDeployment&quot; for file &quot;Invoke-JCDeployment.ps1&quot;" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Invoke-JCDeployment&quot; equal MatchValue &quot;Invoke-JCDeployment&quot; for file &quot;Invoke-JCDeployment.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCDeployment&quot; equal MatchValue &quot;Invoke-JCDeployment&quot; for file &quot;Invoke-JCDeployment.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="2.3256" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCDeployment.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Invoke-JCDeployment.ps1&quot; does not contain any functions" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="2.3799" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCDeployment.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Invoke-JCDeployment.ps1&quot; has exactly 1 function" time="0.0096" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="2.4197" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCDeployment.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Invoke-JCDeployment.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="2.4633" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCCommand&quot; equal Function &quot;New-JCCommand&quot; for file &quot;New-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCCommand&quot; equal Function &quot;New-JCCommand&quot; for file &quot;New-JCCommand.ps1&quot;" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCCommand&quot; equal MatchValue &quot;New-JCCommand&quot; for file &quot;New-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCCommand&quot; equal MatchValue &quot;New-JCCommand&quot; for file &quot;New-JCCommand.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="2.5044" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCCommand.ps1&quot; does not contain any functions" time="0.0098" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="2.5483" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCCommand.ps1&quot; has exactly 1 function" time="0.0089" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="2.5833" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="2.6185" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCDeploymentTemplate&quot; equal Function &quot;New-JCDeploymentTemplate&quot; for file &quot;New-JCDeploymentTemplate.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCDeploymentTemplate&quot; equal Function &quot;New-JCDeploymentTemplate&quot; for file &quot;New-JCDeploymentTemplate.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCDeploymentTemplate&quot; equal MatchValue &quot;New-JCDeploymentTemplate&quot; for file &quot;New-JCDeploymentTemplate.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCDeploymentTemplate&quot; equal MatchValue &quot;New-JCDeploymentTemplate&quot; for file &quot;New-JCDeploymentTemplate.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="2.6601" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCDeploymentTemplate.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCDeploymentTemplate.ps1&quot; does not contain any functions" time="0.0117" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="2.7011" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCDeploymentTemplate.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCDeploymentTemplate.ps1&quot; has exactly 1 function" time="0.0092" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="2.7439" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCCommand&quot; equal Function &quot;Remove-JCCommand&quot; for file &quot;Remove-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommand&quot; equal Function &quot;Remove-JCCommand&quot; for file &quot;Remove-JCCommand.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCCommand&quot; equal MatchValue &quot;Remove-JCCommand&quot; for file &quot;Remove-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommand&quot; equal MatchValue &quot;Remove-JCCommand&quot; for file &quot;Remove-JCCommand.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="2.7841" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCCommand.ps1&quot; does not contain any functions" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="2.8281" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCCommand.ps1&quot; has exactly 1 function" time="0.0105" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="2.8664" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="2.9047" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCCommand&quot; equal Function &quot;Set-JCCommand&quot; for file &quot;Set-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCCommand&quot; equal Function &quot;Set-JCCommand&quot; for file &quot;Set-JCCommand.ps1&quot;" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCCommand&quot; equal MatchValue &quot;Set-JCCommand&quot; for file &quot;Set-JCCommand.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCCommand&quot; equal MatchValue &quot;Set-JCCommand&quot; for file &quot;Set-JCCommand.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="2.945" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCCommand.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCCommand.ps1&quot; does not contain any functions" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="2.9911" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCCommand.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCCommand.ps1&quot; has exactly 1 function" time="0.0095" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="3.0225" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCCommand.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="3.0635" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCCommandResult&quot; equal Function &quot;Get-JCCommandResult&quot; for file &quot;Get-JCCommandResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommandResult&quot; equal Function &quot;Get-JCCommandResult&quot; for file &quot;Get-JCCommandResult.ps1&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCCommandResult&quot; equal MatchValue &quot;Get-JCCommandResult&quot; for file &quot;Get-JCCommandResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommandResult&quot; equal MatchValue &quot;Get-JCCommandResult&quot; for file &quot;Get-JCCommandResult.ps1&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="3.1057" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandResult.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCCommandResult.ps1&quot; does not contain any functions" time="0.0114" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="3.1463" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandResult.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCCommandResult.ps1&quot; has exactly 1 function" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="3.1873" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCCommandResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="3.2245" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCCommandResult&quot; equal Function &quot;Remove-JCCommandResult&quot; for file &quot;Remove-JCCommandResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommandResult&quot; equal Function &quot;Remove-JCCommandResult&quot; for file &quot;Remove-JCCommandResult.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCCommandResult&quot; equal MatchValue &quot;Remove-JCCommandResult&quot; for file &quot;Remove-JCCommandResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommandResult&quot; equal MatchValue &quot;Remove-JCCommandResult&quot; for file &quot;Remove-JCCommandResult.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="3.2859" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandResult.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCCommandResult.ps1&quot; does not contain any functions" time="0.0219" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="3.3213" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandResult.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCCommandResult.ps1&quot; has exactly 1 function" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="3.3508" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCCommandResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="3.3923" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCCommandTarget&quot; equal Function &quot;Add-JCCommandTarget&quot; for file &quot;Add-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCCommandTarget&quot; equal Function &quot;Add-JCCommandTarget&quot; for file &quot;Add-JCCommandTarget.ps1&quot;" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCCommandTarget&quot; equal MatchValue &quot;Add-JCCommandTarget&quot; for file &quot;Add-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCCommandTarget&quot; equal MatchValue &quot;Add-JCCommandTarget&quot; for file &quot;Add-JCCommandTarget.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="3.4296" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCCommandTarget.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCCommandTarget.ps1&quot; does not contain any functions" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="3.4763" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCCommandTarget.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCCommandTarget.ps1&quot; has exactly 1 function" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="3.5112" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="3.5484" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCCommandTarget&quot; equal Function &quot;Get-JCCommandTarget&quot; for file &quot;Get-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommandTarget&quot; equal Function &quot;Get-JCCommandTarget&quot; for file &quot;Get-JCCommandTarget.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCCommandTarget&quot; equal MatchValue &quot;Get-JCCommandTarget&quot; for file &quot;Get-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommandTarget&quot; equal MatchValue &quot;Get-JCCommandTarget&quot; for file &quot;Get-JCCommandTarget.ps1&quot;" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="3.5891" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandTarget.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCCommandTarget.ps1&quot; does not contain any functions" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="3.6287" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandTarget.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCCommandTarget.ps1&quot; has exactly 1 function" time="0.0089" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="3.6635" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="3.7046" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCCommandTarget&quot; equal Function &quot;Remove-JCCommandTarget&quot; for file &quot;Remove-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommandTarget&quot; equal Function &quot;Remove-JCCommandTarget&quot; for file &quot;Remove-JCCommandTarget.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCCommandTarget&quot; equal MatchValue &quot;Remove-JCCommandTarget&quot; for file &quot;Remove-JCCommandTarget.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCCommandTarget&quot; equal MatchValue &quot;Remove-JCCommandTarget&quot; for file &quot;Remove-JCCommandTarget.ps1&quot;" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="3.745" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandTarget.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCCommandTarget.ps1&quot; does not contain any functions" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="3.7884" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandTarget.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCCommandTarget.ps1&quot; has exactly 1 function" time="0.0085" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="3.824" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCCommandTarget.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="3.8633" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCEvent&quot; equal Function &quot;Get-JCEvent&quot; for file &quot;Get-JCEvent.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCEvent&quot; equal Function &quot;Get-JCEvent&quot; for file &quot;Get-JCEvent.ps1&quot;" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCEvent&quot; equal MatchValue &quot;Get-JCEvent&quot; for file &quot;Get-JCEvent.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCEvent&quot; equal MatchValue &quot;Get-JCEvent&quot; for file &quot;Get-JCEvent.ps1&quot;" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="3.9069" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCEvent.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCEvent.ps1&quot; does not contain any functions" time="0.012" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="3.9489" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCEvent.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCEvent.ps1&quot; has exactly 1 function" time="0.0099" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="3.9839" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCEvent.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCEvent.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="4.0189" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCGroup&quot; equal Function &quot;Get-JCGroup&quot; for file &quot;Get-JCGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCGroup&quot; equal Function &quot;Get-JCGroup&quot; for file &quot;Get-JCGroup.ps1&quot;" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCGroup&quot; equal MatchValue &quot;Get-JCGroup&quot; for file &quot;Get-JCGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCGroup&quot; equal MatchValue &quot;Get-JCGroup&quot; for file &quot;Get-JCGroup.ps1&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="4.0554" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCGroup.ps1&quot; does not contain any functions" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="4.1013" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCGroup.ps1&quot; has exactly 1 function" time="0.0144" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="4.1313" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="4.1645" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCSystemGroupMember&quot; equal Function &quot;Add-JCSystemGroupMember&quot; for file &quot;Add-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCSystemGroupMember&quot; equal Function &quot;Add-JCSystemGroupMember&quot; for file &quot;Add-JCSystemGroupMember.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCSystemGroupMember&quot; equal MatchValue &quot;Add-JCSystemGroupMember&quot; for file &quot;Add-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCSystemGroupMember&quot; equal MatchValue &quot;Add-JCSystemGroupMember&quot; for file &quot;Add-JCSystemGroupMember.ps1&quot;" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="4.2029" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCSystemGroupMember.ps1&quot; does not contain any functions" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="4.2443" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCSystemGroupMember.ps1&quot; has exactly 1 function" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="4.2823" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="4.3199" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCSystemGroupMember&quot; equal Function &quot;Get-JCSystemGroupMember&quot; for file &quot;Get-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemGroupMember&quot; equal Function &quot;Get-JCSystemGroupMember&quot; for file &quot;Get-JCSystemGroupMember.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCSystemGroupMember&quot; equal MatchValue &quot;Get-JCSystemGroupMember&quot; for file &quot;Get-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemGroupMember&quot; equal MatchValue &quot;Get-JCSystemGroupMember&quot; for file &quot;Get-JCSystemGroupMember.ps1&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="4.3589" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCSystemGroupMember.ps1&quot; does not contain any functions" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="4.4" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCSystemGroupMember.ps1&quot; has exactly 1 function" time="0.0115" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="4.4317" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="4.4706" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCSystemGroup&quot; equal Function &quot;New-JCSystemGroup&quot; for file &quot;New-JCSystemGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCSystemGroup&quot; equal Function &quot;New-JCSystemGroup&quot; for file &quot;New-JCSystemGroup.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCSystemGroup&quot; equal MatchValue &quot;New-JCSystemGroup&quot; for file &quot;New-JCSystemGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCSystemGroup&quot; equal MatchValue &quot;New-JCSystemGroup&quot; for file &quot;New-JCSystemGroup.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="4.5103" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCSystemGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCSystemGroup.ps1&quot; does not contain any functions" time="0.0063" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="4.5507" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCSystemGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCSystemGroup.ps1&quot; has exactly 1 function" time="0.0096" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="4.587" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCSystemGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCSystemGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="4.6231" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCSystemGroup&quot; equal Function &quot;Remove-JCSystemGroup&quot; for file &quot;Remove-JCSystemGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemGroup&quot; equal Function &quot;Remove-JCSystemGroup&quot; for file &quot;Remove-JCSystemGroup.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCSystemGroup&quot; equal MatchValue &quot;Remove-JCSystemGroup&quot; for file &quot;Remove-JCSystemGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemGroup&quot; equal MatchValue &quot;Remove-JCSystemGroup&quot; for file &quot;Remove-JCSystemGroup.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="4.6662" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCSystemGroup.ps1&quot; does not contain any functions" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="4.7068" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCSystemGroup.ps1&quot; has exactly 1 function" time="0.012" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="4.7378" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCSystemGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="4.77" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCSystemGroupMember&quot; equal Function &quot;Remove-JCSystemGroupMember&quot; for file &quot;Remove-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemGroupMember&quot; equal Function &quot;Remove-JCSystemGroupMember&quot; for file &quot;Remove-JCSystemGroupMember.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCSystemGroupMember&quot; equal MatchValue &quot;Remove-JCSystemGroupMember&quot; for file &quot;Remove-JCSystemGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemGroupMember&quot; equal MatchValue &quot;Remove-JCSystemGroupMember&quot; for file &quot;Remove-JCSystemGroupMember.ps1&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="4.8149" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; does not contain any functions" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="4.8537" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; has exactly 1 function" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="4.8909" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCSystemGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="4.9262" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCUserGroupMember&quot; equal Function &quot;Add-JCUserGroupMember&quot; for file &quot;Add-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCUserGroupMember&quot; equal Function &quot;Add-JCUserGroupMember&quot; for file &quot;Add-JCUserGroupMember.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCUserGroupMember&quot; equal MatchValue &quot;Add-JCUserGroupMember&quot; for file &quot;Add-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCUserGroupMember&quot; equal MatchValue &quot;Add-JCUserGroupMember&quot; for file &quot;Add-JCUserGroupMember.ps1&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="4.9659" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCUserGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCUserGroupMember.ps1&quot; does not contain any functions" time="0.009" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="5.0078" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCUserGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCUserGroupMember.ps1&quot; has exactly 1 function" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="5.0423" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="5.081" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCUserGroupMember&quot; equal Function &quot;Get-JCUserGroupMember&quot; for file &quot;Get-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUserGroupMember&quot; equal Function &quot;Get-JCUserGroupMember&quot; for file &quot;Get-JCUserGroupMember.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCUserGroupMember&quot; equal MatchValue &quot;Get-JCUserGroupMember&quot; for file &quot;Get-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUserGroupMember&quot; equal MatchValue &quot;Get-JCUserGroupMember&quot; for file &quot;Get-JCUserGroupMember.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="5.1207" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCUserGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCUserGroupMember.ps1&quot; does not contain any functions" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="5.1624" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCUserGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCUserGroupMember.ps1&quot; has exactly 1 function" time="0.0109" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="5.1997" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="5.2368" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCUserGroup&quot; equal Function &quot;New-JCUserGroup&quot; for file &quot;New-JCUserGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCUserGroup&quot; equal Function &quot;New-JCUserGroup&quot; for file &quot;New-JCUserGroup.ps1&quot;" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCUserGroup&quot; equal MatchValue &quot;New-JCUserGroup&quot; for file &quot;New-JCUserGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCUserGroup&quot; equal MatchValue &quot;New-JCUserGroup&quot; for file &quot;New-JCUserGroup.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="5.2758" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCUserGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCUserGroup.ps1&quot; does not contain any functions" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="5.3218" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCUserGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCUserGroup.ps1&quot; has exactly 1 function" time="0.0093" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="5.3564" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCUserGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCUserGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="5.397" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCUserGroup&quot; equal Function &quot;Remove-JCUserGroup&quot; for file &quot;Remove-JCUserGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUserGroup&quot; equal Function &quot;Remove-JCUserGroup&quot; for file &quot;Remove-JCUserGroup.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCUserGroup&quot; equal MatchValue &quot;Remove-JCUserGroup&quot; for file &quot;Remove-JCUserGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUserGroup&quot; equal MatchValue &quot;Remove-JCUserGroup&quot; for file &quot;Remove-JCUserGroup.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="5.4365" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCUserGroup.ps1&quot; does not contain any functions" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="5.4775" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCUserGroup.ps1&quot; has exactly 1 function" time="0.0101" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="5.5162" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCUserGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="5.5554" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCUserGroupMember&quot; equal Function &quot;Remove-JCUserGroupMember&quot; for file &quot;Remove-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUserGroupMember&quot; equal Function &quot;Remove-JCUserGroupMember&quot; for file &quot;Remove-JCUserGroupMember.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCUserGroupMember&quot; equal MatchValue &quot;Remove-JCUserGroupMember&quot; for file &quot;Remove-JCUserGroupMember.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUserGroupMember&quot; equal MatchValue &quot;Remove-JCUserGroupMember&quot; for file &quot;Remove-JCUserGroupMember.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="5.597" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroupMember.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCUserGroupMember.ps1&quot; does not contain any functions" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="5.6362" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroupMember.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCUserGroupMember.ps1&quot; has exactly 1 function" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="5.6708" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCUserGroupMember.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="5.713" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCUserGroupLDAP&quot; equal Function &quot;Set-JCUserGroupLDAP&quot; for file &quot;Set-JCUserGroupLDAP.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCUserGroupLDAP&quot; equal Function &quot;Set-JCUserGroupLDAP&quot; for file &quot;Set-JCUserGroupLDAP.ps1&quot;" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCUserGroupLDAP&quot; equal MatchValue &quot;Set-JCUserGroupLDAP&quot; for file &quot;Set-JCUserGroupLDAP.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCUserGroupLDAP&quot; equal MatchValue &quot;Set-JCUserGroupLDAP&quot; for file &quot;Set-JCUserGroupLDAP.ps1&quot;" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="5.7518" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; does not contain any functions" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="5.7908" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; has exactly 1 function" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="5.8278" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCUserGroupLDAP.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="5.8674" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCPolicy&quot; equal Function &quot;Get-JCPolicy&quot; for file &quot;Get-JCPolicy.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicy&quot; equal Function &quot;Get-JCPolicy&quot; for file &quot;Get-JCPolicy.ps1&quot;" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCPolicy&quot; equal MatchValue &quot;Get-JCPolicy&quot; for file &quot;Get-JCPolicy.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicy&quot; equal MatchValue &quot;Get-JCPolicy&quot; for file &quot;Get-JCPolicy.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="5.9093" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicy.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCPolicy.ps1&quot; does not contain any functions" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="5.9503" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicy.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCPolicy.ps1&quot; has exactly 1 function" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="5.9874" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicy.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCPolicy.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="6.0298" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCPolicyResult&quot; equal Function &quot;Get-JCPolicyResult&quot; for file &quot;Get-JCPolicyResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyResult&quot; equal Function &quot;Get-JCPolicyResult&quot; for file &quot;Get-JCPolicyResult.ps1&quot;" time="0.0066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCPolicyResult&quot; equal MatchValue &quot;Get-JCPolicyResult&quot; for file &quot;Get-JCPolicyResult.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyResult&quot; equal MatchValue &quot;Get-JCPolicyResult&quot; for file &quot;Get-JCPolicyResult.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="6.0664" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyResult.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCPolicyResult.ps1&quot; does not contain any functions" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="6.1042" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyResult.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCPolicyResult.ps1&quot; has exactly 1 function" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="6.1352" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCPolicyResult.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="6.1698" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCPolicyTargetGroup&quot; equal Function &quot;Get-JCPolicyTargetGroup&quot; for file &quot;Get-JCPolicyTargetGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyTargetGroup&quot; equal Function &quot;Get-JCPolicyTargetGroup&quot; for file &quot;Get-JCPolicyTargetGroup.ps1&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCPolicyTargetGroup&quot; equal MatchValue &quot;Get-JCPolicyTargetGroup&quot; for file &quot;Get-JCPolicyTargetGroup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyTargetGroup&quot; equal MatchValue &quot;Get-JCPolicyTargetGroup&quot; for file &quot;Get-JCPolicyTargetGroup.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="6.2067" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; does not contain any functions" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="6.2434" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; has exactly 1 function" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="6.2735" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCPolicyTargetGroup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="6.3142" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCPolicyTargetSystem&quot; equal Function &quot;Get-JCPolicyTargetSystem&quot; for file &quot;Get-JCPolicyTargetSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyTargetSystem&quot; equal Function &quot;Get-JCPolicyTargetSystem&quot; for file &quot;Get-JCPolicyTargetSystem.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCPolicyTargetSystem&quot; equal MatchValue &quot;Get-JCPolicyTargetSystem&quot; for file &quot;Get-JCPolicyTargetSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCPolicyTargetSystem&quot; equal MatchValue &quot;Get-JCPolicyTargetSystem&quot; for file &quot;Get-JCPolicyTargetSystem.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="6.3491" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; does not contain any functions" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="6.3863" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; has exactly 1 function" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="6.4178" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCPolicyTargetSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="6.4521" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCRadiusReplyAttribute&quot; equal Function &quot;Add-JCRadiusReplyAttribute&quot; for file &quot;Add-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCRadiusReplyAttribute&quot; equal Function &quot;Add-JCRadiusReplyAttribute&quot; for file &quot;Add-JCRadiusReplyAttribute.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Add-JCRadiusReplyAttribute&quot; for file &quot;Add-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Add-JCRadiusReplyAttribute&quot; for file &quot;Add-JCRadiusReplyAttribute.ps1&quot;" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="6.4938" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" time="0.0119" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="6.5329" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="6.5664" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="6.6063" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCRadiusReplyAttribute&quot; equal Function &quot;Get-JCRadiusReplyAttribute&quot; for file &quot;Get-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCRadiusReplyAttribute&quot; equal Function &quot;Get-JCRadiusReplyAttribute&quot; for file &quot;Get-JCRadiusReplyAttribute.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Get-JCRadiusReplyAttribute&quot; for file &quot;Get-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Get-JCRadiusReplyAttribute&quot; for file &quot;Get-JCRadiusReplyAttribute.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="6.6435" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="6.6858" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="6.7162" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="6.7507" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCRadiusServer&quot; equal Function &quot;Get-JCRadiusServer&quot; for file &quot;Get-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCRadiusServer&quot; equal Function &quot;Get-JCRadiusServer&quot; for file &quot;Get-JCRadiusServer.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCRadiusServer&quot; equal MatchValue &quot;Get-JCRadiusServer&quot; for file &quot;Get-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCRadiusServer&quot; equal MatchValue &quot;Get-JCRadiusServer&quot; for file &quot;Get-JCRadiusServer.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="6.7931" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCRadiusServer.ps1&quot; does not contain any functions" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="6.8325" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCRadiusServer.ps1&quot; has exactly 1 function" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="6.8726" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="6.9108" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCRadiusServer&quot; equal Function &quot;New-JCRadiusServer&quot; for file &quot;New-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCRadiusServer&quot; equal Function &quot;New-JCRadiusServer&quot; for file &quot;New-JCRadiusServer.ps1&quot;" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCRadiusServer&quot; equal MatchValue &quot;New-JCRadiusServer&quot; for file &quot;New-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCRadiusServer&quot; equal MatchValue &quot;New-JCRadiusServer&quot; for file &quot;New-JCRadiusServer.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="6.9501" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCRadiusServer.ps1&quot; does not contain any functions" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="6.9958" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCRadiusServer.ps1&quot; has exactly 1 function" time="0.0125" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="7.0313" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="7.0684" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCRadiusReplyAttribute&quot; equal Function &quot;Remove-JCRadiusReplyAttribute&quot; for file &quot;Remove-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCRadiusReplyAttribute&quot; equal Function &quot;Remove-JCRadiusReplyAttribute&quot; for file &quot;Remove-JCRadiusReplyAttribute.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Remove-JCRadiusReplyAttribute&quot; for file &quot;Remove-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Remove-JCRadiusReplyAttribute&quot; for file &quot;Remove-JCRadiusReplyAttribute.ps1&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="7.1115" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="7.1506" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="7.1895" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="7.2284" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCRadiusServer&quot; equal Function &quot;Remove-JCRadiusServer&quot; for file &quot;Remove-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCRadiusServer&quot; equal Function &quot;Remove-JCRadiusServer&quot; for file &quot;Remove-JCRadiusServer.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCRadiusServer&quot; equal MatchValue &quot;Remove-JCRadiusServer&quot; for file &quot;Remove-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCRadiusServer&quot; equal MatchValue &quot;Remove-JCRadiusServer&quot; for file &quot;Remove-JCRadiusServer.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="7.268" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCRadiusServer.ps1&quot; does not contain any functions" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="7.3127" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCRadiusServer.ps1&quot; has exactly 1 function" time="0.0126" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="7.3529" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="7.3871" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCRadiusReplyAttribute&quot; equal Function &quot;Set-JCRadiusReplyAttribute&quot; for file &quot;Set-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCRadiusReplyAttribute&quot; equal Function &quot;Set-JCRadiusReplyAttribute&quot; for file &quot;Set-JCRadiusReplyAttribute.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Set-JCRadiusReplyAttribute&quot; for file &quot;Set-JCRadiusReplyAttribute.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCRadiusReplyAttribute&quot; equal MatchValue &quot;Set-JCRadiusReplyAttribute&quot; for file &quot;Set-JCRadiusReplyAttribute.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="7.4259" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; does not contain any functions" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="7.4624" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; has exactly 1 function" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="7.5015" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCRadiusReplyAttribute.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="7.5397" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCRadiusServer&quot; equal Function &quot;Set-JCRadiusServer&quot; for file &quot;Set-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCRadiusServer&quot; equal Function &quot;Set-JCRadiusServer&quot; for file &quot;Set-JCRadiusServer.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCRadiusServer&quot; equal MatchValue &quot;Set-JCRadiusServer&quot; for file &quot;Set-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCRadiusServer&quot; equal MatchValue &quot;Set-JCRadiusServer&quot; for file &quot;Set-JCRadiusServer.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="7.5776" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCRadiusServer.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="7.6181" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCRadiusServer.ps1&quot; has exactly 1 function" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="7.6509" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCRadiusServer.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="7.6917" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCSystem&quot; equal Function &quot;Get-JCSystem&quot; for file &quot;Get-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystem&quot; equal Function &quot;Get-JCSystem&quot; for file &quot;Get-JCSystem.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCSystem&quot; equal MatchValue &quot;Get-JCSystem&quot; for file &quot;Get-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystem&quot; equal MatchValue &quot;Get-JCSystem&quot; for file &quot;Get-JCSystem.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="7.7295" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystem.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCSystem.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="7.7652" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystem.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCSystem.ps1&quot; has exactly 1 function" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="7.798" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="7.8319" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCSystemInsights&quot; equal Function &quot;Get-JCSystemInsights&quot; for file &quot;Get-JCSystemInsights.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemInsights&quot; equal Function &quot;Get-JCSystemInsights&quot; for file &quot;Get-JCSystemInsights.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCSystemInsights&quot; equal MatchValue &quot;Get-JCSystemInsights&quot; for file &quot;Get-JCSystemInsights.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemInsights&quot; equal MatchValue &quot;Get-JCSystemInsights&quot; for file &quot;Get-JCSystemInsights.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="7.8661" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemInsights.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCSystemInsights.ps1&quot; does not contain any functions" time="0.0063" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="7.9047" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemInsights.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCSystemInsights.ps1&quot; has exactly 1 function" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="7.9338" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemInsights.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCSystemInsights.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="7.9726" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCSystem&quot; equal Function &quot;Remove-JCSystem&quot; for file &quot;Remove-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystem&quot; equal Function &quot;Remove-JCSystem&quot; for file &quot;Remove-JCSystem.ps1&quot;" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCSystem&quot; equal MatchValue &quot;Remove-JCSystem&quot; for file &quot;Remove-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystem&quot; equal MatchValue &quot;Remove-JCSystem&quot; for file &quot;Remove-JCSystem.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="8.0104" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystem.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCSystem.ps1&quot; does not contain any functions" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="8.0484" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystem.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCSystem.ps1&quot; has exactly 1 function" time="0.0085" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="8.0936" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="8.131" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCSystem&quot; equal Function &quot;Set-JCSystem&quot; for file &quot;Set-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCSystem&quot; equal Function &quot;Set-JCSystem&quot; for file &quot;Set-JCSystem.ps1&quot;" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCSystem&quot; equal MatchValue &quot;Set-JCSystem&quot; for file &quot;Set-JCSystem.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCSystem&quot; equal MatchValue &quot;Set-JCSystem&quot; for file &quot;Set-JCSystem.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="8.1728" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystem.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCSystem.ps1&quot; does not contain any functions" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="8.2131" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystem.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCSystem.ps1&quot; has exactly 1 function" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="8.248" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCSystem.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="8.2911" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Add-JCSystemUser&quot; equal Function &quot;Add-JCSystemUser&quot; for file &quot;Add-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCSystemUser&quot; equal Function &quot;Add-JCSystemUser&quot; for file &quot;Add-JCSystemUser.ps1&quot;" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Add-JCSystemUser&quot; equal MatchValue &quot;Add-JCSystemUser&quot; for file &quot;Add-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Add-JCSystemUser&quot; equal MatchValue &quot;Add-JCSystemUser&quot; for file &quot;Add-JCSystemUser.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="8.3296" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Add-JCSystemUser.ps1&quot; does not contain any functions" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="8.3692" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Add-JCSystemUser.ps1&quot; has exactly 1 function" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="8.4082" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Add-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Add-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="8.4477" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCSystemUser&quot; equal Function &quot;Get-JCSystemUser&quot; for file &quot;Get-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemUser&quot; equal Function &quot;Get-JCSystemUser&quot; for file &quot;Get-JCSystemUser.ps1&quot;" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCSystemUser&quot; equal MatchValue &quot;Get-JCSystemUser&quot; for file &quot;Get-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCSystemUser&quot; equal MatchValue &quot;Get-JCSystemUser&quot; for file &quot;Get-JCSystemUser.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="8.4935" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCSystemUser.ps1&quot; does not contain any functions" time="0.0094" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="8.5358" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCSystemUser.ps1&quot; has exactly 1 function" time="0.009" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="8.5702" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="8.614" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCSystemUser&quot; equal Function &quot;Remove-JCSystemUser&quot; for file &quot;Remove-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemUser&quot; equal Function &quot;Remove-JCSystemUser&quot; for file &quot;Remove-JCSystemUser.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCSystemUser&quot; equal MatchValue &quot;Remove-JCSystemUser&quot; for file &quot;Remove-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCSystemUser&quot; equal MatchValue &quot;Remove-JCSystemUser&quot; for file &quot;Remove-JCSystemUser.ps1&quot;" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="8.6524" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCSystemUser.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="8.6954" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCSystemUser.ps1&quot; has exactly 1 function" time="0.0105" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="8.734" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="8.771" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCSystemUser&quot; equal Function &quot;Set-JCSystemUser&quot; for file &quot;Set-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCSystemUser&quot; equal Function &quot;Set-JCSystemUser&quot; for file &quot;Set-JCSystemUser.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCSystemUser&quot; equal MatchValue &quot;Set-JCSystemUser&quot; for file &quot;Set-JCSystemUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCSystemUser&quot; equal MatchValue &quot;Set-JCSystemUser&quot; for file &quot;Set-JCSystemUser.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="8.8156" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystemUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCSystemUser.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="8.8568" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystemUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCSystemUser.ps1&quot; has exactly 1 function" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="8.8921" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCSystemUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="8.9333" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCUser&quot; equal Function &quot;Get-JCUser&quot; for file &quot;Get-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUser&quot; equal Function &quot;Get-JCUser&quot; for file &quot;Get-JCUser.ps1&quot;" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCUser&quot; equal MatchValue &quot;Get-JCUser&quot; for file &quot;Get-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUser&quot; equal MatchValue &quot;Get-JCUser&quot; for file &quot;Get-JCUser.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="8.9714" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCUser.ps1&quot; does not contain any functions" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="9.0102" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCUser.ps1&quot; has exactly 1 function" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="9.0433" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="9.0762" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCUser&quot; equal Function &quot;New-JCUser&quot; for file &quot;New-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCUser&quot; equal Function &quot;New-JCUser&quot; for file &quot;New-JCUser.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCUser&quot; equal MatchValue &quot;New-JCUser&quot; for file &quot;New-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCUser&quot; equal MatchValue &quot;New-JCUser&quot; for file &quot;New-JCUser.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="9.1137" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCUser.ps1&quot; does not contain any functions" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="9.1514" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCUser.ps1&quot; has exactly 1 function" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="9.1859" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="9.225" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Remove-JCUser&quot; equal Function &quot;Remove-JCUser&quot; for file &quot;Remove-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUser&quot; equal Function &quot;Remove-JCUser&quot; for file &quot;Remove-JCUser.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Remove-JCUser&quot; equal MatchValue &quot;Remove-JCUser&quot; for file &quot;Remove-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Remove-JCUser&quot; equal MatchValue &quot;Remove-JCUser&quot; for file &quot;Remove-JCUser.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="9.2629" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Remove-JCUser.ps1&quot; does not contain any functions" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="9.3132" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Remove-JCUser.ps1&quot; has exactly 1 function" time="0.0101" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="9.3465" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Remove-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Remove-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="9.3847" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Set-JCUser&quot; equal Function &quot;Set-JCUser&quot; for file &quot;Set-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCUser&quot; equal Function &quot;Set-JCUser&quot; for file &quot;Set-JCUser.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Set-JCUser&quot; equal MatchValue &quot;Set-JCUser&quot; for file &quot;Set-JCUser.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Set-JCUser&quot; equal MatchValue &quot;Set-JCUser&quot; for file &quot;Set-JCUser.ps1&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="9.4289" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Set-JCUser.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Set-JCUser.ps1&quot; does not contain any functions" time="0.0107" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="9.4685" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Set-JCUser.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Set-JCUser.ps1&quot; has exactly 1 function" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="9.5031" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Set-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Set-JCUser.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="9.5465" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCBackup&quot; equal Function &quot;Get-JCBackup&quot; for file &quot;Get-JCBackup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCBackup&quot; equal Function &quot;Get-JCBackup&quot; for file &quot;Get-JCBackup.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCBackup&quot; equal MatchValue &quot;Get-JCBackup&quot; for file &quot;Get-JCBackup.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCBackup&quot; equal MatchValue &quot;Get-JCBackup&quot; for file &quot;Get-JCBackup.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="9.5861" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCBackup.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCBackup.ps1&quot; does not contain any functions" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="9.6287" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCBackup.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCBackup.ps1&quot; has exactly 1 function" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="9.6631" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Get-JCBackup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Get-JCBackup.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="9.7021" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Send-JCPasswordReset&quot; equal Function &quot;Send-JCPasswordReset&quot; for file &quot;Send-JCPasswordReset.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Send-JCPasswordReset&quot; equal Function &quot;Send-JCPasswordReset&quot; for file &quot;Send-JCPasswordReset.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Send-JCPasswordReset&quot; equal MatchValue &quot;Send-JCPasswordReset&quot; for file &quot;Send-JCPasswordReset.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Send-JCPasswordReset&quot; equal MatchValue &quot;Send-JCPasswordReset&quot; for file &quot;Send-JCPasswordReset.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="9.7451" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Send-JCPasswordReset.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Send-JCPasswordReset.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="9.7873" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Send-JCPasswordReset.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Send-JCPasswordReset.ps1&quot; has exactly 1 function" time="0.0097" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="9.8221" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Send-JCPasswordReset.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Send-JCPasswordReset.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="9.8597" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Import-JCUsersFromCSV&quot; equal Function &quot;Import-JCUsersFromCSV&quot; for file &quot;Import-JCUsersFromCSV.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Import-JCUsersFromCSV&quot; equal Function &quot;Import-JCUsersFromCSV&quot; for file &quot;Import-JCUsersFromCSV.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Import-JCUsersFromCSV&quot; equal MatchValue &quot;Import-JCUsersFromCSV&quot; for file &quot;Import-JCUsersFromCSV.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Import-JCUsersFromCSV&quot; equal MatchValue &quot;Import-JCUsersFromCSV&quot; for file &quot;Import-JCUsersFromCSV.ps1&quot;" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="9.8989" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Import-JCUsersFromCSV.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Import-JCUsersFromCSV.ps1&quot; does not contain any functions" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="9.9427" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Import-JCUsersFromCSV.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Import-JCUsersFromCSV.ps1&quot; has exactly 1 function" time="0.0125" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="9.9765" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Import-JCUsersFromCSV.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Import-JCUsersFromCSV.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="10.0137" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCImportTemplate&quot; equal Function &quot;New-JCImportTemplate&quot; for file &quot;New-JCImportTemplate.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCImportTemplate&quot; equal Function &quot;New-JCImportTemplate&quot; for file &quot;New-JCImportTemplate.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCImportTemplate&quot; equal MatchValue &quot;New-JCImportTemplate&quot; for file &quot;New-JCImportTemplate.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCImportTemplate&quot; equal MatchValue &quot;New-JCImportTemplate&quot; for file &quot;New-JCImportTemplate.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="10.0559" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCImportTemplate.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCImportTemplate.ps1&quot; does not contain any functions" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="10.0982" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCImportTemplate.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCImportTemplate.ps1&quot; has exactly 1 function" time="0.009" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="10.136" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;New-JCImportTemplate.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;New-JCImportTemplate.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="10.1792" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Update-JCUsersFromCSV&quot; equal Function &quot;Update-JCUsersFromCSV&quot; for file &quot;Update-JCUsersFromCSV.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Update-JCUsersFromCSV&quot; equal Function &quot;Update-JCUsersFromCSV&quot; for file &quot;Update-JCUsersFromCSV.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Update-JCUsersFromCSV&quot; equal MatchValue &quot;Update-JCUsersFromCSV&quot; for file &quot;Update-JCUsersFromCSV.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Update-JCUsersFromCSV&quot; equal MatchValue &quot;Update-JCUsersFromCSV&quot; for file &quot;Update-JCUsersFromCSV.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="10.2183" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Update-JCUsersFromCSV.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Update-JCUsersFromCSV.ps1&quot; does not contain any functions" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="10.2613" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Update-JCUsersFromCSV.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Update-JCUsersFromCSV.ps1&quot; has exactly 1 function" time="0.0118" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function" executed="True" result="Success" success="True" time="10.297" asserts="0" description="Function Format Tests.Test that Connect-JCOnline exists in each Public function">
                <results>
                  <test-case description="When FileName &quot;Update-JCUsersFromCSV.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test that Connect-JCOnline exists in each Public function.When FileName &quot;Update-JCUsersFromCSV.ps1&quot; does not contain &quot;Connect-JCOnline&quot;" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="10.334" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Format-JCAssociation&quot; equal Function &quot;Format-JCAssociation&quot; for file &quot;Format-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Format-JCAssociation&quot; equal Function &quot;Format-JCAssociation&quot; for file &quot;Format-JCAssociation.ps1&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Format-JCAssociation&quot; equal MatchValue &quot;Format-JCAssociation&quot; for file &quot;Format-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Format-JCAssociation&quot; equal MatchValue &quot;Format-JCAssociation&quot; for file &quot;Format-JCAssociation.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="10.3731" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Format-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Format-JCAssociation.ps1&quot; does not contain any functions" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="10.4183" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Format-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Format-JCAssociation.ps1&quot; has exactly 1 function" time="0.0117" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="10.4601" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-DynamicParamAssociation&quot; equal Function &quot;Get-DynamicParamAssociation&quot; for file &quot;Get-DynamicParamAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-DynamicParamAssociation&quot; equal Function &quot;Get-DynamicParamAssociation&quot; for file &quot;Get-DynamicParamAssociation.ps1&quot;" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-DynamicParamAssociation&quot; equal MatchValue &quot;Get-DynamicParamAssociation&quot; for file &quot;Get-DynamicParamAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-DynamicParamAssociation&quot; equal MatchValue &quot;Get-DynamicParamAssociation&quot; for file &quot;Get-DynamicParamAssociation.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="10.4993" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-DynamicParamAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-DynamicParamAssociation.ps1&quot; does not contain any functions" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="10.5391" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-DynamicParamAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-DynamicParamAssociation.ps1&quot; has exactly 1 function" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="10.5814" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Invoke-JCAssociation&quot; equal Function &quot;Invoke-JCAssociation&quot; for file &quot;Invoke-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCAssociation&quot; equal Function &quot;Invoke-JCAssociation&quot; for file &quot;Invoke-JCAssociation.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Invoke-JCAssociation&quot; equal MatchValue &quot;Invoke-JCAssociation&quot; for file &quot;Invoke-JCAssociation.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCAssociation&quot; equal MatchValue &quot;Invoke-JCAssociation&quot; for file &quot;Invoke-JCAssociation.ps1&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="10.6211" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCAssociation.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Invoke-JCAssociation.ps1&quot; does not contain any functions" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="10.6677" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCAssociation.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Invoke-JCAssociation.ps1&quot; has exactly 1 function" time="0.009" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="10.7059" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-ModuleBanner&quot; equal Function &quot;Get-ModuleBanner&quot; for file &quot;Get-ModuleBanner.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-ModuleBanner&quot; equal Function &quot;Get-ModuleBanner&quot; for file &quot;Get-ModuleBanner.ps1&quot;" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-ModuleBanner&quot; equal MatchValue &quot;Get-ModuleBanner&quot; for file &quot;Get-ModuleBanner.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-ModuleBanner&quot; equal MatchValue &quot;Get-ModuleBanner&quot; for file &quot;Get-ModuleBanner.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="10.7452" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-ModuleBanner.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-ModuleBanner.ps1&quot; does not contain any functions" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="10.7884" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-ModuleBanner.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-ModuleBanner.ps1&quot; has exactly 1 function" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="10.8257" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-ModuleChangeLog&quot; equal Function &quot;Get-ModuleChangeLog&quot; for file &quot;Get-ModuleChangeLog.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-ModuleChangeLog&quot; equal Function &quot;Get-ModuleChangeLog&quot; for file &quot;Get-ModuleChangeLog.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-ModuleChangeLog&quot; equal MatchValue &quot;Get-ModuleChangeLog&quot; for file &quot;Get-ModuleChangeLog.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-ModuleChangeLog&quot; equal MatchValue &quot;Get-ModuleChangeLog&quot; for file &quot;Get-ModuleChangeLog.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="10.8684" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-ModuleChangeLog.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-ModuleChangeLog.ps1&quot; does not contain any functions" time="0.0085" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="10.9086" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-ModuleChangeLog.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-ModuleChangeLog.ps1&quot; has exactly 1 function" time="0.0091" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="10.9462" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCCommonParameters&quot; equal Function &quot;Get-JCCommonParameters&quot; for file &quot;Get-JCCommonParameters.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommonParameters&quot; equal Function &quot;Get-JCCommonParameters&quot; for file &quot;Get-JCCommonParameters.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCCommonParameters&quot; equal MatchValue &quot;Get-JCCommonParameters&quot; for file &quot;Get-JCCommonParameters.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCCommonParameters&quot; equal MatchValue &quot;Get-JCCommonParameters&quot; for file &quot;Get-JCCommonParameters.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="10.9859" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommonParameters.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCCommonParameters.ps1&quot; does not contain any functions" time="0.0104" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="11.0221" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCCommonParameters.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCCommonParameters.ps1&quot; has exactly 1 function" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="11.0603" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Name&quot; equal Function &quot;Get-Hash_CommandID_Name&quot; for file &quot;Get-Hash_CommandID_Name.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Name&quot; equal Function &quot;Get-Hash_CommandID_Name&quot; for file &quot;Get-Hash_CommandID_Name.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Name&quot; equal MatchValue &quot;Get-Hash_CommandID_Name&quot; for file &quot;Get-Hash_CommandID_Name.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Name&quot; equal MatchValue &quot;Get-Hash_CommandID_Name&quot; for file &quot;Get-Hash_CommandID_Name.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="11.0985" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Name.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_CommandID_Name.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="11.1362" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Name.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_CommandID_Name.ps1&quot; has exactly 1 function" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="11.1755" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Trigger&quot; equal Function &quot;Get-Hash_CommandID_Trigger&quot; for file &quot;Get-Hash_CommandID_Trigger.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Trigger&quot; equal Function &quot;Get-Hash_CommandID_Trigger&quot; for file &quot;Get-Hash_CommandID_Trigger.ps1&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Trigger&quot; equal MatchValue &quot;Get-Hash_CommandID_Trigger&quot; for file &quot;Get-Hash_CommandID_Trigger.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Trigger&quot; equal MatchValue &quot;Get-Hash_CommandID_Trigger&quot; for file &quot;Get-Hash_CommandID_Trigger.ps1&quot;" time="0.0059" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="11.2129" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Trigger.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_CommandID_Trigger.ps1&quot; does not contain any functions" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="11.2551" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Trigger.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_CommandID_Trigger.ps1&quot; has exactly 1 function" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="11.2924" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Type&quot; equal Function &quot;Get-Hash_CommandID_Type&quot; for file &quot;Get-Hash_CommandID_Type.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Type&quot; equal Function &quot;Get-Hash_CommandID_Type&quot; for file &quot;Get-Hash_CommandID_Type.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_CommandID_Type&quot; equal MatchValue &quot;Get-Hash_CommandID_Type&quot; for file &quot;Get-Hash_CommandID_Type.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_CommandID_Type&quot; equal MatchValue &quot;Get-Hash_CommandID_Type&quot; for file &quot;Get-Hash_CommandID_Type.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="11.3295" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Type.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_CommandID_Type.ps1&quot; does not contain any functions" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="11.3727" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_CommandID_Type.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_CommandID_Type.ps1&quot; has exactly 1 function" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="11.4095" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_Email_ID&quot; equal Function &quot;Get-Hash_Email_ID&quot; for file &quot;Get-Hash_Email_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_Email_ID&quot; equal Function &quot;Get-Hash_Email_ID&quot; for file &quot;Get-Hash_Email_ID.ps1&quot;" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_Email_ID&quot; equal MatchValue &quot;Get-Hash_Email_ID&quot; for file &quot;Get-Hash_Email_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_Email_ID&quot; equal MatchValue &quot;Get-Hash_Email_ID&quot; for file &quot;Get-Hash_Email_ID.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="11.4449" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_Email_ID.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_Email_ID.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="11.4869" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_Email_ID.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_Email_ID.ps1&quot; has exactly 1 function" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="11.5246" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_Email_Username&quot; equal Function &quot;Get-Hash_Email_Username&quot; for file &quot;Get-Hash_Email_Username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_Email_Username&quot; equal Function &quot;Get-Hash_Email_Username&quot; for file &quot;Get-Hash_Email_Username.ps1&quot;" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_Email_Username&quot; equal MatchValue &quot;Get-Hash_Email_Username&quot; for file &quot;Get-Hash_Email_Username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_Email_Username&quot; equal MatchValue &quot;Get-Hash_Email_Username&quot; for file &quot;Get-Hash_Email_Username.ps1&quot;" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="11.567" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_Email_Username.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_Email_Username.ps1&quot; does not contain any functions" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="11.6071" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_Email_Username.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_Email_Username.ps1&quot; has exactly 1 function" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="11.6438" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_employeeIdentifier_username&quot; equal Function &quot;Get-Hash_employeeIdentifier_username&quot; for file &quot;Get-Hash_employeeIdentifier_username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_employeeIdentifier_username&quot; equal Function &quot;Get-Hash_employeeIdentifier_username&quot; for file &quot;Get-Hash_employeeIdentifier_username.ps1&quot;" time="0.0036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_employeeIdentifier_username&quot; equal MatchValue &quot;Get-Hash_employeeIdentifier_username&quot; for file &quot;Get-Hash_employeeIdentifier_username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_employeeIdentifier_username&quot; equal MatchValue &quot;Get-Hash_employeeIdentifier_username&quot; for file &quot;Get-Hash_employeeIdentifier_username.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="11.6831" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_employeeIdentifier_username.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_employeeIdentifier_username.ps1&quot; does not contain any functions" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="11.7193" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_employeeIdentifier_username.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_employeeIdentifier_username.ps1&quot; has exactly 1 function" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="11.756" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_CommandName&quot; equal Function &quot;Get-Hash_ID_CommandName&quot; for file &quot;Get-Hash_ID_CommandName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_CommandName&quot; equal Function &quot;Get-Hash_ID_CommandName&quot; for file &quot;Get-Hash_ID_CommandName.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_CommandName&quot; equal MatchValue &quot;Get-Hash_ID_CommandName&quot; for file &quot;Get-Hash_ID_CommandName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_CommandName&quot; equal MatchValue &quot;Get-Hash_ID_CommandName&quot; for file &quot;Get-Hash_ID_CommandName.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="11.792" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_CommandName.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_ID_CommandName.ps1&quot; does not contain any functions" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="11.8273" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_CommandName.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_ID_CommandName.ps1&quot; has exactly 1 function" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="11.8644" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_Sudo&quot; equal Function &quot;Get-Hash_ID_Sudo&quot; for file &quot;Get-Hash_ID_Sudo.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_Sudo&quot; equal Function &quot;Get-Hash_ID_Sudo&quot; for file &quot;Get-Hash_ID_Sudo.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_Sudo&quot; equal MatchValue &quot;Get-Hash_ID_Sudo&quot; for file &quot;Get-Hash_ID_Sudo.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_Sudo&quot; equal MatchValue &quot;Get-Hash_ID_Sudo&quot; for file &quot;Get-Hash_ID_Sudo.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="11.8994" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_Sudo.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_ID_Sudo.ps1&quot; does not contain any functions" time="0.0061" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="11.9382" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_Sudo.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_ID_Sudo.ps1&quot; has exactly 1 function" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="11.9754" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_SystemGroupName&quot; equal Function &quot;Get-Hash_ID_SystemGroupName&quot; for file &quot;Get-Hash_ID_SystemGroupName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_SystemGroupName&quot; equal Function &quot;Get-Hash_ID_SystemGroupName&quot; for file &quot;Get-Hash_ID_SystemGroupName.ps1&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_SystemGroupName&quot; equal MatchValue &quot;Get-Hash_ID_SystemGroupName&quot; for file &quot;Get-Hash_ID_SystemGroupName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_SystemGroupName&quot; equal MatchValue &quot;Get-Hash_ID_SystemGroupName&quot; for file &quot;Get-Hash_ID_SystemGroupName.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="12.0137" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_SystemGroupName.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_ID_SystemGroupName.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="12.0559" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_SystemGroupName.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_ID_SystemGroupName.ps1&quot; has exactly 1 function" time="0.0119" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="12.0898" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_Username&quot; equal Function &quot;Get-Hash_ID_Username&quot; for file &quot;Get-Hash_ID_Username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_Username&quot; equal Function &quot;Get-Hash_ID_Username&quot; for file &quot;Get-Hash_ID_Username.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_ID_Username&quot; equal MatchValue &quot;Get-Hash_ID_Username&quot; for file &quot;Get-Hash_ID_Username.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_ID_Username&quot; equal MatchValue &quot;Get-Hash_ID_Username&quot; for file &quot;Get-Hash_ID_Username.ps1&quot;" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="12.1292" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_Username.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_ID_Username.ps1&quot; does not contain any functions" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="12.1679" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_ID_Username.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_ID_Username.ps1&quot; has exactly 1 function" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="12.2053" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemGroupName_ID&quot; equal Function &quot;Get-Hash_SystemGroupName_ID&quot; for file &quot;Get-Hash_SystemGroupName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemGroupName_ID&quot; equal Function &quot;Get-Hash_SystemGroupName_ID&quot; for file &quot;Get-Hash_SystemGroupName_ID.ps1&quot;" time="0.0046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemGroupName_ID&quot; equal MatchValue &quot;Get-Hash_SystemGroupName_ID&quot; for file &quot;Get-Hash_SystemGroupName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemGroupName_ID&quot; equal MatchValue &quot;Get-Hash_SystemGroupName_ID&quot; for file &quot;Get-Hash_SystemGroupName_ID.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="12.2472" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemGroupName_ID.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_SystemGroupName_ID.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="12.2872" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemGroupName_ID.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_SystemGroupName_ID.ps1&quot; has exactly 1 function" time="0.0089" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="12.3248" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_DisplayName&quot; equal Function &quot;Get-Hash_SystemID_DisplayName&quot; for file &quot;Get-Hash_SystemID_DisplayName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_DisplayName&quot; equal Function &quot;Get-Hash_SystemID_DisplayName&quot; for file &quot;Get-Hash_SystemID_DisplayName.ps1&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_DisplayName&quot; equal MatchValue &quot;Get-Hash_SystemID_DisplayName&quot; for file &quot;Get-Hash_SystemID_DisplayName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_DisplayName&quot; equal MatchValue &quot;Get-Hash_SystemID_DisplayName&quot; for file &quot;Get-Hash_SystemID_DisplayName.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="12.3735" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_DisplayName.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_SystemID_DisplayName.ps1&quot; does not contain any functions" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="12.4149" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_DisplayName.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_SystemID_DisplayName.ps1&quot; has exactly 1 function" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="12.4529" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_HostName&quot; equal Function &quot;Get-Hash_SystemID_HostName&quot; for file &quot;Get-Hash_SystemID_HostName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_HostName&quot; equal Function &quot;Get-Hash_SystemID_HostName&quot; for file &quot;Get-Hash_SystemID_HostName.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_HostName&quot; equal MatchValue &quot;Get-Hash_SystemID_HostName&quot; for file &quot;Get-Hash_SystemID_HostName.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_HostName&quot; equal MatchValue &quot;Get-Hash_SystemID_HostName&quot; for file &quot;Get-Hash_SystemID_HostName.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="12.489" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_HostName.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_SystemID_HostName.ps1&quot; does not contain any functions" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="12.5289" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_HostName.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_SystemID_HostName.ps1&quot; has exactly 1 function" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="12.5672" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_OS&quot; equal Function &quot;Get-Hash_SystemID_OS&quot; for file &quot;Get-Hash_SystemID_OS.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_OS&quot; equal Function &quot;Get-Hash_SystemID_OS&quot; for file &quot;Get-Hash_SystemID_OS.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_SystemID_OS&quot; equal MatchValue &quot;Get-Hash_SystemID_OS&quot; for file &quot;Get-Hash_SystemID_OS.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_SystemID_OS&quot; equal MatchValue &quot;Get-Hash_SystemID_OS&quot; for file &quot;Get-Hash_SystemID_OS.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="12.611" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_OS.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_SystemID_OS.ps1&quot; does not contain any functions" time="0.0113" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="12.6556" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_SystemID_OS.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_SystemID_OS.ps1&quot; has exactly 1 function" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="12.6938" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_UserGroupName_ID&quot; equal Function &quot;Get-Hash_UserGroupName_ID&quot; for file &quot;Get-Hash_UserGroupName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_UserGroupName_ID&quot; equal Function &quot;Get-Hash_UserGroupName_ID&quot; for file &quot;Get-Hash_UserGroupName_ID.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_UserGroupName_ID&quot; equal MatchValue &quot;Get-Hash_UserGroupName_ID&quot; for file &quot;Get-Hash_UserGroupName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_UserGroupName_ID&quot; equal MatchValue &quot;Get-Hash_UserGroupName_ID&quot; for file &quot;Get-Hash_UserGroupName_ID.ps1&quot;" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="12.7324" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_UserGroupName_ID.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_UserGroupName_ID.ps1&quot; does not contain any functions" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="12.7741" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_UserGroupName_ID.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_UserGroupName_ID.ps1&quot; has exactly 1 function" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="12.812" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-Hash_UserName_ID&quot; equal Function &quot;Get-Hash_UserName_ID&quot; for file &quot;Get-Hash_UserName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_UserName_ID&quot; equal Function &quot;Get-Hash_UserName_ID&quot; for file &quot;Get-Hash_UserName_ID.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-Hash_UserName_ID&quot; equal MatchValue &quot;Get-Hash_UserName_ID&quot; for file &quot;Get-Hash_UserName_ID.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-Hash_UserName_ID&quot; equal MatchValue &quot;Get-Hash_UserName_ID&quot; for file &quot;Get-Hash_UserName_ID.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="12.852" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_UserName_ID.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-Hash_UserName_ID.ps1&quot; does not contain any functions" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="12.8853" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-Hash_UserName_ID.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-Hash_UserName_ID.ps1&quot; has exactly 1 function" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="12.9241" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCHash&quot; equal Function &quot;Get-JCHash&quot; for file &quot;Get-JCHash.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCHash&quot; equal Function &quot;Get-JCHash&quot; for file &quot;Get-JCHash.ps1&quot;" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCHash&quot; equal MatchValue &quot;Get-JCHash&quot; for file &quot;Get-JCHash.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCHash&quot; equal MatchValue &quot;Get-JCHash&quot; for file &quot;Get-JCHash.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="12.9645" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCHash.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCHash.ps1&quot; does not contain any functions" time="0.0103" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="13" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCHash.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCHash.ps1&quot; has exactly 1 function" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="13.0377" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-FunctionReport&quot; equal Function &quot;Get-FunctionReport&quot; for file &quot;Get-FunctionReport.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-FunctionReport&quot; equal Function &quot;Get-FunctionReport&quot; for file &quot;Get-FunctionReport.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-FunctionReport&quot; equal MatchValue &quot;Get-FunctionReport&quot; for file &quot;Get-FunctionReport.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-FunctionReport&quot; equal MatchValue &quot;Get-FunctionReport&quot; for file &quot;Get-FunctionReport.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="13.0727" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-FunctionReport.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-FunctionReport.ps1&quot; does not contain any functions" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="13.1104" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-FunctionReport.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-FunctionReport.ps1&quot; has exactly 1 function" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="13.152" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCColorConfig&quot; equal Function &quot;Get-JCColorConfig&quot; for file &quot;Get-JCColorConfig.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCColorConfig&quot; equal Function &quot;Get-JCColorConfig&quot; for file &quot;Get-JCColorConfig.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCColorConfig&quot; equal MatchValue &quot;Get-JCColorConfig&quot; for file &quot;Get-JCColorConfig.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCColorConfig&quot; equal MatchValue &quot;Get-JCColorConfig&quot; for file &quot;Get-JCColorConfig.ps1&quot;" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="13.1897" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCColorConfig.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCColorConfig.ps1&quot; does not contain any functions" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="13.2286" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCColorConfig.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCColorConfig.ps1&quot; has exactly 1 function" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="13.2682" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCObject&quot; equal Function &quot;Get-JCObject&quot; for file &quot;Get-JCObject.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCObject&quot; equal Function &quot;Get-JCObject&quot; for file &quot;Get-JCObject.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCObject&quot; equal MatchValue &quot;Get-JCObject&quot; for file &quot;Get-JCObject.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCObject&quot; equal MatchValue &quot;Get-JCObject&quot; for file &quot;Get-JCObject.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="13.3038" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCObject.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCObject.ps1&quot; does not contain any functions" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="13.3397" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCObject.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCObject.ps1&quot; has exactly 1 function" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="13.372" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCType&quot; equal Function &quot;Get-JCType&quot; for file &quot;Get-JCType.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCType&quot; equal Function &quot;Get-JCType&quot; for file &quot;Get-JCType.ps1&quot;" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCType&quot; equal MatchValue &quot;Get-JCType&quot; for file &quot;Get-JCType.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCType&quot; equal MatchValue &quot;Get-JCType&quot; for file &quot;Get-JCType.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="13.4064" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCType.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCType.ps1&quot; does not contain any functions" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="13.4475" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCType.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCType.ps1&quot; has exactly 1 function" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="13.4891" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-JCUserAgent&quot; equal Function &quot;Get-JCUserAgent&quot; for file &quot;Get-JCUserAgent.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUserAgent&quot; equal Function &quot;Get-JCUserAgent&quot; for file &quot;Get-JCUserAgent.ps1&quot;" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-JCUserAgent&quot; equal MatchValue &quot;Get-JCUserAgent&quot; for file &quot;Get-JCUserAgent.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-JCUserAgent&quot; equal MatchValue &quot;Get-JCUserAgent&quot; for file &quot;Get-JCUserAgent.ps1&quot;" time="0.004" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="13.5264" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-JCUserAgent.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-JCUserAgent.ps1&quot; does not contain any functions" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="13.5618" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-JCUserAgent.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-JCUserAgent.ps1&quot; has exactly 1 function" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="13.5933" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Hide-ObjectProperty&quot; equal Function &quot;Hide-ObjectProperty&quot; for file &quot;Hide-ObjectProperty.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Hide-ObjectProperty&quot; equal Function &quot;Hide-ObjectProperty&quot; for file &quot;Hide-ObjectProperty.ps1&quot;" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Hide-ObjectProperty&quot; equal MatchValue &quot;Hide-ObjectProperty&quot; for file &quot;Hide-ObjectProperty.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Hide-ObjectProperty&quot; equal MatchValue &quot;Hide-ObjectProperty&quot; for file &quot;Hide-ObjectProperty.ps1&quot;" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="13.631" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Hide-ObjectProperty.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Hide-ObjectProperty.ps1&quot; does not contain any functions" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="13.6732" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Hide-ObjectProperty.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Hide-ObjectProperty.ps1&quot; has exactly 1 function" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="13.7092" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Invoke-JCApi&quot; equal Function &quot;Invoke-JCApi&quot; for file &quot;Invoke-JCApi.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCApi&quot; equal Function &quot;Invoke-JCApi&quot; for file &quot;Invoke-JCApi.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Invoke-JCApi&quot; equal MatchValue &quot;Invoke-JCApi&quot; for file &quot;Invoke-JCApi.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCApi&quot; equal MatchValue &quot;Invoke-JCApi&quot; for file &quot;Invoke-JCApi.ps1&quot;" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="13.7461" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCApi.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Invoke-JCApi.ps1&quot; does not contain any functions" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="13.7854" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCApi.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Invoke-JCApi.ps1&quot; has exactly 1 function" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="13.8257" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-DynamicParameter&quot; equal Function &quot;New-DynamicParameter&quot; for file &quot;New-DynamicParameter.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-DynamicParameter&quot; equal Function &quot;New-DynamicParameter&quot; for file &quot;New-DynamicParameter.ps1&quot;" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-DynamicParameter&quot; equal MatchValue &quot;New-DynamicParameter&quot; for file &quot;New-DynamicParameter.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-DynamicParameter&quot; equal MatchValue &quot;New-DynamicParameter&quot; for file &quot;New-DynamicParameter.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="13.8639" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-DynamicParameter.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-DynamicParameter.ps1&quot; does not contain any functions" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="13.9047" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-DynamicParameter.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-DynamicParameter.ps1&quot; has exactly 1 function" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="13.9434" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;New-JCCommandFromURL&quot; equal Function &quot;New-JCCommandFromURL&quot; for file &quot;New-JCCommandFromURL.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCCommandFromURL&quot; equal Function &quot;New-JCCommandFromURL&quot; for file &quot;New-JCCommandFromURL.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;New-JCCommandFromURL&quot; equal MatchValue &quot;New-JCCommandFromURL&quot; for file &quot;New-JCCommandFromURL.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;New-JCCommandFromURL&quot; equal MatchValue &quot;New-JCCommandFromURL&quot; for file &quot;New-JCCommandFromURL.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="13.9819" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;New-JCCommandFromURL.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;New-JCCommandFromURL.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="14.0242" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;New-JCCommandFromURL.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;New-JCCommandFromURL.ps1&quot; has exactly 1 function" time="0.0112" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="14.0621" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Out-DebugParameter&quot; equal Function &quot;Out-DebugParameter&quot; for file &quot;Out-DebugParameter.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Out-DebugParameter&quot; equal Function &quot;Out-DebugParameter&quot; for file &quot;Out-DebugParameter.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Out-DebugParameter&quot; equal MatchValue &quot;Out-DebugParameter&quot; for file &quot;Out-DebugParameter.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Out-DebugParameter&quot; equal MatchValue &quot;Out-DebugParameter&quot; for file &quot;Out-DebugParameter.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="14.1009" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Out-DebugParameter.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Out-DebugParameter.ps1&quot; does not contain any functions" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="14.1464" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Out-DebugParameter.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Out-DebugParameter.ps1&quot; has exactly 1 function" time="0.0091" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="14.1853" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Write-Rainbow&quot; equal Function &quot;Write-Rainbow&quot; for file &quot;Write-Rainbow.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Write-Rainbow&quot; equal Function &quot;Write-Rainbow&quot; for file &quot;Write-Rainbow.ps1&quot;" time="0.0033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Write-Rainbow&quot; equal MatchValue &quot;Write-Rainbow&quot; for file &quot;Write-Rainbow.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Write-Rainbow&quot; equal MatchValue &quot;Write-Rainbow&quot; for file &quot;Write-Rainbow.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="14.2265" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Write-Rainbow.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Write-Rainbow.ps1&quot; does not contain any functions" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="14.2669" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Write-Rainbow.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Write-Rainbow.ps1&quot; has exactly 1 function" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="14.3055" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Get-DynamicParamRadiusServer&quot; equal Function &quot;Get-DynamicParamRadiusServer&quot; for file &quot;Get-DynamicParamRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-DynamicParamRadiusServer&quot; equal Function &quot;Get-DynamicParamRadiusServer&quot; for file &quot;Get-DynamicParamRadiusServer.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Get-DynamicParamRadiusServer&quot; equal MatchValue &quot;Get-DynamicParamRadiusServer&quot; for file &quot;Get-DynamicParamRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Get-DynamicParamRadiusServer&quot; equal MatchValue &quot;Get-DynamicParamRadiusServer&quot; for file &quot;Get-DynamicParamRadiusServer.ps1&quot;" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="14.3481" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Get-DynamicParamRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Get-DynamicParamRadiusServer.ps1&quot; does not contain any functions" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="14.3853" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Get-DynamicParamRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Get-DynamicParamRadiusServer.ps1&quot; has exactly 1 function" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test that the file name matches the function name" executed="True" result="Success" success="True" time="14.4243" asserts="0" description="Function Format Tests.Test that the file name matches the function name">
                <results>
                  <test-case description="When FileBaseName &quot;Invoke-JCRadiusServer&quot; equal Function &quot;Invoke-JCRadiusServer&quot; for file &quot;Invoke-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCRadiusServer&quot; equal Function &quot;Invoke-JCRadiusServer&quot; for file &quot;Invoke-JCRadiusServer.ps1&quot;" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="When FileBaseName &quot;Invoke-JCRadiusServer&quot; equal MatchValue &quot;Invoke-JCRadiusServer&quot; for file &quot;Invoke-JCRadiusServer.ps1&quot;" name="Function Format Tests.Test that the file name matches the function name.When FileBaseName &quot;Invoke-JCRadiusServer&quot; equal MatchValue &quot;Invoke-JCRadiusServer&quot; for file &quot;Invoke-JCRadiusServer.ps1&quot;" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for missing information" executed="True" result="Failure" success="False" time="14.4587" asserts="0" description="Function Format Tests.Test for missing information">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCRadiusServer.ps1&quot; does not contain any functions" name="Function Format Tests.Test for missing information.When FileName &quot;Invoke-JCRadiusServer.ps1&quot; does not contain any functions" time="0.0061" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.
at $_.Function | Should -Not -BeNullOrEmpty, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:15</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for multiple functions per file" executed="True" result="Failure" success="False" time="14.4924" asserts="0" description="Function Format Tests.Test for multiple functions per file">
                <results>
                  <test-case description="When FileName &quot;Invoke-JCRadiusServer.ps1&quot; has exactly 1 function" name="Function Format Tests.Test for multiple functions per file.When FileName &quot;Invoke-JCRadiusServer.ps1&quot; has exactly 1 function" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected exactly 1, but got 0.
at ($_.Function | Measure-Object).Count | Should -BeExactly 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:20</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Function Format Tests.Test for duplicate functions" executed="True" result="Failure" success="False" time="16.9258" asserts="0" description="Function Format Tests.Test for duplicate functions">
                <results>
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCAssociation&quot;" time="0.0131" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCCommandTarget&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCSystemGroupMember&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCSystemUser&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Add-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Add-JCUserGroupMember&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Connect-JCOnline&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Copy-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Copy-JCAssociation&quot;" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Format-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Format-JCAssociation&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-DynamicParamAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-DynamicParamAssociation&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-FunctionReport&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-FunctionReport&quot;" time="0.0122" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_Email_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_Email_ID&quot;" time="0.0093" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_Email_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_Email_Username&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_ID_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_ID_Username&quot;" time="0.0092" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" time="0.0133" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" time="0.0089" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-Hash_UserName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-Hash_UserName_ID&quot;" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCAssociation&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCBackup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCBackup&quot;" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCColorConfig&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCColorConfig&quot;" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCCommand&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCCommandResult&quot;" time="0.0141" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCCommandTarget&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCCommonParameters&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCCommonParameters&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCEvent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCEvent&quot;" time="0.0111" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCGroup&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCHash&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCHash&quot;" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCObject&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCObject&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCOrganization&quot;" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCPolicy&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCPolicy&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCPolicyResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCPolicyResult&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCRadiusServer&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCSystem&quot;" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCSystemGroupMember&quot;" time="0.0121" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCSystemInsights&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCSystemInsights&quot;" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCSystemUser&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCType&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCType&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCUser&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCUserAgent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCUserAgent&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-JCUserGroupMember&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-ModuleBanner&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-ModuleBanner&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Get-ModuleChangeLog&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Get-ModuleChangeLog&quot;" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Hide-ObjectProperty&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Hide-ObjectProperty&quot;" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Import-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Import-JCCommand&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Import-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Import-JCUsersFromCSV&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Invoke-JCApi&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Invoke-JCApi&quot;" time="0.0108" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Invoke-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Invoke-JCAssociation&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Invoke-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Invoke-JCCommand&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Invoke-JCDeployment&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Invoke-JCDeployment&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Invoke-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Invoke-JCRadiusServer&quot;" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;New-DynamicParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-DynamicParameter&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;New-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCCommand&quot;" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;New-JCCommandFromURL&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCCommandFromURL&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;New-JCDeploymentTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCDeploymentTemplate&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;New-JCImportTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCImportTemplate&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;New-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCRadiusServer&quot;" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;New-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCSystemGroup&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;New-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCUser&quot;" time="0.0139" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;New-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;New-JCUserGroup&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Out-DebugParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Out-DebugParameter&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCAssociation&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCCommand&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCCommandResult&quot;" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCCommandTarget&quot;" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" time="0.0094" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCRadiusServer&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCSystem&quot;" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCSystemGroup&quot;" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" time="0.0088" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCSystemUser&quot;" time="0.0115" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCUser&quot;" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCUserGroup&quot;" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Remove-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Remove-JCUserGroupMember&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Send-JCPasswordReset&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Send-JCPasswordReset&quot;" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCCommand&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCOrganization&quot;" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCRadiusServer&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCSystem&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCSystemUser&quot;" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCUser&quot;" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" time="0.0114" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Update-JCModule&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Update-JCModule&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Update-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Update-JCUsersFromCSV&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple files with the same name exist for &quot;Write-Rainbow&quot;" name="Function Format Tests.Test for duplicate functions.When multiple files with the same name exist for &quot;Write-Rainbow&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:36</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCAssociation&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCCommandTarget&quot;" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCSystemGroupMember&quot;" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCSystemUser&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Add-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Add-JCUserGroupMember&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Connect-JCOnline&quot;" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Copy-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Copy-JCAssociation&quot;" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Format-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Format-JCAssociation&quot;" time="0.0111" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-DynamicParamAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-DynamicParamAssociation&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-FunctionReport&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-FunctionReport&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_Email_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_Email_ID&quot;" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_Email_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_Email_Username&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" time="0.0088" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" time="0.0116" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_ID_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_ID_Username&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" time="0.0092" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" time="0.0085" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-Hash_UserName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-Hash_UserName_ID&quot;" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCAssociation&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCBackup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCBackup&quot;" time="0.0104" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCColorConfig&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCColorConfig&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCCommand&quot;" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCCommandResult&quot;" time="0.0124" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCCommandTarget&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCCommonParameters&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCCommonParameters&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCEvent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCEvent&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCGroup&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCHash&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCHash&quot;" time="0.0096" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCObject&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCObject&quot;" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCOrganization&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCPolicy&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCPolicy&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCPolicyResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCPolicyResult&quot;" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" time="0.0103" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCRadiusServer&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCSystem&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCSystemGroupMember&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCSystemInsights&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCSystemInsights&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCSystemUser&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCType&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCType&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCUser&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCUserAgent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCUserAgent&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-JCUserGroupMember&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-ModuleBanner&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-ModuleBanner&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Get-ModuleChangeLog&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Get-ModuleChangeLog&quot;" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Hide-ObjectProperty&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Hide-ObjectProperty&quot;" time="0.0104" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Import-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Import-JCCommand&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Import-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Import-JCUsersFromCSV&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Invoke-JCApi&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Invoke-JCApi&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Invoke-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Invoke-JCAssociation&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Invoke-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Invoke-JCCommand&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Invoke-JCDeployment&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Invoke-JCDeployment&quot;" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Invoke-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Invoke-JCRadiusServer&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;New-DynamicParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-DynamicParameter&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCCommand&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCCommandFromURL&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCCommandFromURL&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCDeploymentTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCDeploymentTemplate&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCImportTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCImportTemplate&quot;" time="0.0122" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCRadiusServer&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCSystemGroup&quot;" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCUser&quot;" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;New-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;New-JCUserGroup&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Out-DebugParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Out-DebugParameter&quot;" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCAssociation&quot;" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCCommand&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCCommandResult&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCCommandTarget&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCRadiusServer&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCSystem&quot;" time="0.0113" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCSystemGroup&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCSystemUser&quot;" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCUser&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCUserGroup&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Remove-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Remove-JCUserGroupMember&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Send-JCPasswordReset&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Send-JCPasswordReset&quot;" time="0.0091" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCCommand&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCOrganization&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCRadiusServer&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCSystem&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCSystemUser&quot;" time="0.0111" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCUser&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Update-JCModule&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Update-JCModule&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Update-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Update-JCUsersFromCSV&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple functions with the same name exist for &quot;Write-Rainbow&quot;" name="Function Format Tests.Test for duplicate functions.When multiple functions with the same name exist for &quot;Write-Rainbow&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:41</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCAssociation&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCCommandTarget&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCRadiusReplyAttribute&quot;" time="0.0089" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCSystemGroupMember&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCSystemUser&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Add-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Add-JCUserGroupMember&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Connect-JCOnline&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Connect-JCOnline&quot;" time="0.0136" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Copy-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Copy-JCAssociation&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Format-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Format-JCAssociation&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-DynamicParamAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-DynamicParamAssociation&quot;" time="0.0091" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-DynamicParamRadiusServer&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-FunctionReport&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-FunctionReport&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Name&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Trigger&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_CommandID_Type&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_Email_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_Email_ID&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_Email_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_Email_Username&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_employeeIdentifier_username&quot;" time="0.0099" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_CommandName&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_Sudo&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_SystemGroupName&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_Username&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_ID_Username&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemGroupName_ID&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_DisplayName&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_HostName&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_SystemID_OS&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_UserGroupName_ID&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_UserName_ID&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-Hash_UserName_ID&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCAssociation&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCBackup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCBackup&quot;" time="0.0096" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCColorConfig&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCColorConfig&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommand&quot;" time="0.0063" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommandResult&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommandTarget&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommonParameters&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCCommonParameters&quot;" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCEvent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCEvent&quot;" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCGroup&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCHash&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCHash&quot;" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCObject&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCObject&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCOrganization&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicy&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicy&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyResult&quot;" time="0.0111" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyTargetGroup&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCPolicyTargetSystem&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCRadiusReplyAttribute&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCRadiusServer&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystem&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemGroupMember&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemInsights&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemInsights&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCSystemUser&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCType&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCType&quot;" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCUser&quot;" time="0.0105" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCUserAgent&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCUserAgent&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-JCUserGroupMember&quot;" time="0.0088" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-ModuleBanner&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-ModuleBanner&quot;" time="0.0111" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Get-ModuleChangeLog&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Get-ModuleChangeLog&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Hide-ObjectProperty&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Hide-ObjectProperty&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Import-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Import-JCCommand&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Import-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Import-JCUsersFromCSV&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCApi&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCApi&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCAssociation&quot;" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCCommand&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCDeployment&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCDeployment&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Invoke-JCRadiusServer&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-DynamicParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-DynamicParameter&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCCommand&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCCommandFromURL&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCCommandFromURL&quot;" time="0.0119" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCDeploymentTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCDeploymentTemplate&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCImportTemplate&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCImportTemplate&quot;" time="0.0091" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCRadiusServer&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCSystemGroup&quot;" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCUser&quot;" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;New-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;New-JCUserGroup&quot;" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Out-DebugParameter&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Out-DebugParameter&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCAssociation&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCAssociation&quot;" time="0.0077" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommand&quot;" time="0.008" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommandResult&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommandResult&quot;" time="0.0087" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommandTarget&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCCommandTarget&quot;" time="0.0086" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCRadiusReplyAttribute&quot;" time="0.011" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCRadiusServer&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystem&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemGroup&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemGroupMember&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCSystemUser&quot;" time="0.0091" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUser&quot;" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUserGroup&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUserGroup&quot;" time="0.0093" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUserGroupMember&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Remove-JCUserGroupMember&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Send-JCPasswordReset&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Send-JCPasswordReset&quot;" time="0.0096" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCCommand&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCCommand&quot;" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCOrganization&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCOrganization&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCRadiusReplyAttribute&quot;" time="0.0122" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCRadiusServer&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCRadiusServer&quot;" time="0.0071" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCSystem&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCSystem&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCSystemUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCSystemUser&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCUser&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCUser&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Set-JCUserGroupLDAP&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Update-JCModule&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Update-JCModule&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Update-JCUsersFromCSV&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Update-JCUsersFromCSV&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="When multiple MatchValues of functions with the same name exist for &quot;Write-Rainbow&quot;" name="Function Format Tests.Test for duplicate functions.When multiple MatchValues of functions with the same name exist for &quot;Write-Rainbow&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1, but got 0.
at $_.Count | Should -Be 1, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\FunctionFiles.Tests.ps1:46</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\HelpFiles.Tests.ps1" executed="True" result="Failure" success="False" time="0.1534" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\HelpFiles.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Help File Tests" executed="True" result="Failure" success="False" time="0.114" asserts="0" description="Help File Tests">
            <results>
              <test-suite type="TestFixture" name="Help File Tests.Validating help file fields have been populated" executed="True" result="Success" success="True" time="0" asserts="0" description="Help File Tests.Validating help file fields have been populated">
                <results />
              </test-suite>
              <test-suite type="TestFixture" name="Help File Tests.Validating that the ModuleBanner and ModuleChangelog fields have been populated" executed="True" result="Failure" success="False" time="0.0879" asserts="0" description="Help File Tests.Validating that the ModuleBanner and ModuleChangelog fields have been populated">
                <results>
                  <test-case description="The file &quot;D:\a\1\s\PowerShell\ModuleBanner.md&quot; needs to be populated on line number &quot;10&quot; where &quot;{{Fill in the Banner Current}}&quot; exists." name="Help File Tests.Validating that the ModuleBanner and ModuleChangelog fields have been populated.The file &quot;D:\a\1\s\PowerShell\ModuleBanner.md&quot; needs to be populated on line number &quot;10&quot; where &quot;{{Fill in the Banner Current}}&quot; exists." time="0.0166" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="The file &quot;D:\a\1\s\PowerShell\ModuleBanner.md&quot; needs to be populated on line number &quot;16&quot; where &quot;{{Fill in the Banner Old}}&quot; exists." name="Help File Tests.Validating that the ModuleBanner and ModuleChangelog fields have been populated.The file &quot;D:\a\1\s\PowerShell\ModuleBanner.md&quot; needs to be populated on line number &quot;16&quot; where &quot;{{Fill in the Banner Old}}&quot; exists." time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="The file &quot;D:\a\1\s\PowerShell\ModuleChangelog.md&quot; needs to be populated on line number &quot;8&quot; where &quot;{{Fill in the Release Notes}}&quot; exists." name="Help File Tests.Validating that the ModuleBanner and ModuleChangelog fields have been populated.The file &quot;D:\a\1\s\PowerShell\ModuleChangelog.md&quot; needs to be populated on line number &quot;8&quot; where &quot;{{Fill in the Release Notes}}&quot; exists." time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="The file &quot;D:\a\1\s\PowerShell\ModuleChangelog.md&quot; needs to be populated on line number &quot;13&quot; where &quot;{{Fill in the Features}}&quot; exists." name="Help File Tests.Validating that the ModuleBanner and ModuleChangelog fields have been populated.The file &quot;D:\a\1\s\PowerShell\ModuleChangelog.md&quot; needs to be populated on line number &quot;13&quot; where &quot;{{Fill in the Features}}&quot; exists." time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="The file &quot;D:\a\1\s\PowerShell\ModuleChangelog.md&quot; needs to be populated on line number &quot;17&quot; where &quot;{{Fill in the Improvements}}&quot; exists." name="Help File Tests.Validating that the ModuleBanner and ModuleChangelog fields have been populated.The file &quot;D:\a\1\s\PowerShell\ModuleChangelog.md&quot; needs to be populated on line number &quot;17&quot; where &quot;{{Fill in the Improvements}}&quot; exists." time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="The file &quot;D:\a\1\s\PowerShell\ModuleChangelog.md&quot; needs to be populated on line number &quot;21&quot; where &quot;{{Fill in the Bug Fixes}}&quot; exists." name="Help File Tests.Validating that the ModuleBanner and ModuleChangelog fields have been populated.The file &quot;D:\a\1\s\PowerShell\ModuleChangelog.md&quot; needs to be populated on line number &quot;21&quot; where &quot;{{Fill in the Bug Fixes}}&quot; exists." time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\moduleValidation.tests.ps1" executed="True" result="Failure" success="False" time="0.0488" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\moduleValidation.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module Manifest Tests" executed="True" result="Failure" success="False" time="0.0425" asserts="0" description="Module Manifest Tests">
            <results>
              <test-case description="Passes Test-ModuleManifest" name="Module Manifest Tests.Passes Test-ModuleManifest" time="0.0169" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>ActionPreferenceStopException: The running command stopped because the preference variable "ErrorActionPreference" or common parameter is set to Stop: Legacy Should syntax (without dashes) is not supported in Pester 5. Please refer to migration guide at: https://pester.dev/docs/migrations/v3-to-v4
ParameterBindingException: Cannot retrieve the dynamic parameters for the cmdlet. The running command stopped because the preference variable "ErrorActionPreference" or common parameter is set to Stop: Legacy Should syntax (without dashes) is not supported in Pester 5. Please refer to migration guide at: https://pester.dev/docs/migrations/v3-to-v4</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\moduleValidation.tests.ps1:3</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1" executed="True" result="Failure" success="False" time="1.0118" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Pester Files Tests" executed="True" result="Failure" success="False" time="0.9152" asserts="0" description="Pester Files Tests">
            <results>
              <test-suite type="TestFixture" name="Pester Files Tests.Pester Test Files Validation" executed="True" result="Failure" success="False" time="0.892" asserts="0" description="Pester Files Tests.Pester Test Files Validation">
                <results>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Add-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Add-JCAssociation.Tests.ps1&quot;" time="0.01" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Add-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Add-JCAssociation.Tests.ps1&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Copy-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Copy-JCAssociation.Tests.ps1&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Copy-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Copy-JCAssociation.Tests.ps1&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Get-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Get-JCAssociation.Tests.ps1&quot;" time="0.0058" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Get-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Get-JCAssociation.Tests.ps1&quot;" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Remove-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Remove-JCAssociation.Tests.ps1&quot;" time="0.0119" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Remove-JCAssociation.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Association\Remove-JCAssociation.Tests.ps1&quot;" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Connect-JCOnline.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Connect-JCOnline.Tests.ps1&quot;" time="0.0057" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Connect-JCOnline.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Connect-JCOnline.Tests.ps1&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Get-JCOrganization.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Get-JCOrganization.Tests.ps1&quot;" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Get-JCOrganization.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Get-JCOrganization.Tests.ps1&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Set-JCOrganization.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Set-JCOrganization.Tests.ps1&quot;" time="0.0058" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Set-JCOrganization.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Set-JCOrganization.Tests.ps1&quot;" time="0.009" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Update-JCModule.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Update-JCModule.Tests.ps1&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Update-JCModule.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Authentication\Update-JCModule.Tests.ps1&quot;" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Get-JCCommandResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Get-JCCommandResult.Tests.ps1&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Get-JCCommandResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Get-JCCommandResult.Tests.ps1&quot;" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Remove-JCCommandResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Remove-JCCommandResult.Tests.ps1&quot;" time="0.0058" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Remove-JCCommandResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandResults\Remove-JCCommandResult.Tests.ps1&quot;" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.Tests.ps1&quot;" time="0.0113" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.Tests.ps1&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.Tests.ps1&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.Tests.ps1&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.Tests.ps1&quot;" time="0.0059" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.Tests.ps1&quot;" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Get-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Get-JCCommand.Tests.ps1&quot;" time="0.006" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Get-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Get-JCCommand.Tests.ps1&quot;" time="0.0072" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Import-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Import-JCCommand.Tests.ps1&quot;" time="0.0058" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Import-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Import-JCCommand.Tests.ps1&quot;" time="0.0084" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCCommand.Tests.ps1&quot;" time="0.0055" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCCommand.Tests.ps1&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCDeployment.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCDeployment.Tests.ps1&quot;" time="0.006" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCDeployment.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Invoke-JCDeployment.Tests.ps1&quot;" time="0.0139" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCCommand.Tests.ps1&quot;" time="0.0067" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCCommand.Tests.ps1&quot;" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCDeploymentTemplate.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCDeploymentTemplate.Tests.ps1&quot;" time="0.0053" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCDeploymentTemplate.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\New-JCDeploymentTemplate.Tests.ps1&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Remove-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Remove-JCCommand.Tests.ps1&quot;" time="0.0056" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Remove-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Remove-JCCommand.Tests.ps1&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Set-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Set-JCCommand.Tests.ps1&quot;" time="0.0058" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Set-JCCommand.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Commands\Set-JCCommand.Tests.ps1&quot;" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1&quot;" time="0.0059" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.Tests.ps1&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.Tests.ps1&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.Tests.ps1&quot;" time="0.0059" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.Tests.ps1&quot;" time="0.0122" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\New-JCSystemGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\New-JCSystemGroup.Tests.ps1&quot;" time="0.0054" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\New-JCSystemGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\New-JCSystemGroup.Tests.ps1&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.Tests.ps1&quot;" time="0.0062" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.Tests.ps1&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.Tests.ps1&quot;" time="0.0053" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.Tests.ps1&quot;" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.Tests.ps1&quot;" time="0.0046" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.Tests.ps1&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.Tests.ps1&quot;" time="0.0057" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.Tests.ps1&quot;" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\New-JCUserGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\New-JCUserGroup.Tests.ps1&quot;" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\New-JCUserGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\New-JCUserGroup.Tests.ps1&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroup.Tests.ps1&quot;" time="0.0059" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroup.Tests.ps1&quot;" time="0.0175" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.Tests.ps1&quot;" time="0.0054" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.Tests.ps1&quot;" time="0.0078" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.Tests.ps1&quot;" time="0.0053" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.Tests.ps1&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\Get-JCGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\Get-JCGroup.Tests.ps1&quot;" time="0.0051" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\Get-JCGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Groups\Get-JCGroup.Tests.ps1&quot;" time="0.0061" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.Tests.ps1&quot;" time="0.0055" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.Tests.ps1&quot;" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.Tests.ps1&quot;" time="0.0049" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.Tests.ps1&quot;" time="0.0074" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.Tests.ps1&quot;" time="0.005" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.Tests.ps1&quot;" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\Get-JCPolicy.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\Get-JCPolicy.Tests.ps1&quot;" time="0.0057" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\Get-JCPolicy.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Policies\Get-JCPolicy.Tests.ps1&quot;" time="0.0099" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0052" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0054" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0066" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1&quot;" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1&quot;" time="0.0049" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1&quot;" time="0.0062" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0047" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0069" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1&quot;" time="0.0054" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1&quot;" time="0.0063" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0059" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.Tests.ps1&quot;" time="0.0099" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1&quot;" time="0.0053" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1&quot;" time="0.0068" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystem.Tests.ps1&quot;" time="0.0056" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystem.Tests.ps1&quot;" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1&quot;" time="0.0049" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1&quot;" time="0.0073" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Remove-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Remove-JCSystem.Tests.ps1&quot;" time="0.0051" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Remove-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Remove-JCSystem.Tests.ps1&quot;" time="0.0061" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Set-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Set-JCSystem.Tests.ps1&quot;" time="0.0054" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Set-JCSystem.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Systems\Set-JCSystem.Tests.ps1&quot;" time="0.0062" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Add-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Add-JCSystemUser.Tests.ps1&quot;" time="0.0052" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Add-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Add-JCSystemUser.Tests.ps1&quot;" time="0.0062" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Get-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Get-JCSystemUser.Tests.ps1&quot;" time="0.0047" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Get-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Get-JCSystemUser.Tests.ps1&quot;" time="0.0109" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Remove-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Remove-JCSystemUser.Tests.ps1&quot;" time="0.0055" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Remove-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Remove-JCSystemUser.Tests.ps1&quot;" time="0.0063" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Set-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Set-JCSystemUser.Tests.ps1&quot;" time="0.0056" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Set-JCSystemUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\SystemUsers\Set-JCSystemUser.Tests.ps1&quot;" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Get-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Get-JCUser.Tests.ps1&quot;" time="0.0051" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Get-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Get-JCUser.Tests.ps1&quot;" time="0.0065" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\New-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\New-JCUser.Tests.ps1&quot;" time="0.0059" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\New-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\New-JCUser.Tests.ps1&quot;" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Remove-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Remove-JCUser.Tests.ps1&quot;" time="0.005" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Remove-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Remove-JCUser.Tests.ps1&quot;" time="0.0063" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Set-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Set-JCUser.Tests.ps1&quot;" time="0.0057" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Set-JCUser.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Users\Set-JCUser.Tests.ps1&quot;" time="0.0063" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.Tests.ps1&quot;" time="0.0053" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.Tests.ps1&quot;" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.Tests.ps1&quot;" time="0.0079" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.Tests.ps1&quot;" time="0.0062" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.Tests.ps1&quot;" time="0.0057" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.Tests.ps1&quot;" time="0.006" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Get-JCBackup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Get-JCBackup.Tests.ps1&quot;" time="0.0048" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Get-JCBackup.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Get-JCBackup.Tests.ps1&quot;" time="0.0064" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Send-JCPasswordReset.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file exists for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Send-JCPasswordReset.Tests.ps1&quot;" time="0.0049" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ArgumentNullException: Value cannot be null. (Parameter 'The provided Path argument was null or an empty collection.')</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, D:\a\1\s\PowerShell\JumpCloud Module\Tests\ModuleValidation\PesterFiles.Tests.ps1:9</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Send-JCPasswordReset.Tests.ps1&quot;" name="Pester Files Tests.Pester Test Files Validation.Validating Pester test file has been populated for &quot;D:\a\1\s\PowerShell\JumpCloud Module/Tests\Public\Utilities\Send-JCPasswordReset.Tests.ps1&quot;" time="0.0063" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Copy-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Copy-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Format-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Format-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Get-DynamicParamAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0031" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Get-DynamicParamAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Invoke-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Association\Invoke-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\Invoke-JCAssociation.tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\Invoke-JCAssociation.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\New-JCAssociation.tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\New-JCAssociation.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\Remove-JCAssociation.tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Associations\Remove-JCAssociation.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-GitHubModuleInfo.Tests.ps1" executed="True" result="Success" success="True" time="0.0026" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-GitHubModuleInfo.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-ModuleBanner.Tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-ModuleBanner.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-ModuleChangeLog.Tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\Authentication\Get-ModuleChangeLog.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\DynamicParameters\Get-JCCommonParameters.Tests.ps1" executed="True" result="Success" success="True" time="1.4616" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\DynamicParameters\Get-JCCommonParameters.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Test-JCCommonParameters tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Test-JCCommonParameters tests">
            <results>
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;application&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;application&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;application&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;application&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;application&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;application&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;command&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;command&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;command&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;command&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;command&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;command&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;policy&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;policy&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;policy&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;policy&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;policy&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;policy&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;system&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;system&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;system&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;system&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;system&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;system&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;get&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;user&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;user&quot; should return a parameter called &quot;Limit&quot; with a value of &quot;100&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;user&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;user&quot; should return a parameter called &quot;Skip&quot; with a value of &quot;0&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;get&quot; and type of &quot;user&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;get&quot; and type of &quot;user&quot; should return a parameter called &quot;Paginate&quot; with a value of &quot;True&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;application&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;application&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;command&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;command&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;policy&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;policy&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;system&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;system&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;add&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;add&quot; and type of &quot;user&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;add&quot; and type of &quot;user&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;application&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;application&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;command&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;command&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;policy&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;policy&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;system&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;system&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;new&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;new&quot; and type of &quot;user&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;new&quot; and type of &quot;user&quot; should return a parameter called &quot;Name&quot; with a value of &quot;TestName&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;application&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;application&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;command&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;command&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;policy&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;policy&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;system&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;system&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;remove&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;remove&quot; and type of &quot;user&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;remove&quot; and type of &quot;user&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;application&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;application&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;command&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;command&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;policy&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;policy&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;system&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;system&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;copy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;copy&quot; and type of &quot;user&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;copy&quot; and type of &quot;user&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;application&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;application&quot; should return a parameter called &quot;Type&quot; with a value of &quot;application&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;application&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;application&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;command&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;command&quot; should return a parameter called &quot;Type&quot; with a value of &quot;command&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;command&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;command&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Type&quot; with a value of &quot;g_suite&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;g_suite&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;ldap_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;ldap_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Type&quot; with a value of &quot;office_365&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;office_365&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;policy&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;policy&quot; should return a parameter called &quot;Type&quot; with a value of &quot;policy&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;policy&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;policy&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Type&quot; with a value of &quot;radius_server&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;radius_server&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;system_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;system&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;system&quot; should return a parameter called &quot;Type&quot; with a value of &quot;system&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;system&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;system&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user_group&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;user_group&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;user&quot; should return a parameter called &quot;Action&quot; with a value of &quot;set&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;user&quot; should return a parameter called &quot;Type&quot; with a value of &quot;user&quot;." time="0" asserts="0" success="False" />
              <test-case description="JCCommonParameters with action of &quot;set&quot; and type of &quot;user&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." name="Test-JCCommonParameters tests.JCCommonParameters with action of &quot;set&quot; and type of &quot;user&quot; should return a parameter called &quot;Id&quot; with a value of &quot;1234&quot;." time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Name.tests.ps1" executed="True" result="Success" success="True" time="0.003" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Name.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Trigger.tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Trigger.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Type.tests.ps1" executed="True" result="Success" success="True" time="0.0035" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_CommandID_Type.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_Email_ID.tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_Email_ID.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_Email_Username.tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_Email_Username.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_employeeIdentifier_ID.tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_employeeIdentifier_ID.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_employeeIdentifier_username.Tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_employeeIdentifier_username.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_CommandName.tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_CommandName.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_Sudo.tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_Sudo.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_SystemGroupName.tests.ps1" executed="True" result="Success" success="True" time="0.0034" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_SystemGroupName.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_Username.tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_ID_Username.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemGroupName_ID.tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemGroupName_ID.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_DisplayName.tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_DisplayName.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_HostName.tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_HostName.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_OS.tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_SystemID_OS.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_UserGroupName_ID.tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_UserGroupName_ID.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_UserName_ID.tests.ps1" executed="True" result="Success" success="True" time="0.0025" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-Hash_UserName_ID.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-JCHash.tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\HashFunctions\Get-JCHash.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-FunctionReport.Tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-FunctionReport.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCColorConfig.Tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCColorConfig.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCObject.tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCObject.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCObjectType.tests.ps1" executed="True" result="Success" success="True" time="0.0021" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCObjectType.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCType.Tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCType.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCUserAgent.Tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Get-JCUserAgent.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Hide-ObjectProperty.Tests.ps1" executed="True" result="Success" success="True" time="0.0022" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Hide-ObjectProperty.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-GetJCOrganization.tests.ps1" executed="True" result="Success" success="True" time="0.0021" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-GetJCOrganization.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-JCApi.tests.ps1" executed="True" result="Success" success="True" time="0.0032" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-JCApi.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-SetJCOrganization.Tests.ps1" executed="True" result="Success" success="True" time="0.0027" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-SetJCOrganization.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-SetJCOrganizations.tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Invoke-SetJCOrganizations.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\New-DynamicParameter.tests.ps1" executed="True" result="Success" success="True" time="0.003" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\New-DynamicParameter.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\New-JCCommandFromURL.tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\New-JCCommandFromURL.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Out-DebugParameter.Tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Out-DebugParameter.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Test-MultiTenant.tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Test-MultiTenant.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Write-Rainbow.Tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\NestedFunctions\Write-Rainbow.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\RadiusServer\Get-DynamicParamRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\RadiusServer\Get-DynamicParamRadiusServer.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\RadiusServer\Invoke-JCRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\RadiusServer\Invoke-JCRadiusServer.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_DefaultDebugMessageBegin.Tests.ps1" executed="True" result="Success" success="True" time="0.0024" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_DefaultDebugMessageBegin.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_DefaultDynamicParamProcess.Tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_DefaultDynamicParamProcess.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_Example.Tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_Example.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_TryCatchError.Tests.ps1" executed="True" result="Success" success="True" time="0.0023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Private\ScriptBlocks\ScriptBlock_TryCatchError.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Add-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.003" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Add-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Copy-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="9.9739" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Copy-JCAssociation.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Copy-JCAssociation Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Copy-JCAssociation Tests">
            <results>
              <test-suite type="TestFixture" name="Copy-JCAssociation Tests.Copy the associations of a user to another user ById." executed="True" result="Success" success="True" time="0" asserts="0" description="Copy-JCAssociation Tests.Copy the associations of a user to another user ById.">
                <results>
                  <test-case description="Associations should be the same." name="Copy-JCAssociation Tests.Copy the associations of a user to another user ById..Associations should be the same." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Copy-JCAssociation Tests.Copy the associations of a user to another user ByName." executed="True" result="Success" success="True" time="0" asserts="0" description="Copy-JCAssociation Tests.Copy the associations of a user to another user ByName.">
                <results>
                  <test-case description="Associations should be the same." name="Copy-JCAssociation Tests.Copy the associations of a user to another user ByName..Associations should be the same." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Get-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="281.6767" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Get-JCAssociation.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Association Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests">
            <results>
              <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with." executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with.">
                <results>
                  <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';">
                    <results>
                      <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters." executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters.">
                        <results>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Add' should be 'add'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results action property 'Add' should be 'add'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user');">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user');.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'direct' match 'Direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where 'direct' match 'Direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'direct' match 'Direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where 'direct' match 'Direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Remove' should be 'remove'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results action property 'Remove' should be 'remove'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user') -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters." executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters.">
                        <results>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Add' should be 'add'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results action property 'Add' should be 'add'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Raw;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Raw;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'direct' match 'Direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where 'direct' match 'Direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'direct' match 'Direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where 'direct' match 'Direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Remove' should be 'remove'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results action property 'Remove' should be 'remove'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..1 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user') -Force -TargetId:('5cc86bff226c962b8344d85f');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';">
                    <results>
                      <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters." executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters.">
                        <results>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Add' should be 'add'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results action property 'Add' should be 'add'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user');">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user');.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'Direct' match 'direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where 'Direct' match 'direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'Direct' match 'direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where 'Direct' match 'direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Remove' should be 'remove'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results action property 'Remove' should be 'remove'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user') -TargetName:('associations.user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters." executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters.">
                        <results>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Add' should be 'add'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results action property 'Add' should be 'add'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Raw;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Raw;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'Direct' match 'direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where 'Direct' match 'direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'Direct' match 'direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where 'Direct' match 'direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user') -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Remove' should be 'remove'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results action property 'Remove' should be 'remove'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results TargetId '5cc86bff226c962b8344d85f' should be in '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user' should be in 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results TargetType 'user' should be in 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceType 'g_suite' should not the same as the TargetType 'user'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5cc86bff226c962b8344d85f'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..2 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user';TargetId:'5cc86bff226c962b8344d85f';TargetName:'associations.user';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user') -Force -TargetName:('associations.user');.Where results SourceType 'g_suite' should not be in TargetType 'user'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';">
                    <results>
                      <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters." executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters.">
                        <results>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Add' should be 'add'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results action property 'Add' should be 'add'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751')  -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user_group');">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user_group');.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Raw;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'direct' match 'Direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where 'direct' match 'Direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'direct' match 'Direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where 'direct' match 'Direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Remove' should be 'remove'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results action property 'Remove' should be 'remove'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') -Force -TargetType:('user_group') -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters." executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters.">
                        <results>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Add' should be 'add'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results action property 'Add' should be 'add'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Add-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Raw;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Raw;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Raw;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'direct' match 'Direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where 'direct' match 'Direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'direct' match 'Direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where 'direct' match 'Direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Remove' should be 'remove'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results action property 'Remove' should be 'remove'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..3 of 4; When Association functions are called with parameterSet: 'ById';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Id:('5ac26bce45886d3a544b7751') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetId:('5a4c0174c911807e553de93c');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';">
                    <results>
                      <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters." executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters.">
                        <results>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Add' should be 'add'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results action property 'Add' should be 'add'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Add-JCAssociation with 'Full' parameters by running: Add-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite')  -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user_group');">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user_group');.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Raw;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'Direct' match 'direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where 'Direct' match 'direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'Direct' match 'direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where 'Direct' match 'direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Get-JCAssociation with 'Full' parameters by running: Get-JCAssociation -Type:('g_suite') -Name:('G Suite') -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Remove' should be 'remove'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results action property 'Remove' should be 'remove'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by populating all parameters..Remove-JCAssociation with 'Full' parameters by running: Remove-JCAssociation -Type:('g_suite') -Name:('G Suite') -Force -TargetType:('user_group') -TargetName:('Five');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters." executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters.">
                        <results>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Add' should be 'add'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results action property 'Add' should be 'add'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Add-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Add-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Raw;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Raw;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;">
                            <results>
                              <test-case description="Where properties returned 'id, paths, type' should be 'id, paths, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;.Where properties returned 'id, paths, type' should be 'id, paths, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Raw;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'Direct' match 'direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where 'Direct' match 'direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where 'Direct' match 'direct'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where 'Direct' match 'direct'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -Direct;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where properties returned 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type' should be 'action, associationType, error, httpMetaData, id, info, IsSuccessStatusCode, paths, targetId, targetInfo, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeInfo;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, name, paths, targetId, targetName, targetType, type'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeNames;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -TargetType:('user_group') -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;">
                            <results>
                              <test-case description="Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where properties returned 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType' should be 'action, associationType, error, httpMetaData, id, IsSuccessStatusCode, paths, targetId, targetType, type, visualPathById, visualPathByName, visualPathByType'" time="0" asserts="0" success="False" />
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Get' should be 'get'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results action property 'Get' should be 'get'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Get-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Get-JCAssociation -IncludeVisualPath;.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');" executed="True" result="Success" success="True" time="0" asserts="0" description="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');">
                            <results>
                              <test-case description="Where results should be not NullOrEmpty" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results should be not NullOrEmpty" time="0" asserts="0" success="False" />
                              <test-case description="Where results count should BeGreaterThan 0" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results count should BeGreaterThan 0" time="0" asserts="0" success="False" />
                              <test-case description="Where results action property 'Remove' should be 'remove'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results action property 'Remove' should be 'remove'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should be in '5ac26bce45886d3a544b7751'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should be in 'g_suite'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceType 'g_suite' should be in 'g_suite'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results TargetId '5a4c0174c911807e553de93c' should be in '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results TargetType 'user_group' should be in 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results TargetType 'user_group' should be in 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should not the same as the TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceType 'g_suite' should not the same as the TargetType 'user_group'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceId '5ac26bce45886d3a544b7751' should not be in TargetId '5a4c0174c911807e553de93c'" time="0" asserts="0" success="False" />
                              <test-case description="Where results SourceType 'g_suite' should not be in TargetType 'user_group'" name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..4 of 4; When Association functions are called with parameterSet: 'ByName';SourceType:'g_suite';SourceId:'5ac26bce45886d3a544b7751';SourceName:'G Suite';TargetType:'user_group';TargetId:'5a4c0174c911807e553de93c';TargetName:'Five';.When Association functions are called by piping parameters..Remove-JCAssociation with 'Pipe' parameters by running: Get-JCObject -Type:('g_suite') -Name:('G Suite') | Remove-JCAssociation -TargetType:('user_group') -Force -TargetName:('Five');.Where results SourceType 'g_suite' should not be in TargetType 'user_group'" time="0" asserts="0" success="False" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-case description="Validate that all object types exist within the specified test environment." name="Association Tests.Get each type of JC object association possible and build list of source and targets to test with..Validate that all object types exist within the specified test environment." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Remove-JCAssociation.Tests.ps1" executed="True" result="Success" success="True" time="0.0065" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Association\Remove-JCAssociation.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Connect-JCOnline.tests.ps1" executed="True" result="Success" success="True" time="0.0145" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Connect-JCOnline.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Connect-JCOnline Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Connect-JCOnline Tests">
            <results>
              <test-suite type="TestFixture" name="Connect-JCOnline Tests.Single Org Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Connect-JCOnline Tests.Single Org Tests">
                <results>
                  <test-case description="Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." name="Connect-JCOnline Tests.Single Org Tests.Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." time="0" asserts="0" success="False" />
                  <test-case description="Should connect using the JumpCloudApiKey parameter." name="Connect-JCOnline Tests.Single Org Tests.Should connect using the JumpCloudApiKey parameter." time="0" asserts="0" success="False" />
                  <test-case description="Should connect using the JumpCloudOrgId parameter." name="Connect-JCOnline Tests.Single Org Tests.Should connect using the JumpCloudOrgId parameter." time="0" asserts="0" success="False" />
                  <test-case description="Should connect without parameters using the previously set env:jc* parameters." name="Connect-JCOnline Tests.Single Org Tests.Should connect without parameters using the previously set env:jc* parameters." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Connect-JCOnline Tests.MSP OrgId 1 Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Connect-JCOnline Tests.MSP OrgId 1 Tests">
                <results>
                  <test-case description="Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." name="Connect-JCOnline Tests.MSP OrgId 1 Tests.Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." time="0" asserts="0" success="False" />
                  <test-case description="Should connect using the JumpCloudApiKey parameter." name="Connect-JCOnline Tests.MSP OrgId 1 Tests.Should connect using the JumpCloudApiKey parameter." time="0" asserts="0" success="False" />
                  <test-case description="Should connect using the JumpCloudOrgId parameter." name="Connect-JCOnline Tests.MSP OrgId 1 Tests.Should connect using the JumpCloudOrgId parameter." time="0" asserts="0" success="False" />
                  <test-case description="Should connect without parameters using the previously set env:jc* parameters." name="Connect-JCOnline Tests.MSP OrgId 1 Tests.Should connect without parameters using the previously set env:jc* parameters." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Connect-JCOnline Tests.MSP OrgId 2 Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Connect-JCOnline Tests.MSP OrgId 2 Tests">
                <results>
                  <test-case description="Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." name="Connect-JCOnline Tests.MSP OrgId 2 Tests.Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." time="0" asserts="0" success="False" />
                  <test-case description="Should connect using the JumpCloudApiKey parameter." name="Connect-JCOnline Tests.MSP OrgId 2 Tests.Should connect using the JumpCloudApiKey parameter." time="0" asserts="0" success="False" />
                  <test-case description="Should connect using the JumpCloudOrgId parameter." name="Connect-JCOnline Tests.MSP OrgId 2 Tests.Should connect using the JumpCloudOrgId parameter." time="0" asserts="0" success="False" />
                  <test-case description="Should connect without parameters using the previously set env:jc* parameters." name="Connect-JCOnline Tests.MSP OrgId 2 Tests.Should connect without parameters using the previously set env:jc* parameters." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Get-JCOrganization.tests.ps1" executed="True" result="Success" success="True" time="0.0087" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Get-JCOrganization.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCOrganization 1.6" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCOrganization 1.6">
            <results>
              <test-case description="Returns JumpCloud Organizations " name="Get-JCOrganization 1.6.Returns JumpCloud Organizations " time="0" asserts="0" success="False" />
              <test-case description="Returns JumpCloud Organizations connected to two different orgs" name="Get-JCOrganization 1.6.Returns JumpCloud Organizations connected to two different orgs" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Set-JCOrganization.tests.ps1" executed="True" result="Success" success="True" time="0.0123" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Set-JCOrganization.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Set-JCOrganization Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCOrganization Tests">
            <results>
              <test-suite type="TestFixture" name="Set-JCOrganization Tests.Single Org Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCOrganization Tests.Single Org Tests">
                <results>
                  <test-case description="Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." name="Set-JCOrganization Tests.Single Org Tests.Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." time="0" asserts="0" success="False" />
                  <test-case description="Should connect using the JumpCloudApiKey parameter." name="Set-JCOrganization Tests.Single Org Tests.Should connect using the JumpCloudApiKey parameter." time="0" asserts="0" success="False" />
                  <test-case description="Should connect using the JumpCloudOrgId parameter." name="Set-JCOrganization Tests.Single Org Tests.Should connect using the JumpCloudOrgId parameter." time="0" asserts="0" success="False" />
                  <test-case description="Should connect without parameters using the previously set env:jc* parameters." name="Set-JCOrganization Tests.Single Org Tests.Should connect without parameters using the previously set env:jc* parameters." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Set-JCOrganization Tests.MSP OrgId 1 Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCOrganization Tests.MSP OrgId 1 Tests">
                <results>
                  <test-case description="Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." name="Set-JCOrganization Tests.MSP OrgId 1 Tests.Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." time="0" asserts="0" success="False" />
                  <test-case description="Should connect using the JumpCloudOrgId parameter." name="Set-JCOrganization Tests.MSP OrgId 1 Tests.Should connect using the JumpCloudOrgId parameter." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Set-JCOrganization Tests.MSP OrgId 2 Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCOrganization Tests.MSP OrgId 2 Tests">
                <results>
                  <test-case description="Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." name="Set-JCOrganization Tests.MSP OrgId 2 Tests.Should connect using the JumpCloudApiKey and JumpCloudOrgId parameters." time="0" asserts="0" success="False" />
                  <test-case description="Should connect using the JumpCloudOrgId parameter." name="Set-JCOrganization Tests.MSP OrgId 2 Tests.Should connect using the JumpCloudOrgId parameter." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Update-JCModule.Tests.ps1" executed="True" result="Success" success="True" time="0.003" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Authentication\Update-JCModule.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Get-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.6999" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Get-JCCommand.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCCommand 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCCommand 1.0">
            <results>
              <test-case description="Gets all JumpCloud commands" name="Get-JCCommand 1.0.Gets all JumpCloud commands" time="0" asserts="0" success="False" />
              <test-case description="Gets a single JumpCloud command  declaring -CommandID" name="Get-JCCommand 1.0.Gets a single JumpCloud command  declaring -CommandID" time="0" asserts="0" success="False" />
              <test-case description="Gets a single JumpCloud command  without declaring -CommandID" name="Get-JCCommand 1.0.Gets a single JumpCloud command  without declaring -CommandID" time="0" asserts="0" success="False" />
              <test-case description="Gets a single JumpCloud command using -ByID passed through the pipeline" name="Get-JCCommand 1.0.Gets a single JumpCloud command using -ByID passed through the pipeline" time="0" asserts="0" success="False" />
              <test-case description="Gets a single JumpCloud command passed through the pipeline without declaring -ByID" name="Get-JCCommand 1.0.Gets a single JumpCloud command passed through the pipeline without declaring -ByID" time="0" asserts="0" success="False" />
              <test-case description="Gets all JumpCloud command passed through the pipeline declaring -ByID" name="Get-JCCommand 1.0.Gets all JumpCloud command passed through the pipeline declaring -ByID" time="0" asserts="0" success="False" />
              <test-case description="Gets all JumpCloud command triggers" name="Get-JCCommand 1.0.Gets all JumpCloud command triggers" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Import-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.7001" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Import-JCCommand.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Import-JCCommand 1.1" executed="True" result="Success" success="True" time="0" asserts="0" description="Import-JCCommand 1.1">
            <results>
              <test-case description="Imports a JumpCloud command from a long URL" name="Import-JCCommand 1.1.Imports a JumpCloud command from a long URL" time="0" asserts="0" success="False" />
              <test-case description="Imports a JumpCloud command from a short URL" name="Import-JCCommand 1.1.Imports a JumpCloud command from a short URL" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Invoke-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.6896" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Invoke-JCCommand.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Invoke-JCCommand 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Invoke-JCCommand 1.0">
            <results>
              <test-case description="Invokes a single JumpCloud command declaring the -trigger" name="Invoke-JCCommand 1.0.Invokes a single JumpCloud command declaring the -trigger" time="0" asserts="0" success="False" />
              <test-case description="Invokes a single JumpCloud command passed through the pipeline from Get-JCCommand without declaring -trigger" name="Invoke-JCCommand 1.0.Invokes a single JumpCloud command passed through the pipeline from Get-JCCommand without declaring -trigger" time="0" asserts="0" success="False" />
              <test-case description="Invokes two JumpCloud command passed through the pipeline from Get-JCCommand without declaring -trigger" name="Invoke-JCCommand 1.0.Invokes two JumpCloud command passed through the pipeline from Get-JCCommand without declaring -trigger" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-JCCommand 1.4.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Invoke-JCCommand 1.4.0">
            <results>
              <test-case description="Triggers a command with one variable" name="Invoke-JCCommand 1.4.0.Triggers a command with one variable" time="0" asserts="0" success="False" />
              <test-case description="Triggers a command with two variables" name="Invoke-JCCommand 1.4.0.Triggers a command with two variables" time="0" asserts="0" success="False" />
              <test-case description="Triggers a command with three variables" name="Invoke-JCCommand 1.4.0.Triggers a command with three variables" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Invoke-JCDeployment.tests.ps1" executed="True" result="Success" success="True" time="0.7074" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Invoke-JCDeployment.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Invoke-JCDeployment 1.7.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Invoke-JCDeployment 1.7.0">
            <results>
              <test-case description="Invokes a JumpCloud command deployment with 2 systems" name="Invoke-JCDeployment 1.7.0.Invokes a JumpCloud command deployment with 2 systems" time="0" asserts="0" success="False" />
              <test-case description="Invokes a JumpCloud command deployment with 10 systems" name="Invoke-JCDeployment 1.7.0.Invokes a JumpCloud command deployment with 10 systems" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\New-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.7108" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\New-JCCommand.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="New-JCCommand 1.2" executed="True" result="Success" success="True" time="0" asserts="0" description="New-JCCommand 1.2">
            <results>
              <test-case description="Creates a new Windows command" name="New-JCCommand 1.2.Creates a new Windows command" time="0" asserts="0" success="False" />
              <test-case description="Creates a new Mac command" name="New-JCCommand 1.2.Creates a new Mac command" time="0" asserts="0" success="False" />
              <test-case description="Creates a new Linux command" name="New-JCCommand 1.2.Creates a new Linux command" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\New-JCDeploymentTemplate.tests.ps1" executed="True" result="Success" success="True" time="0.0032" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\New-JCDeploymentTemplate.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Remove-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.6939" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Remove-JCCommand.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Remove-JCCommand 1.2" executed="True" result="Success" success="True" time="0" asserts="0" description="Remove-JCCommand 1.2">
            <results>
              <test-case description="Creates a new Windows command" name="Remove-JCCommand 1.2.Creates a new Windows command" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Set-JCCommand.tests.ps1" executed="True" result="Success" success="True" time="0.6878" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\Set-JCCommand.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Set-JCCommand 1.7" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCCommand 1.7">
            <results>
              <test-case description="Updates the command" name="Set-JCCommand 1.7.Updates the command" time="0" asserts="0" success="False" />
              <test-case description="Updates the launchType to manual" name="Set-JCCommand 1.7.Updates the launchType to manual" time="0" asserts="0" success="False" />
              <test-case description="Updates the launchType to trigger" name="Set-JCCommand 1.7.Updates the launchType to trigger" time="0" asserts="0" success="False" />
              <test-case description="Updates the name" name="Set-JCCommand 1.7.Updates the name" time="0" asserts="0" success="False" />
              <test-case description="Updates the timeout" name="Set-JCCommand 1.7.Updates the timeout" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandResults\Get-JCCommandResult.tests.ps1" executed="True" result="Success" success="True" time="0.7242" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandResults\Get-JCCommandResult.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCCommandResults 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCCommandResults 1.0">
            <results>
              <test-case description="Gets all JumpCloud command results" name="Get-JCCommandResults 1.0.Gets all JumpCloud command results" time="0" asserts="0" success="False" />
              <test-case description="Gets a single JumpCloud command result using -ByID" name="Get-JCCommandResults 1.0.Gets a single JumpCloud command result using -ByID" time="0" asserts="0" success="False" />
              <test-case description="Gets a single JumpCloud command result without declaring -ByID" name="Get-JCCommandResults 1.0.Gets a single JumpCloud command result without declaring -ByID" time="0" asserts="0" success="False" />
              <test-case description="Gets a single JumpCloud command result declaring CommandResultID" name="Get-JCCommandResults 1.0.Gets a single JumpCloud command result declaring CommandResultID" time="0" asserts="0" success="False" />
              <test-case description="Gets a single JumpCloud command result using -ByID passed through the pipeline" name="Get-JCCommandResults 1.0.Gets a single JumpCloud command result using -ByID passed through the pipeline" time="0" asserts="0" success="False" />
              <test-case description="Gets a single JumpCloud command result passed through the pipeline without declaring -ByID" name="Get-JCCommandResults 1.0.Gets a single JumpCloud command result passed through the pipeline without declaring -ByID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCCommandResult 1.4.1" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCCommandResult 1.4.1">
            <results>
              <test-case description="Returns the total count of JumpCloud command results" name="Get-JCCommandResult 1.4.1.Returns the total count of JumpCloud command results" time="0" asserts="0" success="False" />
              <test-case description="Uses the -Skip parameter of JumpCloud command results" name="Get-JCCommandResult 1.4.1.Uses the -Skip parameter of JumpCloud command results" time="0" asserts="0" success="False" />
              <test-case description="Users the -Limit parameter of JumpCloud command results" name="Get-JCCommandResult 1.4.1.Users the -Limit parameter of JumpCloud command results" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCCommandResult 1.4.2" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCCommandResult 1.4.2">
            <results>
              <test-case description="Returns the max results" name="Get-JCCommandResult 1.4.2.Returns the max results" time="0" asserts="0" success="False" />
              <test-case description="Returns the max results using skip" name="Get-JCCommandResult 1.4.2.Returns the max results using skip" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCCommandResult 1.5.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCCommandResult 1.5.0">
            <results>
              <test-case description="Returns a command result with the SystemID" name="Get-JCCommandResult 1.5.0.Returns a command result with the SystemID" time="0" asserts="0" success="False" />
              <test-case description="Returns a command result -byID with the SystemID" name="Get-JCCommandResult 1.5.0.Returns a command result -byID with the SystemID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandResults\Remove-JCCommandResult.tests.ps1" executed="True" result="Success" success="True" time="0.7009" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandResults\Remove-JCCommandResult.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Remove-JCCommandResult 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Remove-JCCommandResult 1.0">
            <results>
              <test-case description="Removes a JumpCloud command result using -CommandResultID with the force parameter" name="Remove-JCCommandResult 1.0.Removes a JumpCloud command result using -CommandResultID with the force parameter" time="0" asserts="0" success="False" />
              <test-case description="Removes a JumpCloud command result passed through the pipeline with the force parameter without declaring -CommandResultID" name="Remove-JCCommandResult 1.0.Removes a JumpCloud command result passed through the pipeline with the force parameter without declaring -CommandResultID" time="0" asserts="0" success="False" />
              <test-case description="Removes two JumpCloud command results passed through the pipeline with force parameter without declaring -CommandResultID" name="Remove-JCCommandResult 1.0.Removes two JumpCloud command results passed through the pipeline with force parameter without declaring -CommandResultID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.tests.ps1" executed="True" result="Success" success="True" time="0.6991" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Add-JCCommandTarget.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Add-JCCommandTarget 1.3" executed="True" result="Success" success="True" time="0" asserts="0" description="Add-JCCommandTarget 1.3">
            <results>
              <test-case description="Adds a single system to a JumpCloud command" name="Add-JCCommandTarget 1.3.Adds a single system to a JumpCloud command" time="0" asserts="0" success="False" />
              <test-case description="Adds a single system group to a JumpCloud command by GroupName" name="Add-JCCommandTarget 1.3.Adds a single system group to a JumpCloud command by GroupName" time="0" asserts="0" success="False" />
              <test-case description="Adds a single system group to a JumpCloud command by GroupID" name="Add-JCCommandTarget 1.3.Adds a single system group to a JumpCloud command by GroupID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.tests.ps1" executed="True" result="Success" success="True" time="0.7093" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Get-JCCommandTarget.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCCommandTarget 1.3" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCCommandTarget 1.3">
            <results>
              <test-case description="Returns a JumpCloud commands system targets" name="Get-JCCommandTarget 1.3.Returns a JumpCloud commands system targets" time="0" asserts="0" success="False" />
              <test-case description="Returns a JumpCloud commands group targets by groupname" name="Get-JCCommandTarget 1.3.Returns a JumpCloud commands group targets by groupname" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.tests.ps1" executed="True" result="Success" success="True" time="0.6936" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Commands\CommandTargets\Remove-JCCommandTarget.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Add-JCCommandTarget 1.3" executed="True" result="Success" success="True" time="0" asserts="0" description="Add-JCCommandTarget 1.3">
            <results>
              <test-case description="Removes a single system to a JumpCloud command" name="Add-JCCommandTarget 1.3.Removes a single system to a JumpCloud command" time="0" asserts="0" success="False" />
              <test-case description="Removes a single system group to a JumpCloud command by GroupName" name="Add-JCCommandTarget 1.3.Removes a single system group to a JumpCloud command by GroupName" time="0" asserts="0" success="False" />
              <test-case description="Removes a single system group to a JumpCloud command by GroupID" name="Add-JCCommandTarget 1.3.Removes a single system group to a JumpCloud command by GroupID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1" executed="True" result="Success" success="True" time="18.1604" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\DirectoryInsights\Get-JCEvent.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCEvent" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCEvent">
            <results>
              <test-case description="GetExpanded" name="Get-JCEvent.GetExpanded" time="0" asserts="0" success="False" />
              <test-case description="Get" name="Get-JCEvent.Get" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\Get-JCGroup.tests.ps1" executed="True" result="Success" success="True" time="0.8207" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\Get-JCGroup.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCGroup 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCGroup 1.0">
            <results>
              <test-case description="Gets all groups: System and User" name="Get-JCGroup 1.0.Gets all groups: System and User" time="0" asserts="0" success="False" />
              <test-case description="Gets all JumpCloud User Groups" name="Get-JCGroup 1.0.Gets all JumpCloud User Groups" time="0" asserts="0" success="False" />
              <test-case description="Gets all JumpCloud System Groups" name="Get-JCGroup 1.0.Gets all JumpCloud System Groups" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCGroup 1.1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCGroup 1.1.0">
            <results>
              <test-case description="Gets a JumpCloud UserGroup by Name and Displays Attributes" name="Get-JCGroup 1.1.0.Gets a JumpCloud UserGroup by Name and Displays Attributes" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCGroup 1.12.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCGroup 1.12.0">
            <results>
              <test-case description="Searches for a User group that does not exist and errors" name="Get-JCGroup 1.12.0.Searches for a User group that does not exist and errors" time="0" asserts="0" success="False" />
              <test-case description="Searches for a System group that does not exist and errors" name="Get-JCGroup 1.12.0.Searches for a System group that does not exist and errors" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.7243" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Add-JCSystemGroupMember.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Add-JCSystemGroupMember 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Add-JCSystemGroupMember 1.0">
            <results>
              <test-case description="Adds a JumpCloud system to a JumpCloud system group by System Groupname and SystemID" name="Add-JCSystemGroupMember 1.0.Adds a JumpCloud system to a JumpCloud system group by System Groupname and SystemID" time="0" asserts="0" success="False" />
              <test-case description="Adds a JumpCloud system to a JumpCloud system group by System GroupID and SystemID" name="Add-JCSystemGroupMember 1.0.Adds a JumpCloud system to a JumpCloud system group by System GroupID and SystemID" time="0" asserts="0" success="False" />
              <test-case description="Adds two JumpCloud systems to a JumpCloud system group using the pipeline" name="Add-JCSystemGroupMember 1.0.Adds two JumpCloud systems to a JumpCloud system group using the pipeline" time="0" asserts="0" success="False" />
              <test-case description="Adds two JumpCloud systems to a JumpCloud system group using the pipeline using -ByID" name="Add-JCSystemGroupMember 1.0.Adds two JumpCloud systems to a JumpCloud system group using the pipeline using -ByID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.887" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Get-JCSystemGroupMember.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCSystemGroupMember 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemGroupMember 1.0">
            <results>
              <test-case description="Gets a System Groups membership by Groupname" name="Get-JCSystemGroupMember 1.0.Gets a System Groups membership by Groupname" time="0" asserts="0" success="False" />
              <test-case description="Gets a System Groups membership -ByID" name="Get-JCSystemGroupMember 1.0.Gets a System Groups membership -ByID" time="0" asserts="0" success="False" />
              <test-case description="Gets all System Group members using Get-JCGroup -type system and the pipeline" name="Get-JCSystemGroupMember 1.0.Gets all System Group members using Get-JCGroup -type system and the pipeline" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\New-JCSystemGroup.tests.ps1" executed="True" result="Success" success="True" time="0.7039" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\New-JCSystemGroup.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="New-JCSystemGroup 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="New-JCSystemGroup 1.0">
            <results>
              <test-case description="Creates a new system group" name="New-JCSystemGroup 1.0.Creates a new system group" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.tests.ps1" executed="True" result="Success" success="True" time="0.7303" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Remove-JCSystemGroup.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Remove-JCSystemGroup 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Remove-JCSystemGroup 1.0">
            <results>
              <test-case description="Removes a system group" name="Remove-JCSystemGroup 1.0.Removes a system group" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.7112" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\SystemGroups\Remove-JCSystemGroupMember.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Remove-JCSystemGroupMember 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Remove-JCSystemGroupMember 1.0">
            <results>
              <test-case description="Removes a JumpCloud system from a JumpCloud system group by System Groupname and SystemID" name="Remove-JCSystemGroupMember 1.0.Removes a JumpCloud system from a JumpCloud system group by System Groupname and SystemID" time="0" asserts="0" success="False" />
              <test-case description="Removes a JumpCloud system from a JumpCloud system group by System GroupID and SystemID" name="Remove-JCSystemGroupMember 1.0.Removes a JumpCloud system from a JumpCloud system group by System GroupID and SystemID" time="0" asserts="0" success="False" />
              <test-case description="Removes two JumpCloud systems from a JumpCloud system group using the pipeline" name="Remove-JCSystemGroupMember 1.0.Removes two JumpCloud systems from a JumpCloud system group using the pipeline" time="0" asserts="0" success="False" />
              <test-case description="Removes two JumpCloud systems from a JumpCloud system group using the pipeline using -ByID" name="Remove-JCSystemGroupMember 1.0.Removes two JumpCloud systems from a JumpCloud system group using the pipeline using -ByID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.7069" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Add-JCUserGroupMember.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Add-JCUserGroupMember 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Add-JCUserGroupMember 1.0">
            <results>
              <test-case description="Adds a JumpCloud user to a JumpCloud user group by User GroupName and Username" name="Add-JCUserGroupMember 1.0.Adds a JumpCloud user to a JumpCloud user group by User GroupName and Username" time="0" asserts="0" success="False" />
              <test-case description="Adds a JumpCloud user to a JumpCloud user group by UserID and Group ID" name="Add-JCUserGroupMember 1.0.Adds a JumpCloud user to a JumpCloud user group by UserID and Group ID" time="0" asserts="0" success="False" />
              <test-case description="Adds two JumpCLoud users to a JumpCloud user group using the pipeline" name="Add-JCUserGroupMember 1.0.Adds two JumpCLoud users to a JumpCloud user group using the pipeline" time="0" asserts="0" success="False" />
              <test-case description="Adds two JumpCLoud users to a JumpCloud user group using the pipeline using -ByID" name="Add-JCUserGroupMember 1.0.Adds two JumpCLoud users to a JumpCloud user group using the pipeline using -ByID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.tests.ps1" executed="True" result="Success" success="True" time="2.8911" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Get-JCUserGroupMember.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCUserGroupMember 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCUserGroupMember 1.0">
            <results>
              <test-case description="Gets a User Groups membership by Groupname" name="Get-JCUserGroupMember 1.0.Gets a User Groups membership by Groupname" time="0" asserts="0" success="False" />
              <test-case description="Gets a User Groups membership -ByID" name="Get-JCUserGroupMember 1.0.Gets a User Groups membership -ByID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\New-JCUserGroup.tests.ps1" executed="True" result="Success" success="True" time="0.7023" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\New-JCUserGroup.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="New-JCUserGroup 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="New-JCUserGroup 1.0">
            <results>
              <test-case description="Creates a new user group" name="New-JCUserGroup 1.0.Creates a new user group" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Remove-JCUserGroup.tests.ps1" executed="True" result="Success" success="True" time="0.7202" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Remove-JCUserGroup.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="New-JCUserGroup 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="New-JCUserGroup 1.0">
            <results>
              <test-case description="Creates a new user group" name="New-JCUserGroup 1.0.Creates a new user group" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.tests.ps1" executed="True" result="Success" success="True" time="0.699" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Remove-JCUserGroupMember.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Remove-JCUserGroupMember 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Remove-JCUserGroupMember 1.0">
            <results>
              <test-case description="Removes JumpCloud user from a JumpCloud user group by User GroupName and Username" name="Remove-JCUserGroupMember 1.0.Removes JumpCloud user from a JumpCloud user group by User GroupName and Username" time="0" asserts="0" success="False" />
              <test-case description="Removes a JumpCloud system from a JumpCloud system group by System GroupID and SystemID" name="Remove-JCUserGroupMember 1.0.Removes a JumpCloud system from a JumpCloud system group by System GroupID and SystemID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.tests.ps1" executed="True" result="Success" success="True" time="0.6907" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Groups\UserGroups\Set-JCUserGroupLDAP.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Set-JCUserGroupLDAP" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUserGroupLDAP">
            <results>
              <test-case description="Enables LDAP for a JumpCloud User Group using GroupName" name="Set-JCUserGroupLDAP.Enables LDAP for a JumpCloud User Group using GroupName" time="0" asserts="0" success="False" />
              <test-case description="Disables LDAP for a JumpCloud User Group using GroupName" name="Set-JCUserGroupLDAP.Disables LDAP for a JumpCloud User Group using GroupName" time="0" asserts="0" success="False" />
              <test-case description="Enables LDAP for a JumpCloud User Group using GroupID" name="Set-JCUserGroupLDAP.Enables LDAP for a JumpCloud User Group using GroupID" time="0" asserts="0" success="False" />
              <test-case description="Disables LDAP for a JumpCloud User Group using GroupID" name="Set-JCUserGroupLDAP.Disables LDAP for a JumpCloud User Group using GroupID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\Get-JCPolicy.tests.ps1" executed="True" result="Success" success="True" time="0.7158" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\Get-JCPolicy.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCPolicy 1.10" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCPolicy 1.10">
            <results>
              <test-case description="Returns a single JumpCloud Policy declaring -PolicyId" name="Get-JCPolicy 1.10.Returns a single JumpCloud Policy declaring -PolicyId" time="0" asserts="0" success="False" />
              <test-case description="Returns a single JumpCloud policy without declaring -PolicyId" name="Get-JCPolicy 1.10.Returns a single JumpCloud policy without declaring -PolicyId" time="0" asserts="0" success="False" />
              <test-case description="Returns a single JumpCloud policy using -PolicyId passed through the pipeline" name="Get-JCPolicy 1.10.Returns a single JumpCloud policy using -PolicyId passed through the pipeline" time="0" asserts="0" success="False" />
              <test-case description="Returns a single JumpCloud policy passed through the pipeline without declaring -ByID" name="Get-JCPolicy 1.10.Returns a single JumpCloud policy passed through the pipeline without declaring -ByID" time="0" asserts="0" success="False" />
              <test-case description="Returns all JumpCloud Policies passed through the pipeline declaring -ByID" name="Get-JCPolicy 1.10.Returns all JumpCloud Policies passed through the pipeline declaring -ByID" time="0" asserts="0" success="False" />
              <test-case description="Returns a single JumpCloud Policy declaring -Name" name="Get-JCPolicy 1.10.Returns a single JumpCloud Policy declaring -Name" time="0" asserts="0" success="False" />
              <test-case description="Returns a specific single JumpCloud Policy declaring -Name" name="Get-JCPolicy 1.10.Returns a specific single JumpCloud Policy declaring -Name" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.tests.ps1" executed="True" result="Success" success="True" time="0.7136" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyResults\Get-JCPolicyResult.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCPolicyResult 1.10" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCPolicyResult 1.10">
            <results>
              <test-case description="Returns a policy result with the PolicyName" name="Get-JCPolicyResult 1.10.Returns a policy result with the PolicyName" time="0" asserts="0" success="False" />
              <test-case description="Returns a policy result with the PolicyId" name="Get-JCPolicyResult 1.10.Returns a policy result with the PolicyId" time="0" asserts="0" success="False" />
              <test-case description="Returns a policy result with the SystemID" name="Get-JCPolicyResult 1.10.Returns a policy result with the SystemID" time="0" asserts="0" success="False" />
              <test-case description="Returns a policy result using the -ByPolicyID switch parameter via the pipeline" name="Get-JCPolicyResult 1.10.Returns a policy result using the -ByPolicyID switch parameter via the pipeline" time="0" asserts="0" success="False" />
              <test-case description="Returns a policy using the -BySystemID switch parameter via the pipeline " name="Get-JCPolicyResult 1.10.Returns a policy using the -BySystemID switch parameter via the pipeline " time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.tests.ps1" executed="True" result="Success" success="True" time="0.8369" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetGroup.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCPolicyTargetGroup 1.10" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCPolicyTargetGroup 1.10">
            <results>
              <test-case description="Returns all JumpCloud policy group targets by GroupName using PolicyId" name="Get-JCPolicyTargetGroup 1.10.Returns all JumpCloud policy group targets by GroupName using PolicyId" time="0" asserts="0" success="False" />
              <test-case description="Returns all JumpCloud policy group targets by GroupName using PolicyName" name="Get-JCPolicyTargetGroup 1.10.Returns all JumpCloud policy group targets by GroupName using PolicyName" time="0" asserts="0" success="False" />
              <test-case description="Returns all JumpCloud policy system group targets using the pipeline and group id" name="Get-JCPolicyTargetGroup 1.10.Returns all JumpCloud policy system group targets using the pipeline and group id" time="0" asserts="0" success="False" />
              <test-case description="Returns all JumpCloud policy system group targets using the pipeline and group name" name="Get-JCPolicyTargetGroup 1.10.Returns all JumpCloud policy system group targets using the pipeline and group name" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.tests.ps1" executed="True" result="Success" success="True" time="0.6956" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Policies\PolicyTargets\Get-JCPolicyTargetSystem.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCPolicyTargetSystem 1.10" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCPolicyTargetSystem 1.10">
            <results>
              <test-case description="Returns all JumpCloud policy system targets using PolicyId" name="Get-JCPolicyTargetSystem 1.10.Returns all JumpCloud policy system targets using PolicyId" time="0" asserts="0" success="False" />
              <test-case description="Returns all JumpCloud policy system targets using PolicyName" name="Get-JCPolicyTargetSystem 1.10.Returns all JumpCloud policy system targets using PolicyName" time="0" asserts="0" success="False" />
              <test-case description="Returns all JumpCloud policy system targets using the pipeline and group id" name="Get-JCPolicyTargetSystem 1.10.Returns all JumpCloud policy system targets using the pipeline and group id" time="0" asserts="0" success="False" />
              <test-case description="Returns all JumpCloud policy system targets using the pipeline and group name" name="Get-JCPolicyTargetSystem 1.10.Returns all JumpCloud policy system targets using the pipeline and group name" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.tests.ps1" executed="True" result="Success" success="True" time="0.7246" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Add-JCRadiusReplyAttribute.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Add-JCRadiusReplyAttribute 1.9.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Add-JCRadiusReplyAttribute 1.9.0">
            <results>
              <test-case description="Adds VLAN attributes to a group" name="Add-JCRadiusReplyAttribute 1.9.0.Adds VLAN attributes to a group" time="0" asserts="0" success="False" />
              <test-case description="Adds VLAN attributes to a group with -VLANTag" name="Add-JCRadiusReplyAttribute 1.9.0.Adds VLAN attributes to a group with -VLANTag" time="0" asserts="0" success="False" />
              <test-case description="Adds a single custom radius attribute to a group" name="Add-JCRadiusReplyAttribute 1.9.0.Adds a single custom radius attribute to a group" time="0" asserts="0" success="False" />
              <test-case description="Adds a single custom radius attribute to a group and VLAN attributes" name="Add-JCRadiusReplyAttribute 1.9.0.Adds a single custom radius attribute to a group and VLAN attributes" time="0" asserts="0" success="False" />
              <test-case description="Adds two custom radius attributes to a group" name="Add-JCRadiusReplyAttribute 1.9.0.Adds two custom radius attributes to a group" time="0" asserts="0" success="False" />
              <test-case description="Adds two custom radius attributes to a group and VLAN attributes" name="Add-JCRadiusReplyAttribute 1.9.0.Adds two custom radius attributes to a group and VLAN attributes" time="0" asserts="0" success="False" />
              <test-case description="Adds three custom radius attributes to a group" name="Add-JCRadiusReplyAttribute 1.9.0.Adds three custom radius attributes to a group" time="0" asserts="0" success="False" />
              <test-case description="Adds a custom attribute to a group that already has VLAN attributes" name="Add-JCRadiusReplyAttribute 1.9.0.Adds a custom attribute to a group that already has VLAN attributes" time="0" asserts="0" success="False" />
              <test-case description="Adds a VLAN attributes to a group that already has a custom attribute" name="Add-JCRadiusReplyAttribute 1.9.0.Adds a VLAN attributes to a group that already has a custom attribute" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.tests.ps1" executed="True" result="Success" success="True" time="0.6989" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Get-JCRadiusReplyAttribute.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCRadiusReplyAttribute 1.9.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCRadiusReplyAttribute 1.9.0">
            <results>
              <test-case description="Adds VLAN attributes to a group and uses Get-JCRadiusReplyAttributes to verify" name="Get-JCRadiusReplyAttribute 1.9.0.Adds VLAN attributes to a group and uses Get-JCRadiusReplyAttributes to verify" time="0" asserts="0" success="False" />
              <test-case description="Adds a single custom radius attribute to a group and uses Get-JCAttributes to verify" name="Get-JCRadiusReplyAttribute 1.9.0.Adds a single custom radius attribute to a group and uses Get-JCAttributes to verify" time="0" asserts="0" success="False" />
              <test-case description="Adds a single custom radius attribute to a group and VLAN attributes and uses Get-JCRadiusReplyAttributes to verify" name="Get-JCRadiusReplyAttribute 1.9.0.Adds a single custom radius attribute to a group and VLAN attributes and uses Get-JCRadiusReplyAttributes to verify" time="0" asserts="0" success="False" />
              <test-case description="Adds two custom radius attributes to a group and uses Get-JCRadiusReplyAttributes to verify" name="Get-JCRadiusReplyAttribute 1.9.0.Adds two custom radius attributes to a group and uses Get-JCRadiusReplyAttributes to verify" time="0" asserts="0" success="False" />
              <test-case description="Adds two custom radius attributes to a group and VLAN attributes and uses Get-JCRadiusReplyAttributes to verify" name="Get-JCRadiusReplyAttribute 1.9.0.Adds two custom radius attributes to a group and VLAN attributes and uses Get-JCRadiusReplyAttributes to verify" time="0" asserts="0" success="False" />
              <test-case description="Adds three custom radius attributes to a group and uses Get-JCRadiusReplyAttributes to verify" name="Get-JCRadiusReplyAttribute 1.9.0.Adds three custom radius attributes to a group and uses Get-JCRadiusReplyAttributes to verify" time="0" asserts="0" success="False" />
              <test-case description="Adds a custom attribute to a group that already has VLAN attributes and uses Get-JCRadiusReplyAttributes to verify" name="Get-JCRadiusReplyAttribute 1.9.0.Adds a custom attribute to a group that already has VLAN attributes and uses Get-JCRadiusReplyAttributes to verify" time="0" asserts="0" success="False" />
              <test-case description="Adds a VLAN attributes to a group that already has a custom attribute and uses Get-JCRadiusReplyAttributes to verify" name="Get-JCRadiusReplyAttribute 1.9.0.Adds a VLAN attributes to a group that already has a custom attribute and uses Get-JCRadiusReplyAttributes to verify" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="3.0515" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Get-JCRadiusServer.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCRadiusServer Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCRadiusServer Tests">
            <results>
              <test-suite type="TestFixture" name="Get-JCRadiusServer Tests.Set-JCRadiusServer" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCRadiusServer Tests.Set-JCRadiusServer">
                <results>
                  <test-case description="Should update a radius server ByName." name="Get-JCRadiusServer Tests.Set-JCRadiusServer.Should update a radius server ByName." time="0" asserts="0" success="False" />
                  <test-case description="Should update a radius server ById." name="Get-JCRadiusServer Tests.Set-JCRadiusServer.Should update a radius server ById." time="0" asserts="0" success="False" />
                  <test-case description="Should revert radius server changes." name="Get-JCRadiusServer Tests.Set-JCRadiusServer.Should revert radius server changes." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-JCRadiusServer Tests.Remove-JCRadiusServer" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCRadiusServer Tests.Remove-JCRadiusServer">
                <results>
                  <test-case description="Should remove a specific radius server." name="Get-JCRadiusServer Tests.Remove-JCRadiusServer.Should remove a specific radius server." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-JCRadiusServer Tests.New-JCRadiusServer" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCRadiusServer Tests.New-JCRadiusServer">
                <results>
                  <test-case description="Should create a new radius server." name="Get-JCRadiusServer Tests.New-JCRadiusServer.Should create a new radius server." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-JCRadiusServer Tests.Get-JCRadiusServer" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCRadiusServer Tests.Get-JCRadiusServer">
                <results>
                  <test-case description="Should return all radius servers." name="Get-JCRadiusServer Tests.Get-JCRadiusServer.Should return all radius servers." time="0" asserts="0" success="False" />
                  <test-case description="Should return a specific radius server ById." name="Get-JCRadiusServer Tests.Get-JCRadiusServer.Should return a specific radius server ById." time="0" asserts="0" success="False" />
                  <test-case description="Should return a specific radius server ByName." name="Get-JCRadiusServer Tests.Get-JCRadiusServer.Should return a specific radius server ByName." time="0" asserts="0" success="False" />
                  <test-case description="Should return a specific radius server ByValue (ById)." name="Get-JCRadiusServer Tests.Get-JCRadiusServer.Should return a specific radius server ByValue (ById)." time="0" asserts="0" success="False" />
                  <test-case description="Should return a specific radius server ByValue (ByName)." name="Get-JCRadiusServer Tests.Get-JCRadiusServer.Should return a specific radius server ByValue (ByName)." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="0.0033" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\New-JCRadiusServer.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.tests.ps1" executed="True" result="Success" success="True" time="0.7052" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Remove-JCRadiusReplyAttribute.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Remove-JCRadiusReplyAttributes 1.9.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Remove-JCRadiusReplyAttributes 1.9.0">
            <results>
              <test-case description="Removes a single custom radius attribute from a group" name="Remove-JCRadiusReplyAttributes 1.9.0.Removes a single custom radius attribute from a group" time="0" asserts="0" success="False" />
              <test-case description="Removes two custom radius attributes from a group" name="Remove-JCRadiusReplyAttributes 1.9.0.Removes two custom radius attributes from a group" time="0" asserts="0" success="False" />
              <test-case description="Removes all radius attributes from a group" name="Remove-JCRadiusReplyAttributes 1.9.0.Removes all radius attributes from a group" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="0.0032" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Remove-JCRadiusServer.Tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.tests.ps1" executed="True" result="Success" success="True" time="0.7021" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Set-JCRadiusReplyAttribute.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Set-JCRadiusReplyAttribute 1.9.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCRadiusReplyAttribute 1.9.0">
            <results>
              <test-case description="Updates VLAN attributes on a group" name="Set-JCRadiusReplyAttribute 1.9.0.Updates VLAN attributes on a group" time="0" asserts="0" success="False" />
              <test-case description="Updates VLAN attributes with tags on a group" name="Set-JCRadiusReplyAttribute 1.9.0.Updates VLAN attributes with tags on a group" time="0" asserts="0" success="False" />
              <test-case description="Updates two custom radius attributes on a group" name="Set-JCRadiusReplyAttribute 1.9.0.Updates two custom radius attributes on a group" time="0" asserts="0" success="False" />
              <test-case description="Updates two custom radius attributes on a group and updates VLAN attributes" name="Set-JCRadiusReplyAttribute 1.9.0.Updates two custom radius attributes on a group and updates VLAN attributes" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1" executed="True" result="Success" success="True" time="1.5001" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\RadiusServer\Set-JCRadiusServer.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Set-JCRadiusServer 1.15.3" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCRadiusServer 1.15.3">
            <results>
              <test-suite type="TestFixture" name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params">
                <results>
                  <test-case description="Should ENABLE mfa on a radius server by ByName." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should ENABLE mfa on a radius server by ByName." time="0" asserts="0" success="False" />
                  <test-case description="Should DISABLE mfa on a radius server by ByName." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should DISABLE mfa on a radius server by ByName." time="0" asserts="0" success="False" />
                  <test-case description="Should ENABLE mfa on a radius server by ID." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should ENABLE mfa on a radius server by ID." time="0" asserts="0" success="False" />
                  <test-case description="Should DISABLE mfa on a radius server by ID." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should DISABLE mfa on a radius server by ID." time="0" asserts="0" success="False" />
                  <test-case description="Should set userLockoutAction to REMOVE on a radius server by ByName." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should set userLockoutAction to REMOVE on a radius server by ByName." time="0" asserts="0" success="False" />
                  <test-case description="Should set userLockoutAction to MAINTAIN on a radius server by ByName." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should set userLockoutAction to MAINTAIN on a radius server by ByName." time="0" asserts="0" success="False" />
                  <test-case description="Should set userLockoutAction to REMOVE on a radius server by id." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should set userLockoutAction to REMOVE on a radius server by id." time="0" asserts="0" success="False" />
                  <test-case description="Should set userLockoutAction to MAINTAIN on a radius server by id." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should set userLockoutAction to MAINTAIN on a radius server by id." time="0" asserts="0" success="False" />
                  <test-case description="Should set userPasswordExpirationAction to REMOVE on a radius server by ByName." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should set userPasswordExpirationAction to REMOVE on a radius server by ByName." time="0" asserts="0" success="False" />
                  <test-case description="Should set userPasswordExpirationAction to MAINTAIN on a radius server by ByName." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should set userPasswordExpirationAction to MAINTAIN on a radius server by ByName." time="0" asserts="0" success="False" />
                  <test-case description="Should set userPasswordExpirationAction to REMOVE on a radius server by id." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should set userPasswordExpirationAction to REMOVE on a radius server by id." time="0" asserts="0" success="False" />
                  <test-case description="Should set userPasswordExpirationAction to MAINTAIN on a radius server by id." name="Set-JCRadiusServer 1.15.3.Set-JCRadiusServer params.Should set userPasswordExpirationAction to MAINTAIN on a radius server by id." time="0" asserts="0" success="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Get-JCSystem.tests.ps1" executed="True" result="Success" success="True" time="0.8199" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Get-JCSystem.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCSystem 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystem 1.0">
            <results>
              <test-case description="Gets all JumpCloud systems" name="Get-JCSystem 1.0.Gets all JumpCloud systems" time="0" asserts="0" success="False" />
              <test-case description="Gets a single JumpCloud system" name="Get-JCSystem 1.0.Gets a single JumpCloud system" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCSystem 1.4" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystem 1.4">
            <results>
              <test-case description="Gets a JumpCloud system by system ID" name="Get-JCSystem 1.4.Gets a JumpCloud system by system ID" time="0" asserts="0" success="False" />
              <test-case description="Returns all JumpCloud systems" name="Get-JCSystem 1.4.Returns all JumpCloud systems" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by hostname wildcard end" name="Get-JCSystem 1.4.Searches for JumpCloud system by hostname wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by hostname wildcard beginning" name="Get-JCSystem 1.4.Searches for JumpCloud system by hostname wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by hostname wildcard beginning and end" name="Get-JCSystem 1.4.Searches for JumpCloud system by hostname wildcard beginning and end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by displayname wildcard end" name="Get-JCSystem 1.4.Searches for JumpCloud system by displayname wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by displayname wildcard beginning" name="Get-JCSystem 1.4.Searches for JumpCloud system by displayname wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by displayname wildcard beginning and end" name="Get-JCSystem 1.4.Searches for JumpCloud system by displayname wildcard beginning and end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by version" name="Get-JCSystem 1.4.Searches for JumpCloud system by version" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by templateName wildcard end" name="Get-JCSystem 1.4.Searches for JumpCloud system by templateName wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by templateName wildcard beginning" name="Get-JCSystem 1.4.Searches for JumpCloud system by templateName wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by templateName wildcard beginning and end" name="Get-JCSystem 1.4.Searches for JumpCloud system by templateName wildcard beginning and end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by os wildcard end" name="Get-JCSystem 1.4.Searches for JumpCloud system by os wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by os wildcard beginning" name="Get-JCSystem 1.4.Searches for JumpCloud system by os wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by os wildcard beginning and end" name="Get-JCSystem 1.4.Searches for JumpCloud system by os wildcard beginning and end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by remoteIP wildcard end" name="Get-JCSystem 1.4.Searches for JumpCloud system by remoteIP wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by remoteIP wildcard beginning" name="Get-JCSystem 1.4.Searches for JumpCloud system by remoteIP wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by remoteIP wildcard beginning and end" name="Get-JCSystem 1.4.Searches for JumpCloud system by remoteIP wildcard beginning and end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by serialNumber wildcard end" name="Get-JCSystem 1.4.Searches for JumpCloud system by serialNumber wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by serialNumber wildcard beginning" name="Get-JCSystem 1.4.Searches for JumpCloud system by serialNumber wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by serialNumber wildcard beginning and end" name="Get-JCSystem 1.4.Searches for JumpCloud system by serialNumber wildcard beginning and end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by agentVersion wildcard end" name="Get-JCSystem 1.4.Searches for JumpCloud system by agentVersion wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by agentVersion wildcard beginning" name="Get-JCSystem 1.4.Searches for JumpCloud system by agentVersion wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by agentVersion wildcard beginning and end" name="Get-JCSystem 1.4.Searches for JumpCloud system by agentVersion wildcard beginning and end" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by systemTimezone" name="Get-JCSystem 1.4.Searches for JumpCloud system by systemTimezone" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by active" name="Get-JCSystem 1.4.Searches for JumpCloud system by active" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by allowMultiFactorAuthentication" name="Get-JCSystem 1.4.Searches for JumpCloud system by allowMultiFactorAuthentication" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by allowPublicKeyAuthentication" name="Get-JCSystem 1.4.Searches for JumpCloud system by allowPublicKeyAuthentication" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by allowSshPasswordAuthentication" name="Get-JCSystem 1.4.Searches for JumpCloud system by allowSshPasswordAuthentication" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by allowSshRootLogin" name="Get-JCSystem 1.4.Searches for JumpCloud system by allowSshRootLogin" time="0" asserts="0" success="False" />
              <test-case description="Searches for JumpCloud system by modifySSHDConfig" name="Get-JCSystem 1.4.Searches for JumpCloud system by modifySSHDConfig" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud system using hostname, filterDateProperty created and before" name="Get-JCSystem 1.4.Searches for a JumpCloud system using hostname, filterDateProperty created and before" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud system using hostname, filterDateProperty created and after" name="Get-JCSystem 1.4.Searches for a JumpCloud system using hostname, filterDateProperty created and after" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud system and uses returns properties created" name="Get-JCSystem 1.4.Searches for a JumpCloud system and uses returns properties created" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud system and uses return properties active" name="Get-JCSystem 1.4.Searches for a JumpCloud system and uses return properties active" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud system using returns properties agentVersion" name="Get-JCSystem 1.4.Searches for a JumpCloud system using returns properties agentVersion" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud system using returns properties allowMultiFactorAuthentication" name="Get-JCSystem 1.4.Searches for a JumpCloud system using returns properties allowMultiFactorAuthentication" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud system using hostname and returns all properties " name="Get-JCSystem 1.4.Searches for a JumpCloud system using hostname and returns all properties " time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCSystem 1.15.2" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystem 1.15.2">
            <results>
              <test-case description="Searches for a JumpCloud system using filterDateProperty lastContact and after" name="Get-JCSystem 1.15.2.Searches for a JumpCloud system using filterDateProperty lastContact and after" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud system using filterDateProperty lastContact and before" name="Get-JCSystem 1.15.2.Searches for a JumpCloud system using filterDateProperty lastContact and before" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1" executed="True" result="Success" success="True" time="20.3248" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Get-JCSystemInsights.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCSystemInsights Tests" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests">
            <results>
              <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across all systems." executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across all systems.">
                <results>
                  <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across all systems..Running command: Get-JCSystemInsights -Table:('battery');" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across all systems..Running command: Get-JCSystemInsights -Table:('battery');">
                    <results>
                      <test-case description="Where Error is NullOrEmpty" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across all systems..Running command: Get-JCSystemInsights -Table:('battery');.Where Error is NullOrEmpty" time="0" asserts="0" success="False" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems." executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems.">
                <results>
                  <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'">
                    <results>
                      <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -Id:('5a4c05ccaad9ac5f68b31022');" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -Id:('5a4c05ccaad9ac5f68b31022');">
                        <results>
                          <test-case description="Where Error is NullOrEmpty" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -Id:('5a4c05ccaad9ac5f68b31022');.Where Error is NullOrEmpty" time="0" asserts="0" success="False" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ById') -SearchByValue:('5a4c05ccaad9ac5f68b31022');" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ById') -SearchByValue:('5a4c05ccaad9ac5f68b31022');">
                        <results>
                          <test-case description="Where Error is NullOrEmpty" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ById') -SearchByValue:('5a4c05ccaad9ac5f68b31022');.Where Error is NullOrEmpty" time="0" asserts="0" success="False" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -Id:('5a4c05ccaad9ac5f68b31022', '5c2e2d012a28b62befe395a3');" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -Id:('5a4c05ccaad9ac5f68b31022', '5c2e2d012a28b62befe395a3');">
                        <results>
                          <test-case description="Where Error is NullOrEmpty" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -Id:('5a4c05ccaad9ac5f68b31022', '5c2e2d012a28b62befe395a3');.Where Error is NullOrEmpty" time="0" asserts="0" success="False" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ById') -SearchByValue:('5a4c05ccaad9ac5f68b31022', '5c2e2d012a28b62befe395a3');" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ById') -SearchByValue:('5a4c05ccaad9ac5f68b31022', '5c2e2d012a28b62befe395a3');">
                        <results>
                          <test-case description="Where Error is NullOrEmpty" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ById'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ById') -SearchByValue:('5a4c05ccaad9ac5f68b31022', '5c2e2d012a28b62befe395a3');.Where Error is NullOrEmpty" time="0" asserts="0" success="False" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'">
                    <results>
                      <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -Name:('AWS Linux');" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -Name:('AWS Linux');">
                        <results>
                          <test-case description="Where Error is NullOrEmpty" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -Name:('AWS Linux');.Where Error is NullOrEmpty" time="0" asserts="0" success="False" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ByName') -SearchByValue:('AWS Linux');" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ByName') -SearchByValue:('AWS Linux');">
                        <results>
                          <test-case description="Where Error is NullOrEmpty" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ByName') -SearchByValue:('AWS Linux');.Where Error is NullOrEmpty" time="0" asserts="0" success="False" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -Name:('AWS Linux', 'ubuntu1');" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -Name:('AWS Linux', 'ubuntu1');">
                        <results>
                          <test-case description="Where Error is NullOrEmpty" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -Name:('AWS Linux', 'ubuntu1');.Where Error is NullOrEmpty" time="0" asserts="0" success="False" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ByName') -SearchByValue:('AWS Linux', 'ubuntu1');" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ByName') -SearchByValue:('AWS Linux', 'ubuntu1');">
                        <results>
                          <test-case description="Where Error is NullOrEmpty" name="Get-JCSystemInsights Tests.Tests returning records of a specific table across specified systems..Testing by: ByName'.Running command: Get-JCSystemInsights -Table:('battery') -SearchBy:('ByName') -SearchByValue:('AWS Linux', 'ubuntu1');.Where Error is NullOrEmpty" time="0" asserts="0" success="False" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Remove-JCSystem.tests.ps1" executed="True" result="Success" success="True" time="0.0033" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Remove-JCSystem.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Set-JCSystem.tests.ps1" executed="True" result="Success" success="True" time="0.7056" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Systems\Set-JCSystem.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Set-JCSystem 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCSystem 1.0">
            <results>
              <test-case description="Updates the DisplayName and then set it back" name="Set-JCSystem 1.0.Updates the DisplayName and then set it back" time="0" asserts="0" success="False" />
              <test-case description="Updates a system SshPasswordAuthentication -eq True" name="Set-JCSystem 1.0.Updates a system SshPasswordAuthentication -eq True" time="0" asserts="0" success="False" />
              <test-case description="Updates a system SshPasswordAuthentication -eq False" name="Set-JCSystem 1.0.Updates a system SshPasswordAuthentication -eq False" time="0" asserts="0" success="False" />
              <test-case description="Updates a system allowSshRootLogin -eq True" name="Set-JCSystem 1.0.Updates a system allowSshRootLogin -eq True" time="0" asserts="0" success="False" />
              <test-case description="Updates a system allowSshRootLogin -eq False" name="Set-JCSystem 1.0.Updates a system allowSshRootLogin -eq False" time="0" asserts="0" success="False" />
              <test-case description="Updates a system allowMultiFactorAuthentication -eq False" name="Set-JCSystem 1.0.Updates a system allowMultiFactorAuthentication -eq False" time="0" asserts="0" success="False" />
              <test-case description="Updates a system allowPublicKeyAuthentication -eq True" name="Set-JCSystem 1.0.Updates a system allowPublicKeyAuthentication -eq True" time="0" asserts="0" success="False" />
              <test-case description="Updates a system allowPublicKeyAuthentication -eq False" name="Set-JCSystem 1.0.Updates a system allowPublicKeyAuthentication -eq False" time="0" asserts="0" success="False" />
              <test-case description="Enables systemInsights for a system" name="Set-JCSystem 1.0.Enables systemInsights for a system" time="0" asserts="0" success="False" />
              <test-case description="Disables systemInsights on a system" name="Set-JCSystem 1.0.Disables systemInsights on a system" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Add-JCSystemUser.tests.ps1" executed="True" result="Success" success="True" time="0.795" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Add-JCSystemUser.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Add-JCSystemUser 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Add-JCSystemUser 1.0">
            <results>
              <test-case description="Adds a single user to a single system by Username and SystemID" name="Add-JCSystemUser 1.0.Adds a single user to a single system by Username and SystemID" time="0" asserts="0" success="False" />
              <test-case description="Adds a single user to a single system by UserID and SystemID" name="Add-JCSystemUser 1.0.Adds a single user to a single system by UserID and SystemID" time="0" asserts="0" success="False" />
              <test-case description="Adds two users to a single system using the pipeline and system ID" name="Add-JCSystemUser 1.0.Adds two users to a single system using the pipeline and system ID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Add-JCSystemUser 1.1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Add-JCSystemUser 1.1.0">
            <results>
              <test-case description="Adds a JumpCloud User to a JumpCloud System with admin $False using username" name="Add-JCSystemUser 1.1.0.Adds a JumpCloud User to a JumpCloud System with admin $False using username" time="0" asserts="0" success="False" />
              <test-case description="Adds a JumpCloud User to a JumpCloud System with admin False using username" name="Add-JCSystemUser 1.1.0.Adds a JumpCloud User to a JumpCloud System with admin False using username" time="0" asserts="0" success="False" />
              <test-case description="Adds a JumpCloud User to a JumpCloud System with admin $False using UserID" name="Add-JCSystemUser 1.1.0.Adds a JumpCloud User to a JumpCloud System with admin $False using UserID" time="0" asserts="0" success="False" />
              <test-case description="Adds a JumpCloud User to a JumpCloud System with admin $True using UserID" name="Add-JCSystemUser 1.1.0.Adds a JumpCloud User to a JumpCloud System with admin $True using UserID" time="0" asserts="0" success="False" />
              <test-case description="Adds a JumpCloud User to a JumpCloud System with admin True using username" name="Add-JCSystemUser 1.1.0.Adds a JumpCloud User to a JumpCloud System with admin True using username" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Get-JCSystemUser.tests.ps1" executed="True" result="Success" success="True" time="0.7087" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Get-JCSystemUser.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCSystemUser 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCSystemUser 1.0">
            <results>
              <test-case description="Gets JumpCloud system users for a system using SystemID" name="Get-JCSystemUser 1.0.Gets JumpCloud system users for a system using SystemID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Remove-JCSystemUser.tests.ps1" executed="True" result="Success" success="True" time="0.9542" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Remove-JCSystemUser.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Remove-JCSystemUser 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Remove-JCSystemUser 1.0">
            <results>
              <test-case description="Adds a single user to a single system by Username and SystemID" name="Remove-JCSystemUser 1.0.Adds a single user to a single system by Username and SystemID" time="0" asserts="0" success="False" />
              <test-case description="Removes a single user froma single system by Username and SystemID with default warning" name="Remove-JCSystemUser 1.0.Removes a single user froma single system by Username and SystemID with default warning" time="0" asserts="0" success="False" />
              <test-case description="Adds a single user to a single system by UserID and SystemID" name="Remove-JCSystemUser 1.0.Adds a single user to a single system by UserID and SystemID" time="0" asserts="0" success="False" />
              <test-case description="Removes a single user froma single system with -force parameter" name="Remove-JCSystemUser 1.0.Removes a single user froma single system with -force parameter" time="0" asserts="0" success="False" />
              <test-case description="Adds two users to a single system using the pipeline and system ID" name="Remove-JCSystemUser 1.0.Adds two users to a single system using the pipeline and system ID" time="0" asserts="0" success="False" />
              <test-case description="Removes two users from a single system using the pipeline and system ID using the -force parameter" name="Remove-JCSystemUser 1.0.Removes two users from a single system using the pipeline and system ID using the -force parameter" time="0" asserts="0" success="False" />
              <test-case description="Adds back two users to a single system using the pipeline and system ID" name="Remove-JCSystemUser 1.0.Adds back two users to a single system using the pipeline and system ID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Set-JCSystemUser.tests.ps1" executed="True" result="Success" success="True" time="0.7001" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\SystemUsers\Set-JCSystemUser.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Set-JCSystemUser 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCSystemUser 1.0">
            <results>
              <test-case description="Sets a standard user to an admin user using username" name="Set-JCSystemUser 1.0.Sets a standard user to an admin user using username" time="0" asserts="0" success="False" />
              <test-case description="Sets an admin user to a standard user using username" name="Set-JCSystemUser 1.0.Sets an admin user to a standard user using username" time="0" asserts="0" success="False" />
              <test-case description="Sets a standard user to an admin user using UserID" name="Set-JCSystemUser 1.0.Sets a standard user to an admin user using UserID" time="0" asserts="0" success="False" />
              <test-case description="Sets an admin user to a standard user using UserID" name="Set-JCSystemUser 1.0.Sets an admin user to a standard user using UserID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Get-JCUser.tests.ps1" executed="True" result="Success" success="True" time="1.4098" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Get-JCUser.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCUser 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCUser 1.0">
            <results>
              <test-case description="Gets all JumpCloud users using Get-JCuser" name="Get-JCUser 1.0.Gets all JumpCloud users using Get-JCuser" time="0" asserts="0" success="False" />
              <test-case description="Get a single JumpCloud user by Username" name="Get-JCUser 1.0.Get a single JumpCloud user by Username" time="0" asserts="0" success="False" />
              <test-case description="Get a single JumpCloud user by UserID" name="Get-JCUser 1.0.Get a single JumpCloud user by UserID" time="0" asserts="0" success="False" />
              <test-case description="Get multiple JumpCloud users via the pipeline using User ID" name="Get-JCUser 1.0.Get multiple JumpCloud users via the pipeline using User ID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCUser 1.1" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCUser 1.1">
            <results>
              <test-case description="Searches a JumpCloud user by username" name="Get-JCUser 1.1.Searches a JumpCloud user by username" time="0" asserts="0" success="False" />
              <test-case description="Searches a JumpCloud user by lastname" name="Get-JCUser 1.1.Searches a JumpCloud user by lastname" time="0" asserts="0" success="False" />
              <test-case description="Searches a JumpCloud user by firstname" name="Get-JCUser 1.1.Searches a JumpCloud user by firstname" time="0" asserts="0" success="False" />
              <test-case description="Searches a JumpCloud user by email" name="Get-JCUser 1.1.Searches a JumpCloud user by email" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCUser 1.4" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCUser 1.4">
            <results>
              <test-case description="Returns a JumpCloud user by UserID" name="Get-JCUser 1.4.Returns a JumpCloud user by UserID" time="0" asserts="0" success="False" />
              <test-case description="Returns all JumpCloud users" name="Get-JCUser 1.4.Returns all JumpCloud users" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and wildcard end" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and wildcard beginning" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and wildcard beginning and wildcard end" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and wildcard beginning and wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by firstname and wildcard end" name="Get-JCUser 1.4.Searches for a JumpCloud user by firstname and wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by firstname and wildcard beginning" name="Get-JCUser 1.4.Searches for a JumpCloud user by firstname and wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by firstname and wildcard beginning and wildcard end" name="Get-JCUser 1.4.Searches for a JumpCloud user by firstname and wildcard beginning and wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by lastname and wildcard end" name="Get-JCUser 1.4.Searches for a JumpCloud user by lastname and wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by lastname and wildcard beginning" name="Get-JCUser 1.4.Searches for a JumpCloud user by lastname and wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by lastname and wildcard beginning and wildcard end" name="Get-JCUser 1.4.Searches for a JumpCloud user by lastname and wildcard beginning and wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by email and wildcard beginning" name="Get-JCUser 1.4.Searches for a JumpCloud user by email and wildcard beginning" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by email and wildcard beginning and wildcard end" name="Get-JCUser 1.4.Searches for a JumpCloud user by email and wildcard beginning and wildcard end" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and sudo" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and sudo" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and enable_managed_uid" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and enable_managed_uid" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and activated" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and activated" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and password_expired" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and password_expired" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and passwordless_sudo" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and passwordless_sudo" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and externally_managed" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and externally_managed" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and ldap_binding_user" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and ldap_binding_user" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and enable_user_portal_multifactor" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and enable_user_portal_multifactor" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and totp_enabled" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and totp_enabled" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and allow_public_key" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and allow_public_key" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and samba_service_user" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and samba_service_user" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user by username and password_never_expires" name="Get-JCUser 1.4.Searches for a JumpCloud user by username and password_never_expires" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user using username, filterDateProperty created and before" name="Get-JCUser 1.4.Searches for a JumpCloud user using username, filterDateProperty created and before" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user using username, filterDateProperty created and after" name="Get-JCUser 1.4.Searches for a JumpCloud user using username, filterDateProperty created and after" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user using username and returns on the username property" name="Get-JCUser 1.4.Searches for a JumpCloud user using username and returns on the username property" time="0" asserts="0" success="False" />
              <test-case description="Searches for a JumpCloud user using username and returns all properties " name="Get-JCUser 1.4.Searches for a JumpCloud user using username and returns all properties " time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCUser with new attributes 1.8.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCUser with new attributes 1.8.0">
            <results>
              <test-case description="Searches for a user by middlename" name="Get-JCUser with new attributes 1.8.0.Searches for a user by middlename" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by displayname" name="Get-JCUser with new attributes 1.8.0.Searches for a user by displayname" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by jobTitle" name="Get-JCUser with new attributes 1.8.0.Searches for a user by jobTitle" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by employeeIdentifier" name="Get-JCUser with new attributes 1.8.0.Searches for a user by employeeIdentifier" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by department" name="Get-JCUser with new attributes 1.8.0.Searches for a user by department" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by costCenter" name="Get-JCUser with new attributes 1.8.0.Searches for a user by costCenter" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by company" name="Get-JCUser with new attributes 1.8.0.Searches for a user by company" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by employeeType" name="Get-JCUser with new attributes 1.8.0.Searches for a user by employeeType" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by description" name="Get-JCUser with new attributes 1.8.0.Searches for a user by description" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by location" name="Get-JCUser with new attributes 1.8.0.Searches for a user by location" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-JCUser 1.12" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCUser 1.12">
            <results>
              <test-case description="Searches for a user by external_source_type" name="Get-JCUser 1.12.Searches for a user by external_source_type" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by external_dn" name="Get-JCUser 1.12.Searches for a user by external_dn" time="0" asserts="0" success="False" />
              <test-case description="Searches for a user by external_dn and external_source_type" name="Get-JCUser 1.12.Searches for a user by external_dn and external_source_type" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\New-JCUser.tests.ps1" executed="True" result="Success" success="True" time="1.8604" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\New-JCUser.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="New-JCUser 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="New-JCUser 1.0">
            <results>
              <test-case description="Creates a new user" name="New-JCUser 1.0.Creates a new user" time="0" asserts="0" success="False" />
              <test-case description="Creates a new User allow_public_key -eq True " name="New-JCUser 1.0.Creates a new User allow_public_key -eq True " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User allow_public_key -eq False " name="New-JCUser 1.0.Creates a new User allow_public_key -eq False " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User sudo -eq True " name="New-JCUser 1.0.Creates a new User sudo -eq True " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User sudo -eq False " name="New-JCUser 1.0.Creates a new User sudo -eq False " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User enable_managed_uid -eq True " name="New-JCUser 1.0.Creates a new User enable_managed_uid -eq True " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User enable_managed_uid -eq False " name="New-JCUser 1.0.Creates a new User enable_managed_uid -eq False " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User passwordless_sudo -eq True " name="New-JCUser 1.0.Creates a new User passwordless_sudo -eq True " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User passwordless_sudo -eq False " name="New-JCUser 1.0.Creates a new User passwordless_sudo -eq False " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User ldap_binding_user -eq True " name="New-JCUser 1.0.Creates a new User ldap_binding_user -eq True " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User ldap_binding_user -eq False " name="New-JCUser 1.0.Creates a new User ldap_binding_user -eq False " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User enable_user_portal_multifactor -eq True " name="New-JCUser 1.0.Creates a new User enable_user_portal_multifactor -eq True " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User enable_user_portal_multifactor -eq False " name="New-JCUser 1.0.Creates a new User enable_user_portal_multifactor -eq False " time="0" asserts="0" success="False" />
              <test-case description="Creates a new User sets unix_uid" name="New-JCUser 1.0.Creates a new User sets unix_uid" time="0" asserts="0" success="False" />
              <test-case description="Creates a new User sets unix_guid" name="New-JCUser 1.0.Creates a new User sets unix_guid" time="0" asserts="0" success="False" />
              <test-case description="Creates a new User with 1 custom attributes" name="New-JCUser 1.0.Creates a new User with 1 custom attributes" time="0" asserts="0" success="False" />
              <test-case description="Creates a new User with 3 custom attributes" name="New-JCUser 1.0.Creates a new User with 3 custom attributes" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Add-JCUser 1.3.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Add-JCUser 1.3.0">
            <results>
              <test-case description="Adds a JumpCloud user with a high UID and GUID" name="Add-JCUser 1.3.0.Adds a JumpCloud user with a high UID and GUID" time="0" asserts="0" success="False" />
              <test-case description="Adds a JumpCloud user with password_never_expires false " name="Add-JCUser 1.3.0.Adds a JumpCloud user with password_never_expires false " time="0" asserts="0" success="False" />
              <test-case description="Adds a JumpCloud user with password_never_expires true " name="Add-JCUser 1.3.0.Adds a JumpCloud user with password_never_expires true " time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-JCUser 1.8.0" executed="True" result="Success" success="True" time="0" asserts="0" description="New-JCUser 1.8.0">
            <results>
              <test-case description="Creates a user with the extended attributes" name="New-JCUser 1.8.0.Creates a user with the extended attributes" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with a work address using work city and state" name="New-JCUser 1.8.0.Creates a user with a work address using work city and state" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with a work address using work locality and region" name="New-JCUser 1.8.0.Creates a user with a work address using work locality and region" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with a home address using home locality and region" name="New-JCUser 1.8.0.Creates a user with a home address using home locality and region" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with a home address using home city and state" name="New-JCUser 1.8.0.Creates a user with a home address using home city and state" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with a home address and work address" name="New-JCUser 1.8.0.Creates a user with a home address and work address" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with a home address and work address and new user attributes" name="New-JCUser 1.8.0.Creates a user with a home address and work address and new user attributes" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with mobile number" name="New-JCUser 1.8.0.Creates a user with mobile number" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with home number" name="New-JCUser 1.8.0.Creates a user with home number" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with work number" name="New-JCUser 1.8.0.Creates a user with work number" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with work mobile number" name="New-JCUser 1.8.0.Creates a user with work mobile number" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with work fax number" name="New-JCUser 1.8.0.Creates a user with work fax number" time="0" asserts="0" success="False" />
              <test-case description="Creates a user with all numbers" name="New-JCUser 1.8.0.Creates a user with all numbers" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-JCUser MFA with enrollment periods 1.10" executed="True" result="Success" success="True" time="0" asserts="0" description="New-JCUser MFA with enrollment periods 1.10">
            <results>
              <test-case description="Creates a new user with enable_user_portal_multifactor -eq True" name="New-JCUser MFA with enrollment periods 1.10.Creates a new user with enable_user_portal_multifactor -eq True" time="0" asserts="0" success="False" />
              <test-case description="Creates a new user with enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays" name="New-JCUser MFA with enrollment periods 1.10.Creates a new user with enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays" time="0" asserts="0" success="False" />
              <test-case description="Creates a new user with enable_user_portal_multifactor -eq True and a 365 days specified for EnrollmentDays" name="New-JCUser MFA with enrollment periods 1.10.Creates a new user with enable_user_portal_multifactor -eq True and a 365 days specified for EnrollmentDays" time="0" asserts="0" success="False" />
              <test-case description="Creates a new user with enable_user_portal_multifactor -eq True with Attributes" name="New-JCUser MFA with enrollment periods 1.10.Creates a new user with enable_user_portal_multifactor -eq True with Attributes" time="0" asserts="0" success="False" />
              <test-case description="Creates a new user with enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays with Attributes" name="New-JCUser MFA with enrollment periods 1.10.Creates a new user with enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays with Attributes" time="0" asserts="0" success="False" />
              <test-case description="Creates a new user with enable_user_portal_multifactor -eq True and a 30 days via the pipeline" name="New-JCUser MFA with enrollment periods 1.10.Creates a new user with enable_user_portal_multifactor -eq True and a 30 days via the pipeline" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-JCUser with suspend param 1.15" executed="True" result="Success" success="True" time="0" asserts="0" description="New-JCUser with suspend param 1.15">
            <results>
              <test-case description="Creates a new User suspended -eq True " name="New-JCUser with suspend param 1.15.Creates a new User suspended -eq True " time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Remove-JCUser.tests.ps1" executed="True" result="Success" success="True" time="0.744" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Remove-JCUser.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Remove-JCUser 1.10" executed="True" result="Success" success="True" time="0" asserts="0" description="Remove-JCUser 1.10">
            <results>
              <test-case description="Remove-JCUser 1.0" name="Remove-JCUser 1.10.Remove-JCUser 1.0" time="0" asserts="0" success="False" />
              <test-case description="Removes JumpCloud User by Username and -force" name="Remove-JCUser 1.10.Removes JumpCloud User by Username and -force" time="0" asserts="0" success="False" />
              <test-case description="Removes JumpCloud User by UserID and -force" name="Remove-JCUser 1.10.Removes JumpCloud User by UserID and -force" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Set-JCUser.tests.ps1" executed="True" result="Success" success="True" time="4.044" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Users\Set-JCUser.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Set-JCUser 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUser 1.0">
            <results>
              <test-case description="Updates the FirstName using -ByID and -UserID" name="Set-JCUser 1.0.Updates the FirstName using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates the FirstName using -Username" name="Set-JCUser 1.0.Updates the FirstName using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates the LastName using -ByID and -UserID" name="Set-JCUser 1.0.Updates the LastName using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates the LastName using -Username" name="Set-JCUser 1.0.Updates the LastName using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates the email using -ByID and -UserID" name="Set-JCUser 1.0.Updates the email using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates the email using -Username" name="Set-JCUser 1.0.Updates the email using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates the password using -ByID and -UserID" name="Set-JCUser 1.0.Updates the password using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates the password using -Username" name="Set-JCUser 1.0.Updates the password using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User allow_public_key -eq True using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User allow_public_key -eq True using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User allow_public_key -eq False using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User allow_public_key -eq False using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User allow_public_key -eq True using -Username" name="Set-JCUser 1.0.Updates a User allow_public_key -eq True using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User allow_public_key -eq False using -Username" name="Set-JCUser 1.0.Updates a User allow_public_key -eq False using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User sudo -eq True using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User sudo -eq True using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User sudo -eq False using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User sudo -eq False using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User sudo -eq True using -Username" name="Set-JCUser 1.0.Updates a User sudo -eq True using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User sudo -eq False using -Username" name="Set-JCUser 1.0.Updates a User sudo -eq False using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User enable_managed_uid -eq True using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User enable_managed_uid -eq True using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User enable_managed_uid -eq False using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User enable_managed_uid -eq False using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User enable_managed_uid -eq True using -Username" name="Set-JCUser 1.0.Updates a User enable_managed_uid -eq True using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User enable_managed_uid -eq False using -Username" name="Set-JCUser 1.0.Updates a User enable_managed_uid -eq False using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User account_locked -eq True using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User account_locked -eq True using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User account_locked -eq False using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User account_locked -eq False using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User account_locked -eq True using -Username" name="Set-JCUser 1.0.Updates a User account_locked -eq True using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User account_locked -eq False using -Username" name="Set-JCUser 1.0.Updates a User account_locked -eq False using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User passwordless_sudo -eq True using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User passwordless_sudo -eq True using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User passwordless_sudo -eq False using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User passwordless_sudo -eq False using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User passwordless_sudo -eq True using -Username" name="Set-JCUser 1.0.Updates a User passwordless_sudo -eq True using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User passwordless_sudo -eq False using -Username" name="Set-JCUser 1.0.Updates a User passwordless_sudo -eq False using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User externally_managed -eq True using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User externally_managed -eq True using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User externally_managed -eq False using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User externally_managed -eq False using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User externally_managed -eq True using -Username" name="Set-JCUser 1.0.Updates a User externally_managed -eq True using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User externally_managed -eq False using -Username" name="Set-JCUser 1.0.Updates a User externally_managed -eq False using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User ldap_binding_user -eq True using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User ldap_binding_user -eq True using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User ldap_binding_user -eq False using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User ldap_binding_user -eq False using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User ldap_binding_user -eq True using -Username" name="Set-JCUser 1.0.Updates a User ldap_binding_user -eq True using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User ldap_binding_user -eq False using -Username" name="Set-JCUser 1.0.Updates a User ldap_binding_user -eq False using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User enable_user_portal_multifactor -eq True using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User enable_user_portal_multifactor -eq True using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User enable_user_portal_multifactor -eq False using -ByID and -UserID" name="Set-JCUser 1.0.Updates a User enable_user_portal_multifactor -eq False using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates a User enable_user_portal_multifactor -eq True using -Username" name="Set-JCUser 1.0.Updates a User enable_user_portal_multifactor -eq True using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates a User enable_user_portal_multifactor -eq False using -Username" name="Set-JCUser 1.0.Updates a User enable_user_portal_multifactor -eq False using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates the unix_uid using -ByID and -UserID" name="Set-JCUser 1.0.Updates the unix_uid using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates the unix_uid using -Username" name="Set-JCUser 1.0.Updates the unix_uid using -Username" time="0" asserts="0" success="False" />
              <test-case description="Updates the unix_guid using -ByID and -UserID" name="Set-JCUser 1.0.Updates the unix_guid using -ByID and -UserID" time="0" asserts="0" success="False" />
              <test-case description="Updates the unix_guid using -Username" name="Set-JCUser 1.0.Updates the unix_guid using -Username" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-JCUser - CustomAttributes 1.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUser - CustomAttributes 1.0">
            <results>
              <test-case description="Updates a custom attribute on a User" name="Set-JCUser - CustomAttributes 1.0.Updates a custom attribute on a User" time="0" asserts="0" success="False" />
              <test-case description="Adds a custom attribute to a User" name="Set-JCUser - CustomAttributes 1.0.Adds a custom attribute to a User" time="0" asserts="0" success="False" />
              <test-case description="Removes a custom attribute from a User" name="Set-JCUser - CustomAttributes 1.0.Removes a custom attribute from a User" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-JCUser 1.3.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUser 1.3.0">
            <results>
              <test-case description="Updates the UID and GUID to 2000000" name="Set-JCUser 1.3.0.Updates the UID and GUID to 2000000" time="0" asserts="0" success="False" />
              <test-case description="Updates a JumpCloud user to password_never_expires false " name="Set-JCUser 1.3.0.Updates a JumpCloud user to password_never_expires false " time="0" asserts="0" success="False" />
              <test-case description="Updates a JumpCloud user to password_never_expires true " name="Set-JCUser 1.3.0.Updates a JumpCloud user to password_never_expires true " time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-JCUser 1.8.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUser 1.8.0">
            <results>
              <test-case description="Updates a users middle name" name="Set-JCUser 1.8.0.Updates a users middle name" time="0" asserts="0" success="False" />
              <test-case description="Updates a users displayName" name="Set-JCUser 1.8.0.Updates a users displayName" time="0" asserts="0" success="False" />
              <test-case description="Updates a users jobTitle" name="Set-JCUser 1.8.0.Updates a users jobTitle" time="0" asserts="0" success="False" />
              <test-case description="Updates a users employeeIdentifier" name="Set-JCUser 1.8.0.Updates a users employeeIdentifier" time="0" asserts="0" success="False" />
              <test-case description="Updates a users department" name="Set-JCUser 1.8.0.Updates a users department" time="0" asserts="0" success="False" />
              <test-case description="Updates a users costCenter" name="Set-JCUser 1.8.0.Updates a users costCenter" time="0" asserts="0" success="False" />
              <test-case description="Updates a users company" name="Set-JCUser 1.8.0.Updates a users company" time="0" asserts="0" success="False" />
              <test-case description="Updates a users employeeType" name="Set-JCUser 1.8.0.Updates a users employeeType" time="0" asserts="0" success="False" />
              <test-case description="Updates a users description" name="Set-JCUser 1.8.0.Updates a users description" time="0" asserts="0" success="False" />
              <test-case description="Updates a users location" name="Set-JCUser 1.8.0.Updates a users location" time="0" asserts="0" success="False" />
              <test-case description="Updates a users middle name using userID" name="Set-JCUser 1.8.0.Updates a users middle name using userID" time="0" asserts="0" success="False" />
              <test-case description="Updates a users displayName using userID" name="Set-JCUser 1.8.0.Updates a users displayName using userID" time="0" asserts="0" success="False" />
              <test-case description="Updates a users jobTitle using userID" name="Set-JCUser 1.8.0.Updates a users jobTitle using userID" time="0" asserts="0" success="False" />
              <test-case description="Updates a users employeeIdentifier using userID" name="Set-JCUser 1.8.0.Updates a users employeeIdentifier using userID" time="0" asserts="0" success="False" />
              <test-case description="Updates a users department using userID" name="Set-JCUser 1.8.0.Updates a users department using userID" time="0" asserts="0" success="False" />
              <test-case description="Updates a users costCenter using userID" name="Set-JCUser 1.8.0.Updates a users costCenter using userID" time="0" asserts="0" success="False" />
              <test-case description="Updates a users company using userID" name="Set-JCUser 1.8.0.Updates a users company using userID" time="0" asserts="0" success="False" />
              <test-case description="Updates a users employeeType using userID" name="Set-JCUser 1.8.0.Updates a users employeeType using userID" time="0" asserts="0" success="False" />
              <test-case description="Updates a users description using userID" name="Set-JCUser 1.8.0.Updates a users description using userID" time="0" asserts="0" success="False" />
              <test-case description="Updates a users location using userID" name="Set-JCUser 1.8.0.Updates a users location using userID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-JCUser addresses 1.8.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUser addresses 1.8.0">
            <results>
              <test-case description="Updates a users work address" name="Set-JCUser addresses 1.8.0.Updates a users work address" time="0" asserts="0" success="False" />
              <test-case description="Updates a users home address" name="Set-JCUser addresses 1.8.0.Updates a users home address" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-JCUser phoneNumbers 1.8.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUser phoneNumbers 1.8.0">
            <results>
              <test-case description="Updates a users mobile number" name="Set-JCUser phoneNumbers 1.8.0.Updates a users mobile number" time="0" asserts="0" success="False" />
              <test-case description="Updates a users home number" name="Set-JCUser phoneNumbers 1.8.0.Updates a users home number" time="0" asserts="0" success="False" />
              <test-case description="Updates a users work number" name="Set-JCUser phoneNumbers 1.8.0.Updates a users work number" time="0" asserts="0" success="False" />
              <test-case description="Updates a users work_mobile_number" name="Set-JCUser phoneNumbers 1.8.0.Updates a users work_mobile_number" time="0" asserts="0" success="False" />
              <test-case description="Updates a users work_fax_number" name="Set-JCUser phoneNumbers 1.8.0.Updates a users work_fax_number" time="0" asserts="0" success="False" />
              <test-case description="Updates two numbers on a user" name="Set-JCUser phoneNumbers 1.8.0.Updates two numbers on a user" time="0" asserts="0" success="False" />
              <test-case description="Updates all numbers on a user" name="Set-JCUser phoneNumbers 1.8.0.Updates all numbers on a user" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-JCuser users phoneNumbers and attributes 1.8.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCuser users phoneNumbers and attributes 1.8.0">
            <results>
              <test-case description="Updates a number and adds an attribute" name="Set-JCuser users phoneNumbers and attributes 1.8.0.Updates a number and adds an attribute" time="0" asserts="0" success="False" />
              <test-case description="Updates a number and adds two attribute" name="Set-JCuser users phoneNumbers and attributes 1.8.0.Updates a number and adds two attribute" time="0" asserts="0" success="False" />
              <test-case description="Updates a number and updates an attribute" name="Set-JCuser users phoneNumbers and attributes 1.8.0.Updates a number and updates an attribute" time="0" asserts="0" success="False" />
              <test-case description="Updates a number and updates two attribute" name="Set-JCuser users phoneNumbers and attributes 1.8.0.Updates a number and updates two attribute" time="0" asserts="0" success="False" />
              <test-case description="Updates a number and removes an attribute" name="Set-JCuser users phoneNumbers and attributes 1.8.0.Updates a number and removes an attribute" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-JCUser MFA Enrollment periods 1.10" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUser MFA Enrollment periods 1.10">
            <results>
              <test-case description="Updates an existing user with enable_user_portal_multifactor -eq False to enable_user_portal_multifactor -eq True " name="Set-JCUser MFA Enrollment periods 1.10.Updates an existing user with enable_user_portal_multifactor -eq False to enable_user_portal_multifactor -eq True " time="0" asserts="0" success="False" />
              <test-case description="Updates an existing user with enable_user_portal_multifactor -eq False to enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays" name="Set-JCUser MFA Enrollment periods 1.10.Updates an existing user with enable_user_portal_multifactor -eq False to enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays" time="0" asserts="0" success="False" />
              <test-case description="Updates an existing user with enable_user_portal_multifactor -eq True and a 365 days specified for EnrollmentDays" name="Set-JCUser MFA Enrollment periods 1.10.Updates an existing user with enable_user_portal_multifactor -eq True and a 365 days specified for EnrollmentDays" time="0" asserts="0" success="False" />
              <test-case description="Updates an existing user with enable_user_portal_multifactor -eq False to enable_user_portal_multifactor -eq True -ByID" name="Set-JCUser MFA Enrollment periods 1.10.Updates an existing user with enable_user_portal_multifactor -eq False to enable_user_portal_multifactor -eq True -ByID" time="0" asserts="0" success="False" />
              <test-case description="Updates an existing user with enable_user_portal_multifactor -eq False to enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays -ByID" name="Set-JCUser MFA Enrollment periods 1.10.Updates an existing user with enable_user_portal_multifactor -eq False to enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays -ByID" time="0" asserts="0" success="False" />
              <test-case description="Updates an existing user with enable_user_portal_multifactor -eq True and a 365 days specified for EnrollmentDays -ByID" name="Set-JCUser MFA Enrollment periods 1.10.Updates an existing user with enable_user_portal_multifactor -eq True and a 365 days specified for EnrollmentDays -ByID" time="0" asserts="0" success="False" />
              <test-case description="Updates an existing user with enable_user_portal_multifactor -eq True with Attributes" name="Set-JCUser MFA Enrollment periods 1.10.Updates an existing user with enable_user_portal_multifactor -eq True with Attributes" time="0" asserts="0" success="False" />
              <test-case description="Updates an existing user with enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays with Attributes" name="Set-JCUser MFA Enrollment periods 1.10.Updates an existing user with enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays with Attributes" time="0" asserts="0" success="False" />
              <test-case description="Updates an existing user with enable_user_portal_multifactor -eq True with removeAttributes" name="Set-JCUser MFA Enrollment periods 1.10.Updates an existing user with enable_user_portal_multifactor -eq True with removeAttributes" time="0" asserts="0" success="False" />
              <test-case description="Updates an existing user with enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays with removeAttributes" name="Set-JCUser MFA Enrollment periods 1.10.Updates an existing user with enable_user_portal_multifactor -eq True and a 30 days specified for EnrollmentDays with removeAttributes" time="0" asserts="0" success="False" />
              <test-case description="Disabled MFA enrollment by setting enable_user_portal_multifactor to False" name="Set-JCUser MFA Enrollment periods 1.10.Disabled MFA enrollment by setting enable_user_portal_multifactor to False" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-JCUser bug fix 1.10.2" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUser bug fix 1.10.2">
            <results>
              <test-case description="Updates a users home poBox" name="Set-JCUser bug fix 1.10.2.Updates a users home poBox" time="0" asserts="0" success="False" />
              <test-case description="Updates a users work poBox" name="Set-JCUser bug fix 1.10.2.Updates a users work poBox" time="0" asserts="0" success="False" />
              <test-case description="Updates a mobile_number" name="Set-JCUser bug fix 1.10.2.Updates a mobile_number" time="0" asserts="0" success="False" />
              <test-case description="Updates a users home poBox and work poBox" name="Set-JCUser bug fix 1.10.2.Updates a users home poBox and work poBox" time="0" asserts="0" success="False" />
              <test-case description="Updates a mobile_number and work_number" name="Set-JCUser bug fix 1.10.2.Updates a mobile_number and work_number" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-JCUser 1.12" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUser 1.12">
            <results>
              <test-case description="Sets a users external_source_type" name="Set-JCUser 1.12.Sets a users external_source_type" time="0" asserts="0" success="False" />
              <test-case description="Sets a users external_dn" name="Set-JCUser 1.12.Sets a users external_dn" time="0" asserts="0" success="False" />
              <test-case description="Sets a users external_dn and external_source_type" name="Set-JCUser 1.12.Sets a users external_dn and external_source_type" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-JCUser with Suspend param 1.15" executed="True" result="Success" success="True" time="0" asserts="0" description="Set-JCUser with Suspend param 1.15">
            <results>
              <test-case description="Updates a user suspended -eq True " name="Set-JCUser with Suspend param 1.15.Updates a user suspended -eq True " time="0" asserts="0" success="False" />
              <test-case description="Updates a user suspended -eq false " name="Set-JCUser with Suspend param 1.15.Updates a user suspended -eq false " time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\Get-JCBackup.tests.ps1" executed="True" result="Success" success="True" time="0.0079" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\Get-JCBackup.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-JCBackup 1.5.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Get-JCBackup 1.5.0">
            <results>
              <test-case description="Backs up JumpCloud users" name="Get-JCBackup 1.5.0.Backs up JumpCloud users" time="0" asserts="0" success="False" />
              <test-case description="Backs up JumpCloud users" name="Get-JCBackup 1.5.0.Backs up JumpCloud users" time="0" asserts="0" success="False" />
              <test-case description="Backs up JumpCloud systems" name="Get-JCBackup 1.5.0.Backs up JumpCloud systems" time="0" asserts="0" success="False" />
              <test-case description="Backs up JumpCloud system users" name="Get-JCBackup 1.5.0.Backs up JumpCloud system users" time="0" asserts="0" success="False" />
              <test-case description="Backs up JumpCloud system groups" name="Get-JCBackup 1.5.0.Backs up JumpCloud system groups" time="0" asserts="0" success="False" />
              <test-case description="Backs up JumpCloud user groups" name="Get-JCBackup 1.5.0.Backs up JumpCloud user groups" time="0" asserts="0" success="False" />
              <test-case description="Backs up JumpCloud users and user groups" name="Get-JCBackup 1.5.0.Backs up JumpCloud users and user groups" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\Send-JCPasswordReset.tests.ps1" executed="True" result="Success" success="True" time="0.7494" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\Send-JCPasswordReset.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Sent-JCPasswordReset 1.6.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Sent-JCPasswordReset 1.6.0">
            <results>
              <test-case description="Sends a single password reset email by username" name="Sent-JCPasswordReset 1.6.0.Sends a single password reset email by username" time="0" asserts="0" success="False" />
              <test-case description="Sends a single password reset email by UserID" name="Sent-JCPasswordReset 1.6.0.Sends a single password reset email by UserID" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.tests.ps1" executed="True" result="Success" success="True" time="1.6164" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\Import-JCUsersFromCSV.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Import-JCUserFromCSV 1.1" executed="True" result="Success" success="True" time="0" asserts="0" description="Import-JCUserFromCSV 1.1">
            <results>
              <test-case description="Imports users from the ImportExample_Pester_Test using -Force" name="Import-JCUserFromCSV 1.1.Imports users from the ImportExample_Pester_Test using -Force" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.user user" name="Import-JCUserFromCSV 1.1.Verifies a.user user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.user user" name="Import-JCUserFromCSV 1.1.Verifies ia.user user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.bound.std user" name="Import-JCUserFromCSV 1.1.Verifies a.bound.std user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.bound.true1 user" name="Import-JCUserFromCSV 1.1.Verifies a.bound.true1 user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.bound.false1 user" name="Import-JCUserFromCSV 1.1.Verifies a.bound.false1 user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.bound.true2 user" name="Import-JCUserFromCSV 1.1.Verifies a.bound.true2 user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.bound.false2 user" name="Import-JCUserFromCSV 1.1.Verifies a.bound.false2 user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.bound.std user" name="Import-JCUserFromCSV 1.1.Verifies ia.bound.std user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.bound.true1 user" name="Import-JCUserFromCSV 1.1.Verifies ia.bound.true1 user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.bound.false1 user" name="Import-JCUserFromCSV 1.1.Verifies ia.bound.false1 user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.bound.true2 user" name="Import-JCUserFromCSV 1.1.Verifies ia.bound.true2 user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.bound.false2 user" name="Import-JCUserFromCSV 1.1.Verifies ia.bound.false2 user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.1group user" name="Import-JCUserFromCSV 1.1.Verifies a.1group user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.1group user" name="Import-JCUserFromCSV 1.1.Verifies ia.1group user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.2group user" name="Import-JCUserFromCSV 1.1.Verifies a.2group user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.2group user" name="Import-JCUserFromCSV 1.1.Verifies ia.2group user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.5group user" name="Import-JCUserFromCSV 1.1.Verifies a.5group user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.5group user" name="Import-JCUserFromCSV 1.1.Verifies ia.5group user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.1attr user" name="Import-JCUserFromCSV 1.1.Verifies a.1attr user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.1attr user" name="Import-JCUserFromCSV 1.1.Verifies ia.1attr user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.2attr user" name="Import-JCUserFromCSV 1.1.Verifies a.2attr user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.2attr user" name="Import-JCUserFromCSV 1.1.Verifies ia.2attr user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.5attr user" name="Import-JCUserFromCSV 1.1.Verifies a.5attr user" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.5attr user" name="Import-JCUserFromCSV 1.1.Verifies ia.5attr user" time="0" asserts="0" success="False" />
              <test-case description="Verifies a.all" name="Import-JCUserFromCSV 1.1.Verifies a.all" time="0" asserts="0" success="False" />
              <test-case description="Verifies ia.all" name="Import-JCUserFromCSV 1.1.Verifies ia.all" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Import-JCUsersFromCSV 1.8.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Import-JCUsersFromCSV 1.8.0">
            <results>
              <test-case description="Imports users from a CSV populated with telephony attributes" name="Import-JCUsersFromCSV 1.8.0.Imports users from a CSV populated with telephony attributes" time="0" asserts="0" success="False" />
              <test-case description="Imports users from a CSV populated with information attributes" name="Import-JCUsersFromCSV 1.8.0.Imports users from a CSV populated with information attributes" time="0" asserts="0" success="False" />
              <test-case description="Imports users from a CSV populated with user location attributes" name="Import-JCUsersFromCSV 1.8.0.Imports users from a CSV populated with user location attributes" time="0" asserts="0" success="False" />
              <test-case description="Imports users from a CSV populated with telephony, location, and user information attributes" name="Import-JCUsersFromCSV 1.8.0.Imports users from a CSV populated with telephony, location, and user information attributes" time="0" asserts="0" success="False" />
              <test-case description="Imports users from a CSV populated with telephony, location, user information attributes, group additions, system binding, and custom attributes" name="Import-JCUsersFromCSV 1.8.0.Imports users from a CSV populated with telephony, location, user information attributes, group additions, system binding, and custom attributes" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.tests.ps1" executed="True" result="Success" success="True" time="0.0033" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\New-JCImportTemplate.tests.ps1">
        <results />
      </test-suite>
      <test-suite type="TestFixture" name="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.tests.ps1" executed="True" result="Success" success="True" time="2.3571" asserts="0" description="D:\a\1\s\PowerShell\JumpCloud Module\Tests\Public\Utilities\CSV_Import\Update-JCUsersFromCSV.tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Update-JCUsersFromCSV 1.8.0" executed="True" result="Success" success="True" time="0" asserts="0" description="Update-JCUsersFromCSV 1.8.0">
            <results>
              <test-case description="Updates users from a CSV populated with telephony attributes" name="Update-JCUsersFromCSV 1.8.0.Updates users from a CSV populated with telephony attributes" time="0" asserts="0" success="False" />
              <test-case description="Updates users from a CSV populated with information attributes" name="Update-JCUsersFromCSV 1.8.0.Updates users from a CSV populated with information attributes" time="0" asserts="0" success="False" />
              <test-case description="Updates users from a CSV populated with user location attributes" name="Update-JCUsersFromCSV 1.8.0.Updates users from a CSV populated with user location attributes" time="0" asserts="0" success="False" />
              <test-case description="Updates users from a CSV populated with user telephony, information, and location attributes" name="Update-JCUsersFromCSV 1.8.0.Updates users from a CSV populated with user telephony, information, and location attributes" time="0" asserts="0" success="False" />
              <test-case description="Updates users from a CSV populated with user telephony, information, and location attributes and custom attributes" name="Update-JCUsersFromCSV 1.8.0.Updates users from a CSV populated with user telephony, information, and location attributes and custom attributes" time="0" asserts="0" success="False" />
              <test-case description="Updates users from a CSV populated with no information" name="Update-JCUsersFromCSV 1.8.0.Updates users from a CSV populated with no information" time="0" asserts="0" success="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>